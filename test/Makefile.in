# Makefile.in generated by automake 1.12.3 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2012 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@WANT_LTR_TRUE@am__append_1 = -lrt 
check_PROGRAMS = twostage_lorgparser_test$(EXEEXT)
subdir = test
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/depcomp
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_boost_base.m4 \
	$(top_srcdir)/m4/ax_boost_filesystem.m4 \
	$(top_srcdir)/m4/ax_boost_program_options.m4 \
	$(top_srcdir)/m4/ax_boost_regex.m4 \
	$(top_srcdir)/m4/ax_boost_system.m4 \
	$(top_srcdir)/m4/ax_boost_thread.m4 \
	$(top_srcdir)/m4/ax_boost_unit_test_framework.m4 \
	$(top_srcdir)/m4/ax_tbb.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
PROGRAMS = $(noinst_PROGRAMS)
am__objects_1 = twostage_lorgparser_test-AnnotationInfo.$(OBJEXT) \
	twostage_lorgparser_test-BinaryTrainingTree.$(OBJEXT) \
	twostage_lorgparser_test-Edge.$(OBJEXT) \
	twostage_lorgparser_test-TrainingNode.$(OBJEXT) \
	twostage_lorgparser_test-AnnotatedLabelsInfo.$(OBJEXT) \
	twostage_lorgparser_test-compact_binary_rules.$(OBJEXT) \
	twostage_lorgparser_test-compact_binary_rules_annotated.$(OBJEXT) \
	twostage_lorgparser_test-compact_binary_rules_simple.$(OBJEXT) \
	twostage_lorgparser_test-Grammar.$(OBJEXT) \
	twostage_lorgparser_test-ArabicIGMapping.$(OBJEXT) \
	twostage_lorgparser_test-ArabicUMapping.$(OBJEXT) \
	twostage_lorgparser_test-ArabicUNVMapping.$(OBJEXT) \
	twostage_lorgparser_test-BaselineFrenchUMapping.$(OBJEXT) \
	twostage_lorgparser_test-BasicLexicon.$(OBJEXT) \
	twostage_lorgparser_test-BerkeleyEnglishUMapping.$(OBJEXT) \
	twostage_lorgparser_test-BerkeleyLexicon.$(OBJEXT) \
	twostage_lorgparser_test-EnglishIGMapping.$(OBJEXT) \
	twostage_lorgparser_test-FrenchIGMapping.$(OBJEXT) \
	twostage_lorgparser_test-ItalianIGMapping.$(OBJEXT) \
	twostage_lorgparser_test-Lexicon.$(OBJEXT) \
	twostage_lorgparser_test-LexiconFactory.$(OBJEXT) \
	twostage_lorgparser_test-WordSignatureFactory.$(OBJEXT) \
	twostage_lorgparser_test-ParserCKYBest.$(OBJEXT) \
	twostage_lorgparser_test-PCKYBestCell.$(OBJEXT) \
	twostage_lorgparser_test-BRule.$(OBJEXT) \
	twostage_lorgparser_test-BRuleTraining.$(OBJEXT) \
	twostage_lorgparser_test-LexicalRule.$(OBJEXT) \
	twostage_lorgparser_test-LexicalRuleTraining.$(OBJEXT) \
	twostage_lorgparser_test-Production.$(OBJEXT) \
	twostage_lorgparser_test-Rule.$(OBJEXT) \
	twostage_lorgparser_test-URule.$(OBJEXT) \
	twostage_lorgparser_test-URuleTraining.$(OBJEXT) \
	twostage_lorgparser_test-ConfigTable.$(OBJEXT) \
	twostage_lorgparser_test-AnnotHistoriesParser.$(OBJEXT) \
	twostage_lorgparser_test-BURuleInputParser.$(OBJEXT) \
	twostage_lorgparser_test-PTBInputParser.$(OBJEXT) \
	twostage_lorgparser_test-RuleInputParser.$(OBJEXT) \
	twostage_lorgparser_test-PtbPsTree.$(OBJEXT) \
	twostage_lorgparser_test-RandomGenerator.$(OBJEXT) \
	twostage_lorgparser_test-SymbolTable.$(OBJEXT) \
	twostage_lorgparser_test-Tagger.$(OBJEXT) \
	twostage_lorgparser_test-Tokeniser.$(OBJEXT) \
	twostage_lorgparser_test-Word.$(OBJEXT)
am_twostage_lorgparser_test_OBJECTS = $(am__objects_1) \
	twostage_lorgparser_test-ParserEdgeTest.$(OBJEXT) \
	twostage_lorgparser_test-ParserInitTest.$(OBJEXT) \
	twostage_lorgparser_test-ParserRulesTest.$(OBJEXT) \
	twostage_lorgparser_test-ParserTreeTest.$(OBJEXT) \
	twostage_lorgparser_test-main.$(OBJEXT)
twostage_lorgparser_test_OBJECTS =  \
	$(am_twostage_lorgparser_test_OBJECTS)
am__DEPENDENCIES_1 =
twostage_lorgparser_test_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
twostage_lorgparser_test_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(twostage_lorgparser_test_SOURCES)
DIST_SOURCES = $(twostage_lorgparser_test_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
BOOST_FILESYSTEM_LIB = @BOOST_FILESYSTEM_LIB@
BOOST_LDFLAGS = @BOOST_LDFLAGS@
BOOST_PROGRAM_OPTIONS_LIB = @BOOST_PROGRAM_OPTIONS_LIB@
BOOST_REGEX_LIB = @BOOST_REGEX_LIB@
BOOST_SYSTEM_LIB = @BOOST_SYSTEM_LIB@
BOOST_THREAD_LIB = @BOOST_THREAD_LIB@
BOOST_UNIT_TEST_FRAMEWORK_LIB = @BOOST_UNIT_TEST_FRAMEWORK_LIB@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@ $(am__append_1)
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TBB_CPPFLAGS = @TBB_CPPFLAGS@
TBB_LDFLAGS = @TBB_LDFLAGS@
TBB_LIBS = @TBB_LIBS@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
noinst_PROGRAMS = $(check_PROGRAMS)
AM_CPPFLAGS = -I../src -I../src/utils -I../src/classifier -I../src/lexicon -I../src/parsers -I../src/edges -I../src/grammars
common_sources = ../src/Bracketing.h \
    ../src/ChartCKY.h \
    ../src/classifier/Classifier.h \
    ../src/classifier/FreqDist.h \
    ../src/classifier/NaiveBayesClassifier.h \
    ../src/classifier/ProbModel.h \
    ../src/edges/AnnotationInfo.h \
    ../src/edges/BinaryTrainingTree.h \
    ../src/edges/Edge.h \
    ../src/edges/maxrule_functions.h \
    ../src/edges/MaxRuleProbability.h \
    ../src/edges/MaxRuleProbabilityKB.h \
    ../src/edges/MaxRuleProbabilityMultiple.h \
    ../src/edges/PackedEdge.h \
    ../src/edges/PackedEdgeDaughters.h \
    ../src/edges/PackedEdgeProbability.h \
    ../src/edges/TrainingNode.h \
    ../src/edges/ViterbiProbability.h \
    ../src/grammars/AnnotatedLabelsInfo.h \
    ../src/grammars/compact_binary_rules.h \
    ../src/grammars/Grammar.h \
    ../src/grammars/GrammarAnnotated.h \
    ../src/lexicon/ArabicIGMapping.h \
    ../src/lexicon/ArabicUMapping.h \
    ../src/lexicon/ArabicUNVMapping.h \
    ../src/lexicon/BaselineFrenchUMapping.h \
    ../src/lexicon/BasicLexicon.h \
    ../src/lexicon/BerkeleyEnglishUMapping.h \
    ../src/lexicon/BerkeleyLexicon.h \
    ../src/lexicon/EnglishIGMapping.h \
    ../src/lexicon/FrenchIGMapping.h \
    ../src/lexicon/ItalianIGMapping.h \
    ../src/lexicon/Lexicon.h \
    ../src/lexicon/LexiconFactory.h \
    ../src/lexicon/WordSignature.h \
    ../src/lexicon/WordSignatureFactory.h \
    ../src/parsers/ParserCKY.h \
    ../src/parsers/ParserCKYAll.h \
    ../src/parsers/ParserCKYAllFactory.h \
    ../src/parsers/ParserCKYAllMaxVar.h \
    ../src/parsers/ParserCKYAllMaxVarKB.h \
    ../src/parsers/ParserCKYAllMaxVarMultiple.h \
    ../src/parsers/ParserCKYAllViterbi.h \
    ../src/parsers/ParserCKYBest.h \
    ../src/ParseSolution.h \
    ../src/PCKYAllCell.h \
    ../src/PCKYBestCell.h \
    ../src/rules/AnnotatedRule.h \
    ../src/rules/BRule.h \
    ../src/rules/BRuleC2f.h \
    ../src/rules/BRuleTraining.h \
    ../src/rules/C2f.h \
    ../src/rules/LexicalRule.h \
    ../src/rules/LexicalRuleC2f.h \
    ../src/rules/LexicalRuleTraining.h \
    ../src/rules/MetaProduction.h \
    ../src/rules/Production.h \
    ../src/rules/Rule.h \
    ../src/rules/Types4Rules.h \
    ../src/rules/URule.h \
    ../src/rules/URuleC2f.h \
    ../src/rules/URuleTraining.h \
    ../src/TagGuesser.h \
    ../src/utils/ConfigTable.h \
    ../src/utils/data_parsers/AnnotHistoriesParser.h \
    ../src/utils/data_parsers/BURuleInputParser.h \
    ../src/utils/data_parsers/ParseError.h \
    ../src/utils/data_parsers/PTBInputParser.h \
    ../src/utils/data_parsers/RuleInputParser.h \
    ../src/utils/EnglishSpec.h \
    ../src/utils/LorgConstants.h \
    ../src/utils/LorgOptions.h \
    ../src/utils/PsTree.h \
    ../src/utils/PtbPsTree.h \
    ../src/utils/RandomGenerator.h \
    ../src/utils/RuleVect2Map.h \
    ../src/utils/SymbolTable.h \
    ../src/utils/Tagger.h \
    ../src/utils/Tokeniser.h \
    ../src/utils/TokeniserSpec.h \
    ../src/utils/Tree.h \
    ../src/utils/tree_detail/BreadthFirstTreeIterator.h \
    ../src/utils/tree_detail/ConstDepthFirstTreeIterator.h \
    ../src/utils/tree_detail/ConstLeafTreeIterator.h \
    ../src/utils/tree_detail/ConstTreeIterator.h \
    ../src/utils/tree_detail/DepthFirstTreeIterator.h \
    ../src/utils/tree_detail/LeafTreeIterator.h \
    ../src/utils/tree_detail/Node.h \
    ../src/utils/tree_detail/TreeIterator.h \
    ../src/Word.h \
    ../src/edges/AnnotationInfo.cpp \
    ../src/edges/BinaryTrainingTree.cpp \
    ../src/edges/Edge.cpp \
    ../src/edges/TrainingNode.cpp \
    ../src/grammars/AnnotatedLabelsInfo.cpp \
    ../src/grammars/compact_binary_rules.cpp \
    ../src/grammars/compact_binary_rules_annotated.cpp \
    ../src/grammars/compact_binary_rules_simple.cpp \
    ../src/grammars/Grammar.cpp \
    ../src/lexicon/ArabicIGMapping.cpp \
    ../src/lexicon/ArabicUMapping.cpp \
    ../src/lexicon/ArabicUNVMapping.cpp \
    ../src/lexicon/BaselineFrenchUMapping.cpp \
    ../src/lexicon/BasicLexicon.cpp \
    ../src/lexicon/BerkeleyEnglishUMapping.cpp \
    ../src/lexicon/BerkeleyLexicon.cpp \
    ../src/lexicon/EnglishIGMapping.cpp \
    ../src/lexicon/FrenchIGMapping.cpp \
    ../src/lexicon/ItalianIGMapping.cpp \
    ../src/lexicon/Lexicon.cpp \
    ../src/lexicon/LexiconFactory.cpp \
    ../src/lexicon/WordSignatureFactory.cpp \
    ../src/parsers/ParserCKYBest.cpp \
    ../src/PCKYBestCell.cpp \
    ../src/rules/BRule.cpp \
    ../src/rules/BRuleTraining.cpp \
    ../src/rules/LexicalRule.cpp \
    ../src/rules/LexicalRuleTraining.cpp \
    ../src/rules/Production.cpp \
    ../src/rules/Rule.cpp \
    ../src/rules/URule.cpp \
    ../src/rules/URuleTraining.cpp \
    ../src/utils/ConfigTable.cpp \
    ../src/utils/data_parsers/AnnotHistoriesParser.cpp \
    ../src/utils/data_parsers/BURuleInputParser.cpp \
    ../src/utils/data_parsers/PTBInputParser.cpp \
    ../src/utils/data_parsers/RuleInputParser.cpp \
    ../src/utils/PtbPsTree.cpp \
    ../src/utils/RandomGenerator.cpp \
    ../src/utils/SymbolTable.cpp \
    ../src/utils/Tagger.cpp \
    ../src/utils/Tokeniser.cpp \
    ../src/Word.cpp

twostage_lorgparser_test_SOURCES = $(common_sources) \
	ParserEdgeTest.cpp ParserInitTest.cpp ParserRulesTest.cpp \
	ParserTreeTest.cpp main.cpp
twostage_lorgparser_test_CPPFLAGS = $(BOOST_CPPFLAGS) $(TBB_CPPFLAGS) $(AM_CPPFLAGS)
twostage_lorgparser_test_CXXFLAGS = -O6 -Wall -Wextra -pipe
twostage_lorgparser_test_LDADD = $(BOOST_LDFLAGS) $(BOOST_REGEX_LIB) $(BOOST_PROGRAM_OPTIONS_LIB) $(BOOST_SYSTEM_LIB) $(BOOST_THREAD_LIB) $(BOOST_UNIT_TEST_FRAMEWORK_LIB) $(TBB_LDFLAGS) $(TBB_LIBS)
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign test/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign test/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
twostage_lorgparser_test$(EXEEXT): $(twostage_lorgparser_test_OBJECTS) $(twostage_lorgparser_test_DEPENDENCIES) $(EXTRA_twostage_lorgparser_test_DEPENDENCIES) 
	@rm -f twostage_lorgparser_test$(EXEEXT)
	$(twostage_lorgparser_test_LINK) $(twostage_lorgparser_test_OBJECTS) $(twostage_lorgparser_test_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-AnnotHistoriesParser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-AnnotatedLabelsInfo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-AnnotationInfo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-ArabicIGMapping.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-ArabicUMapping.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-ArabicUNVMapping.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-BRule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-BRuleTraining.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-BURuleInputParser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-BaselineFrenchUMapping.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-BasicLexicon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-BerkeleyEnglishUMapping.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-BerkeleyLexicon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-BinaryTrainingTree.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-ConfigTable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-Edge.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-EnglishIGMapping.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-FrenchIGMapping.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-Grammar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-ItalianIGMapping.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-LexicalRule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-LexicalRuleTraining.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-Lexicon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-LexiconFactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-PCKYBestCell.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-PTBInputParser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-ParserCKYBest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-ParserEdgeTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-ParserInitTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-ParserRulesTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-ParserTreeTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-Production.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-PtbPsTree.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-RandomGenerator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-Rule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-RuleInputParser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-SymbolTable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-Tagger.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-Tokeniser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-TrainingNode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-URule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-URuleTraining.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-Word.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-WordSignatureFactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-compact_binary_rules.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-compact_binary_rules_annotated.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-compact_binary_rules_simple.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser_test-main.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

twostage_lorgparser_test-AnnotationInfo.o: ../src/edges/AnnotationInfo.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-AnnotationInfo.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-AnnotationInfo.Tpo -c -o twostage_lorgparser_test-AnnotationInfo.o `test -f '../src/edges/AnnotationInfo.cpp' || echo '$(srcdir)/'`../src/edges/AnnotationInfo.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-AnnotationInfo.Tpo $(DEPDIR)/twostage_lorgparser_test-AnnotationInfo.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/edges/AnnotationInfo.cpp' object='twostage_lorgparser_test-AnnotationInfo.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-AnnotationInfo.o `test -f '../src/edges/AnnotationInfo.cpp' || echo '$(srcdir)/'`../src/edges/AnnotationInfo.cpp

twostage_lorgparser_test-AnnotationInfo.obj: ../src/edges/AnnotationInfo.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-AnnotationInfo.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-AnnotationInfo.Tpo -c -o twostage_lorgparser_test-AnnotationInfo.obj `if test -f '../src/edges/AnnotationInfo.cpp'; then $(CYGPATH_W) '../src/edges/AnnotationInfo.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/edges/AnnotationInfo.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-AnnotationInfo.Tpo $(DEPDIR)/twostage_lorgparser_test-AnnotationInfo.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/edges/AnnotationInfo.cpp' object='twostage_lorgparser_test-AnnotationInfo.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-AnnotationInfo.obj `if test -f '../src/edges/AnnotationInfo.cpp'; then $(CYGPATH_W) '../src/edges/AnnotationInfo.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/edges/AnnotationInfo.cpp'; fi`

twostage_lorgparser_test-BinaryTrainingTree.o: ../src/edges/BinaryTrainingTree.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-BinaryTrainingTree.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-BinaryTrainingTree.Tpo -c -o twostage_lorgparser_test-BinaryTrainingTree.o `test -f '../src/edges/BinaryTrainingTree.cpp' || echo '$(srcdir)/'`../src/edges/BinaryTrainingTree.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-BinaryTrainingTree.Tpo $(DEPDIR)/twostage_lorgparser_test-BinaryTrainingTree.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/edges/BinaryTrainingTree.cpp' object='twostage_lorgparser_test-BinaryTrainingTree.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-BinaryTrainingTree.o `test -f '../src/edges/BinaryTrainingTree.cpp' || echo '$(srcdir)/'`../src/edges/BinaryTrainingTree.cpp

twostage_lorgparser_test-BinaryTrainingTree.obj: ../src/edges/BinaryTrainingTree.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-BinaryTrainingTree.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-BinaryTrainingTree.Tpo -c -o twostage_lorgparser_test-BinaryTrainingTree.obj `if test -f '../src/edges/BinaryTrainingTree.cpp'; then $(CYGPATH_W) '../src/edges/BinaryTrainingTree.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/edges/BinaryTrainingTree.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-BinaryTrainingTree.Tpo $(DEPDIR)/twostage_lorgparser_test-BinaryTrainingTree.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/edges/BinaryTrainingTree.cpp' object='twostage_lorgparser_test-BinaryTrainingTree.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-BinaryTrainingTree.obj `if test -f '../src/edges/BinaryTrainingTree.cpp'; then $(CYGPATH_W) '../src/edges/BinaryTrainingTree.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/edges/BinaryTrainingTree.cpp'; fi`

twostage_lorgparser_test-Edge.o: ../src/edges/Edge.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-Edge.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-Edge.Tpo -c -o twostage_lorgparser_test-Edge.o `test -f '../src/edges/Edge.cpp' || echo '$(srcdir)/'`../src/edges/Edge.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-Edge.Tpo $(DEPDIR)/twostage_lorgparser_test-Edge.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/edges/Edge.cpp' object='twostage_lorgparser_test-Edge.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-Edge.o `test -f '../src/edges/Edge.cpp' || echo '$(srcdir)/'`../src/edges/Edge.cpp

twostage_lorgparser_test-Edge.obj: ../src/edges/Edge.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-Edge.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-Edge.Tpo -c -o twostage_lorgparser_test-Edge.obj `if test -f '../src/edges/Edge.cpp'; then $(CYGPATH_W) '../src/edges/Edge.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/edges/Edge.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-Edge.Tpo $(DEPDIR)/twostage_lorgparser_test-Edge.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/edges/Edge.cpp' object='twostage_lorgparser_test-Edge.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-Edge.obj `if test -f '../src/edges/Edge.cpp'; then $(CYGPATH_W) '../src/edges/Edge.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/edges/Edge.cpp'; fi`

twostage_lorgparser_test-TrainingNode.o: ../src/edges/TrainingNode.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-TrainingNode.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-TrainingNode.Tpo -c -o twostage_lorgparser_test-TrainingNode.o `test -f '../src/edges/TrainingNode.cpp' || echo '$(srcdir)/'`../src/edges/TrainingNode.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-TrainingNode.Tpo $(DEPDIR)/twostage_lorgparser_test-TrainingNode.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/edges/TrainingNode.cpp' object='twostage_lorgparser_test-TrainingNode.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-TrainingNode.o `test -f '../src/edges/TrainingNode.cpp' || echo '$(srcdir)/'`../src/edges/TrainingNode.cpp

twostage_lorgparser_test-TrainingNode.obj: ../src/edges/TrainingNode.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-TrainingNode.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-TrainingNode.Tpo -c -o twostage_lorgparser_test-TrainingNode.obj `if test -f '../src/edges/TrainingNode.cpp'; then $(CYGPATH_W) '../src/edges/TrainingNode.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/edges/TrainingNode.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-TrainingNode.Tpo $(DEPDIR)/twostage_lorgparser_test-TrainingNode.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/edges/TrainingNode.cpp' object='twostage_lorgparser_test-TrainingNode.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-TrainingNode.obj `if test -f '../src/edges/TrainingNode.cpp'; then $(CYGPATH_W) '../src/edges/TrainingNode.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/edges/TrainingNode.cpp'; fi`

twostage_lorgparser_test-AnnotatedLabelsInfo.o: ../src/grammars/AnnotatedLabelsInfo.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-AnnotatedLabelsInfo.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-AnnotatedLabelsInfo.Tpo -c -o twostage_lorgparser_test-AnnotatedLabelsInfo.o `test -f '../src/grammars/AnnotatedLabelsInfo.cpp' || echo '$(srcdir)/'`../src/grammars/AnnotatedLabelsInfo.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-AnnotatedLabelsInfo.Tpo $(DEPDIR)/twostage_lorgparser_test-AnnotatedLabelsInfo.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/grammars/AnnotatedLabelsInfo.cpp' object='twostage_lorgparser_test-AnnotatedLabelsInfo.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-AnnotatedLabelsInfo.o `test -f '../src/grammars/AnnotatedLabelsInfo.cpp' || echo '$(srcdir)/'`../src/grammars/AnnotatedLabelsInfo.cpp

twostage_lorgparser_test-AnnotatedLabelsInfo.obj: ../src/grammars/AnnotatedLabelsInfo.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-AnnotatedLabelsInfo.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-AnnotatedLabelsInfo.Tpo -c -o twostage_lorgparser_test-AnnotatedLabelsInfo.obj `if test -f '../src/grammars/AnnotatedLabelsInfo.cpp'; then $(CYGPATH_W) '../src/grammars/AnnotatedLabelsInfo.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/grammars/AnnotatedLabelsInfo.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-AnnotatedLabelsInfo.Tpo $(DEPDIR)/twostage_lorgparser_test-AnnotatedLabelsInfo.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/grammars/AnnotatedLabelsInfo.cpp' object='twostage_lorgparser_test-AnnotatedLabelsInfo.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-AnnotatedLabelsInfo.obj `if test -f '../src/grammars/AnnotatedLabelsInfo.cpp'; then $(CYGPATH_W) '../src/grammars/AnnotatedLabelsInfo.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/grammars/AnnotatedLabelsInfo.cpp'; fi`

twostage_lorgparser_test-compact_binary_rules.o: ../src/grammars/compact_binary_rules.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-compact_binary_rules.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-compact_binary_rules.Tpo -c -o twostage_lorgparser_test-compact_binary_rules.o `test -f '../src/grammars/compact_binary_rules.cpp' || echo '$(srcdir)/'`../src/grammars/compact_binary_rules.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-compact_binary_rules.Tpo $(DEPDIR)/twostage_lorgparser_test-compact_binary_rules.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/grammars/compact_binary_rules.cpp' object='twostage_lorgparser_test-compact_binary_rules.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-compact_binary_rules.o `test -f '../src/grammars/compact_binary_rules.cpp' || echo '$(srcdir)/'`../src/grammars/compact_binary_rules.cpp

twostage_lorgparser_test-compact_binary_rules.obj: ../src/grammars/compact_binary_rules.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-compact_binary_rules.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-compact_binary_rules.Tpo -c -o twostage_lorgparser_test-compact_binary_rules.obj `if test -f '../src/grammars/compact_binary_rules.cpp'; then $(CYGPATH_W) '../src/grammars/compact_binary_rules.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/grammars/compact_binary_rules.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-compact_binary_rules.Tpo $(DEPDIR)/twostage_lorgparser_test-compact_binary_rules.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/grammars/compact_binary_rules.cpp' object='twostage_lorgparser_test-compact_binary_rules.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-compact_binary_rules.obj `if test -f '../src/grammars/compact_binary_rules.cpp'; then $(CYGPATH_W) '../src/grammars/compact_binary_rules.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/grammars/compact_binary_rules.cpp'; fi`

twostage_lorgparser_test-compact_binary_rules_annotated.o: ../src/grammars/compact_binary_rules_annotated.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-compact_binary_rules_annotated.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-compact_binary_rules_annotated.Tpo -c -o twostage_lorgparser_test-compact_binary_rules_annotated.o `test -f '../src/grammars/compact_binary_rules_annotated.cpp' || echo '$(srcdir)/'`../src/grammars/compact_binary_rules_annotated.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-compact_binary_rules_annotated.Tpo $(DEPDIR)/twostage_lorgparser_test-compact_binary_rules_annotated.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/grammars/compact_binary_rules_annotated.cpp' object='twostage_lorgparser_test-compact_binary_rules_annotated.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-compact_binary_rules_annotated.o `test -f '../src/grammars/compact_binary_rules_annotated.cpp' || echo '$(srcdir)/'`../src/grammars/compact_binary_rules_annotated.cpp

twostage_lorgparser_test-compact_binary_rules_annotated.obj: ../src/grammars/compact_binary_rules_annotated.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-compact_binary_rules_annotated.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-compact_binary_rules_annotated.Tpo -c -o twostage_lorgparser_test-compact_binary_rules_annotated.obj `if test -f '../src/grammars/compact_binary_rules_annotated.cpp'; then $(CYGPATH_W) '../src/grammars/compact_binary_rules_annotated.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/grammars/compact_binary_rules_annotated.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-compact_binary_rules_annotated.Tpo $(DEPDIR)/twostage_lorgparser_test-compact_binary_rules_annotated.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/grammars/compact_binary_rules_annotated.cpp' object='twostage_lorgparser_test-compact_binary_rules_annotated.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-compact_binary_rules_annotated.obj `if test -f '../src/grammars/compact_binary_rules_annotated.cpp'; then $(CYGPATH_W) '../src/grammars/compact_binary_rules_annotated.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/grammars/compact_binary_rules_annotated.cpp'; fi`

twostage_lorgparser_test-compact_binary_rules_simple.o: ../src/grammars/compact_binary_rules_simple.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-compact_binary_rules_simple.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-compact_binary_rules_simple.Tpo -c -o twostage_lorgparser_test-compact_binary_rules_simple.o `test -f '../src/grammars/compact_binary_rules_simple.cpp' || echo '$(srcdir)/'`../src/grammars/compact_binary_rules_simple.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-compact_binary_rules_simple.Tpo $(DEPDIR)/twostage_lorgparser_test-compact_binary_rules_simple.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/grammars/compact_binary_rules_simple.cpp' object='twostage_lorgparser_test-compact_binary_rules_simple.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-compact_binary_rules_simple.o `test -f '../src/grammars/compact_binary_rules_simple.cpp' || echo '$(srcdir)/'`../src/grammars/compact_binary_rules_simple.cpp

twostage_lorgparser_test-compact_binary_rules_simple.obj: ../src/grammars/compact_binary_rules_simple.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-compact_binary_rules_simple.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-compact_binary_rules_simple.Tpo -c -o twostage_lorgparser_test-compact_binary_rules_simple.obj `if test -f '../src/grammars/compact_binary_rules_simple.cpp'; then $(CYGPATH_W) '../src/grammars/compact_binary_rules_simple.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/grammars/compact_binary_rules_simple.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-compact_binary_rules_simple.Tpo $(DEPDIR)/twostage_lorgparser_test-compact_binary_rules_simple.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/grammars/compact_binary_rules_simple.cpp' object='twostage_lorgparser_test-compact_binary_rules_simple.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-compact_binary_rules_simple.obj `if test -f '../src/grammars/compact_binary_rules_simple.cpp'; then $(CYGPATH_W) '../src/grammars/compact_binary_rules_simple.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/grammars/compact_binary_rules_simple.cpp'; fi`

twostage_lorgparser_test-Grammar.o: ../src/grammars/Grammar.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-Grammar.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-Grammar.Tpo -c -o twostage_lorgparser_test-Grammar.o `test -f '../src/grammars/Grammar.cpp' || echo '$(srcdir)/'`../src/grammars/Grammar.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-Grammar.Tpo $(DEPDIR)/twostage_lorgparser_test-Grammar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/grammars/Grammar.cpp' object='twostage_lorgparser_test-Grammar.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-Grammar.o `test -f '../src/grammars/Grammar.cpp' || echo '$(srcdir)/'`../src/grammars/Grammar.cpp

twostage_lorgparser_test-Grammar.obj: ../src/grammars/Grammar.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-Grammar.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-Grammar.Tpo -c -o twostage_lorgparser_test-Grammar.obj `if test -f '../src/grammars/Grammar.cpp'; then $(CYGPATH_W) '../src/grammars/Grammar.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/grammars/Grammar.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-Grammar.Tpo $(DEPDIR)/twostage_lorgparser_test-Grammar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/grammars/Grammar.cpp' object='twostage_lorgparser_test-Grammar.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-Grammar.obj `if test -f '../src/grammars/Grammar.cpp'; then $(CYGPATH_W) '../src/grammars/Grammar.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/grammars/Grammar.cpp'; fi`

twostage_lorgparser_test-ArabicIGMapping.o: ../src/lexicon/ArabicIGMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-ArabicIGMapping.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-ArabicIGMapping.Tpo -c -o twostage_lorgparser_test-ArabicIGMapping.o `test -f '../src/lexicon/ArabicIGMapping.cpp' || echo '$(srcdir)/'`../src/lexicon/ArabicIGMapping.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-ArabicIGMapping.Tpo $(DEPDIR)/twostage_lorgparser_test-ArabicIGMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/lexicon/ArabicIGMapping.cpp' object='twostage_lorgparser_test-ArabicIGMapping.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-ArabicIGMapping.o `test -f '../src/lexicon/ArabicIGMapping.cpp' || echo '$(srcdir)/'`../src/lexicon/ArabicIGMapping.cpp

twostage_lorgparser_test-ArabicIGMapping.obj: ../src/lexicon/ArabicIGMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-ArabicIGMapping.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-ArabicIGMapping.Tpo -c -o twostage_lorgparser_test-ArabicIGMapping.obj `if test -f '../src/lexicon/ArabicIGMapping.cpp'; then $(CYGPATH_W) '../src/lexicon/ArabicIGMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/lexicon/ArabicIGMapping.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-ArabicIGMapping.Tpo $(DEPDIR)/twostage_lorgparser_test-ArabicIGMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/lexicon/ArabicIGMapping.cpp' object='twostage_lorgparser_test-ArabicIGMapping.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-ArabicIGMapping.obj `if test -f '../src/lexicon/ArabicIGMapping.cpp'; then $(CYGPATH_W) '../src/lexicon/ArabicIGMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/lexicon/ArabicIGMapping.cpp'; fi`

twostage_lorgparser_test-ArabicUMapping.o: ../src/lexicon/ArabicUMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-ArabicUMapping.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-ArabicUMapping.Tpo -c -o twostage_lorgparser_test-ArabicUMapping.o `test -f '../src/lexicon/ArabicUMapping.cpp' || echo '$(srcdir)/'`../src/lexicon/ArabicUMapping.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-ArabicUMapping.Tpo $(DEPDIR)/twostage_lorgparser_test-ArabicUMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/lexicon/ArabicUMapping.cpp' object='twostage_lorgparser_test-ArabicUMapping.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-ArabicUMapping.o `test -f '../src/lexicon/ArabicUMapping.cpp' || echo '$(srcdir)/'`../src/lexicon/ArabicUMapping.cpp

twostage_lorgparser_test-ArabicUMapping.obj: ../src/lexicon/ArabicUMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-ArabicUMapping.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-ArabicUMapping.Tpo -c -o twostage_lorgparser_test-ArabicUMapping.obj `if test -f '../src/lexicon/ArabicUMapping.cpp'; then $(CYGPATH_W) '../src/lexicon/ArabicUMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/lexicon/ArabicUMapping.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-ArabicUMapping.Tpo $(DEPDIR)/twostage_lorgparser_test-ArabicUMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/lexicon/ArabicUMapping.cpp' object='twostage_lorgparser_test-ArabicUMapping.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-ArabicUMapping.obj `if test -f '../src/lexicon/ArabicUMapping.cpp'; then $(CYGPATH_W) '../src/lexicon/ArabicUMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/lexicon/ArabicUMapping.cpp'; fi`

twostage_lorgparser_test-ArabicUNVMapping.o: ../src/lexicon/ArabicUNVMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-ArabicUNVMapping.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-ArabicUNVMapping.Tpo -c -o twostage_lorgparser_test-ArabicUNVMapping.o `test -f '../src/lexicon/ArabicUNVMapping.cpp' || echo '$(srcdir)/'`../src/lexicon/ArabicUNVMapping.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-ArabicUNVMapping.Tpo $(DEPDIR)/twostage_lorgparser_test-ArabicUNVMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/lexicon/ArabicUNVMapping.cpp' object='twostage_lorgparser_test-ArabicUNVMapping.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-ArabicUNVMapping.o `test -f '../src/lexicon/ArabicUNVMapping.cpp' || echo '$(srcdir)/'`../src/lexicon/ArabicUNVMapping.cpp

twostage_lorgparser_test-ArabicUNVMapping.obj: ../src/lexicon/ArabicUNVMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-ArabicUNVMapping.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-ArabicUNVMapping.Tpo -c -o twostage_lorgparser_test-ArabicUNVMapping.obj `if test -f '../src/lexicon/ArabicUNVMapping.cpp'; then $(CYGPATH_W) '../src/lexicon/ArabicUNVMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/lexicon/ArabicUNVMapping.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-ArabicUNVMapping.Tpo $(DEPDIR)/twostage_lorgparser_test-ArabicUNVMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/lexicon/ArabicUNVMapping.cpp' object='twostage_lorgparser_test-ArabicUNVMapping.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-ArabicUNVMapping.obj `if test -f '../src/lexicon/ArabicUNVMapping.cpp'; then $(CYGPATH_W) '../src/lexicon/ArabicUNVMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/lexicon/ArabicUNVMapping.cpp'; fi`

twostage_lorgparser_test-BaselineFrenchUMapping.o: ../src/lexicon/BaselineFrenchUMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-BaselineFrenchUMapping.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-BaselineFrenchUMapping.Tpo -c -o twostage_lorgparser_test-BaselineFrenchUMapping.o `test -f '../src/lexicon/BaselineFrenchUMapping.cpp' || echo '$(srcdir)/'`../src/lexicon/BaselineFrenchUMapping.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-BaselineFrenchUMapping.Tpo $(DEPDIR)/twostage_lorgparser_test-BaselineFrenchUMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/lexicon/BaselineFrenchUMapping.cpp' object='twostage_lorgparser_test-BaselineFrenchUMapping.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-BaselineFrenchUMapping.o `test -f '../src/lexicon/BaselineFrenchUMapping.cpp' || echo '$(srcdir)/'`../src/lexicon/BaselineFrenchUMapping.cpp

twostage_lorgparser_test-BaselineFrenchUMapping.obj: ../src/lexicon/BaselineFrenchUMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-BaselineFrenchUMapping.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-BaselineFrenchUMapping.Tpo -c -o twostage_lorgparser_test-BaselineFrenchUMapping.obj `if test -f '../src/lexicon/BaselineFrenchUMapping.cpp'; then $(CYGPATH_W) '../src/lexicon/BaselineFrenchUMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/lexicon/BaselineFrenchUMapping.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-BaselineFrenchUMapping.Tpo $(DEPDIR)/twostage_lorgparser_test-BaselineFrenchUMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/lexicon/BaselineFrenchUMapping.cpp' object='twostage_lorgparser_test-BaselineFrenchUMapping.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-BaselineFrenchUMapping.obj `if test -f '../src/lexicon/BaselineFrenchUMapping.cpp'; then $(CYGPATH_W) '../src/lexicon/BaselineFrenchUMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/lexicon/BaselineFrenchUMapping.cpp'; fi`

twostage_lorgparser_test-BasicLexicon.o: ../src/lexicon/BasicLexicon.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-BasicLexicon.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-BasicLexicon.Tpo -c -o twostage_lorgparser_test-BasicLexicon.o `test -f '../src/lexicon/BasicLexicon.cpp' || echo '$(srcdir)/'`../src/lexicon/BasicLexicon.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-BasicLexicon.Tpo $(DEPDIR)/twostage_lorgparser_test-BasicLexicon.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/lexicon/BasicLexicon.cpp' object='twostage_lorgparser_test-BasicLexicon.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-BasicLexicon.o `test -f '../src/lexicon/BasicLexicon.cpp' || echo '$(srcdir)/'`../src/lexicon/BasicLexicon.cpp

twostage_lorgparser_test-BasicLexicon.obj: ../src/lexicon/BasicLexicon.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-BasicLexicon.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-BasicLexicon.Tpo -c -o twostage_lorgparser_test-BasicLexicon.obj `if test -f '../src/lexicon/BasicLexicon.cpp'; then $(CYGPATH_W) '../src/lexicon/BasicLexicon.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/lexicon/BasicLexicon.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-BasicLexicon.Tpo $(DEPDIR)/twostage_lorgparser_test-BasicLexicon.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/lexicon/BasicLexicon.cpp' object='twostage_lorgparser_test-BasicLexicon.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-BasicLexicon.obj `if test -f '../src/lexicon/BasicLexicon.cpp'; then $(CYGPATH_W) '../src/lexicon/BasicLexicon.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/lexicon/BasicLexicon.cpp'; fi`

twostage_lorgparser_test-BerkeleyEnglishUMapping.o: ../src/lexicon/BerkeleyEnglishUMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-BerkeleyEnglishUMapping.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-BerkeleyEnglishUMapping.Tpo -c -o twostage_lorgparser_test-BerkeleyEnglishUMapping.o `test -f '../src/lexicon/BerkeleyEnglishUMapping.cpp' || echo '$(srcdir)/'`../src/lexicon/BerkeleyEnglishUMapping.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-BerkeleyEnglishUMapping.Tpo $(DEPDIR)/twostage_lorgparser_test-BerkeleyEnglishUMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/lexicon/BerkeleyEnglishUMapping.cpp' object='twostage_lorgparser_test-BerkeleyEnglishUMapping.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-BerkeleyEnglishUMapping.o `test -f '../src/lexicon/BerkeleyEnglishUMapping.cpp' || echo '$(srcdir)/'`../src/lexicon/BerkeleyEnglishUMapping.cpp

twostage_lorgparser_test-BerkeleyEnglishUMapping.obj: ../src/lexicon/BerkeleyEnglishUMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-BerkeleyEnglishUMapping.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-BerkeleyEnglishUMapping.Tpo -c -o twostage_lorgparser_test-BerkeleyEnglishUMapping.obj `if test -f '../src/lexicon/BerkeleyEnglishUMapping.cpp'; then $(CYGPATH_W) '../src/lexicon/BerkeleyEnglishUMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/lexicon/BerkeleyEnglishUMapping.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-BerkeleyEnglishUMapping.Tpo $(DEPDIR)/twostage_lorgparser_test-BerkeleyEnglishUMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/lexicon/BerkeleyEnglishUMapping.cpp' object='twostage_lorgparser_test-BerkeleyEnglishUMapping.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-BerkeleyEnglishUMapping.obj `if test -f '../src/lexicon/BerkeleyEnglishUMapping.cpp'; then $(CYGPATH_W) '../src/lexicon/BerkeleyEnglishUMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/lexicon/BerkeleyEnglishUMapping.cpp'; fi`

twostage_lorgparser_test-BerkeleyLexicon.o: ../src/lexicon/BerkeleyLexicon.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-BerkeleyLexicon.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-BerkeleyLexicon.Tpo -c -o twostage_lorgparser_test-BerkeleyLexicon.o `test -f '../src/lexicon/BerkeleyLexicon.cpp' || echo '$(srcdir)/'`../src/lexicon/BerkeleyLexicon.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-BerkeleyLexicon.Tpo $(DEPDIR)/twostage_lorgparser_test-BerkeleyLexicon.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/lexicon/BerkeleyLexicon.cpp' object='twostage_lorgparser_test-BerkeleyLexicon.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-BerkeleyLexicon.o `test -f '../src/lexicon/BerkeleyLexicon.cpp' || echo '$(srcdir)/'`../src/lexicon/BerkeleyLexicon.cpp

twostage_lorgparser_test-BerkeleyLexicon.obj: ../src/lexicon/BerkeleyLexicon.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-BerkeleyLexicon.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-BerkeleyLexicon.Tpo -c -o twostage_lorgparser_test-BerkeleyLexicon.obj `if test -f '../src/lexicon/BerkeleyLexicon.cpp'; then $(CYGPATH_W) '../src/lexicon/BerkeleyLexicon.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/lexicon/BerkeleyLexicon.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-BerkeleyLexicon.Tpo $(DEPDIR)/twostage_lorgparser_test-BerkeleyLexicon.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/lexicon/BerkeleyLexicon.cpp' object='twostage_lorgparser_test-BerkeleyLexicon.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-BerkeleyLexicon.obj `if test -f '../src/lexicon/BerkeleyLexicon.cpp'; then $(CYGPATH_W) '../src/lexicon/BerkeleyLexicon.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/lexicon/BerkeleyLexicon.cpp'; fi`

twostage_lorgparser_test-EnglishIGMapping.o: ../src/lexicon/EnglishIGMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-EnglishIGMapping.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-EnglishIGMapping.Tpo -c -o twostage_lorgparser_test-EnglishIGMapping.o `test -f '../src/lexicon/EnglishIGMapping.cpp' || echo '$(srcdir)/'`../src/lexicon/EnglishIGMapping.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-EnglishIGMapping.Tpo $(DEPDIR)/twostage_lorgparser_test-EnglishIGMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/lexicon/EnglishIGMapping.cpp' object='twostage_lorgparser_test-EnglishIGMapping.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-EnglishIGMapping.o `test -f '../src/lexicon/EnglishIGMapping.cpp' || echo '$(srcdir)/'`../src/lexicon/EnglishIGMapping.cpp

twostage_lorgparser_test-EnglishIGMapping.obj: ../src/lexicon/EnglishIGMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-EnglishIGMapping.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-EnglishIGMapping.Tpo -c -o twostage_lorgparser_test-EnglishIGMapping.obj `if test -f '../src/lexicon/EnglishIGMapping.cpp'; then $(CYGPATH_W) '../src/lexicon/EnglishIGMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/lexicon/EnglishIGMapping.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-EnglishIGMapping.Tpo $(DEPDIR)/twostage_lorgparser_test-EnglishIGMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/lexicon/EnglishIGMapping.cpp' object='twostage_lorgparser_test-EnglishIGMapping.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-EnglishIGMapping.obj `if test -f '../src/lexicon/EnglishIGMapping.cpp'; then $(CYGPATH_W) '../src/lexicon/EnglishIGMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/lexicon/EnglishIGMapping.cpp'; fi`

twostage_lorgparser_test-FrenchIGMapping.o: ../src/lexicon/FrenchIGMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-FrenchIGMapping.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-FrenchIGMapping.Tpo -c -o twostage_lorgparser_test-FrenchIGMapping.o `test -f '../src/lexicon/FrenchIGMapping.cpp' || echo '$(srcdir)/'`../src/lexicon/FrenchIGMapping.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-FrenchIGMapping.Tpo $(DEPDIR)/twostage_lorgparser_test-FrenchIGMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/lexicon/FrenchIGMapping.cpp' object='twostage_lorgparser_test-FrenchIGMapping.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-FrenchIGMapping.o `test -f '../src/lexicon/FrenchIGMapping.cpp' || echo '$(srcdir)/'`../src/lexicon/FrenchIGMapping.cpp

twostage_lorgparser_test-FrenchIGMapping.obj: ../src/lexicon/FrenchIGMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-FrenchIGMapping.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-FrenchIGMapping.Tpo -c -o twostage_lorgparser_test-FrenchIGMapping.obj `if test -f '../src/lexicon/FrenchIGMapping.cpp'; then $(CYGPATH_W) '../src/lexicon/FrenchIGMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/lexicon/FrenchIGMapping.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-FrenchIGMapping.Tpo $(DEPDIR)/twostage_lorgparser_test-FrenchIGMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/lexicon/FrenchIGMapping.cpp' object='twostage_lorgparser_test-FrenchIGMapping.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-FrenchIGMapping.obj `if test -f '../src/lexicon/FrenchIGMapping.cpp'; then $(CYGPATH_W) '../src/lexicon/FrenchIGMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/lexicon/FrenchIGMapping.cpp'; fi`

twostage_lorgparser_test-ItalianIGMapping.o: ../src/lexicon/ItalianIGMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-ItalianIGMapping.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-ItalianIGMapping.Tpo -c -o twostage_lorgparser_test-ItalianIGMapping.o `test -f '../src/lexicon/ItalianIGMapping.cpp' || echo '$(srcdir)/'`../src/lexicon/ItalianIGMapping.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-ItalianIGMapping.Tpo $(DEPDIR)/twostage_lorgparser_test-ItalianIGMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/lexicon/ItalianIGMapping.cpp' object='twostage_lorgparser_test-ItalianIGMapping.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-ItalianIGMapping.o `test -f '../src/lexicon/ItalianIGMapping.cpp' || echo '$(srcdir)/'`../src/lexicon/ItalianIGMapping.cpp

twostage_lorgparser_test-ItalianIGMapping.obj: ../src/lexicon/ItalianIGMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-ItalianIGMapping.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-ItalianIGMapping.Tpo -c -o twostage_lorgparser_test-ItalianIGMapping.obj `if test -f '../src/lexicon/ItalianIGMapping.cpp'; then $(CYGPATH_W) '../src/lexicon/ItalianIGMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/lexicon/ItalianIGMapping.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-ItalianIGMapping.Tpo $(DEPDIR)/twostage_lorgparser_test-ItalianIGMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/lexicon/ItalianIGMapping.cpp' object='twostage_lorgparser_test-ItalianIGMapping.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-ItalianIGMapping.obj `if test -f '../src/lexicon/ItalianIGMapping.cpp'; then $(CYGPATH_W) '../src/lexicon/ItalianIGMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/lexicon/ItalianIGMapping.cpp'; fi`

twostage_lorgparser_test-Lexicon.o: ../src/lexicon/Lexicon.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-Lexicon.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-Lexicon.Tpo -c -o twostage_lorgparser_test-Lexicon.o `test -f '../src/lexicon/Lexicon.cpp' || echo '$(srcdir)/'`../src/lexicon/Lexicon.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-Lexicon.Tpo $(DEPDIR)/twostage_lorgparser_test-Lexicon.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/lexicon/Lexicon.cpp' object='twostage_lorgparser_test-Lexicon.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-Lexicon.o `test -f '../src/lexicon/Lexicon.cpp' || echo '$(srcdir)/'`../src/lexicon/Lexicon.cpp

twostage_lorgparser_test-Lexicon.obj: ../src/lexicon/Lexicon.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-Lexicon.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-Lexicon.Tpo -c -o twostage_lorgparser_test-Lexicon.obj `if test -f '../src/lexicon/Lexicon.cpp'; then $(CYGPATH_W) '../src/lexicon/Lexicon.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/lexicon/Lexicon.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-Lexicon.Tpo $(DEPDIR)/twostage_lorgparser_test-Lexicon.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/lexicon/Lexicon.cpp' object='twostage_lorgparser_test-Lexicon.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-Lexicon.obj `if test -f '../src/lexicon/Lexicon.cpp'; then $(CYGPATH_W) '../src/lexicon/Lexicon.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/lexicon/Lexicon.cpp'; fi`

twostage_lorgparser_test-LexiconFactory.o: ../src/lexicon/LexiconFactory.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-LexiconFactory.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-LexiconFactory.Tpo -c -o twostage_lorgparser_test-LexiconFactory.o `test -f '../src/lexicon/LexiconFactory.cpp' || echo '$(srcdir)/'`../src/lexicon/LexiconFactory.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-LexiconFactory.Tpo $(DEPDIR)/twostage_lorgparser_test-LexiconFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/lexicon/LexiconFactory.cpp' object='twostage_lorgparser_test-LexiconFactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-LexiconFactory.o `test -f '../src/lexicon/LexiconFactory.cpp' || echo '$(srcdir)/'`../src/lexicon/LexiconFactory.cpp

twostage_lorgparser_test-LexiconFactory.obj: ../src/lexicon/LexiconFactory.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-LexiconFactory.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-LexiconFactory.Tpo -c -o twostage_lorgparser_test-LexiconFactory.obj `if test -f '../src/lexicon/LexiconFactory.cpp'; then $(CYGPATH_W) '../src/lexicon/LexiconFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/lexicon/LexiconFactory.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-LexiconFactory.Tpo $(DEPDIR)/twostage_lorgparser_test-LexiconFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/lexicon/LexiconFactory.cpp' object='twostage_lorgparser_test-LexiconFactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-LexiconFactory.obj `if test -f '../src/lexicon/LexiconFactory.cpp'; then $(CYGPATH_W) '../src/lexicon/LexiconFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/lexicon/LexiconFactory.cpp'; fi`

twostage_lorgparser_test-WordSignatureFactory.o: ../src/lexicon/WordSignatureFactory.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-WordSignatureFactory.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-WordSignatureFactory.Tpo -c -o twostage_lorgparser_test-WordSignatureFactory.o `test -f '../src/lexicon/WordSignatureFactory.cpp' || echo '$(srcdir)/'`../src/lexicon/WordSignatureFactory.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-WordSignatureFactory.Tpo $(DEPDIR)/twostage_lorgparser_test-WordSignatureFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/lexicon/WordSignatureFactory.cpp' object='twostage_lorgparser_test-WordSignatureFactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-WordSignatureFactory.o `test -f '../src/lexicon/WordSignatureFactory.cpp' || echo '$(srcdir)/'`../src/lexicon/WordSignatureFactory.cpp

twostage_lorgparser_test-WordSignatureFactory.obj: ../src/lexicon/WordSignatureFactory.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-WordSignatureFactory.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-WordSignatureFactory.Tpo -c -o twostage_lorgparser_test-WordSignatureFactory.obj `if test -f '../src/lexicon/WordSignatureFactory.cpp'; then $(CYGPATH_W) '../src/lexicon/WordSignatureFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/lexicon/WordSignatureFactory.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-WordSignatureFactory.Tpo $(DEPDIR)/twostage_lorgparser_test-WordSignatureFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/lexicon/WordSignatureFactory.cpp' object='twostage_lorgparser_test-WordSignatureFactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-WordSignatureFactory.obj `if test -f '../src/lexicon/WordSignatureFactory.cpp'; then $(CYGPATH_W) '../src/lexicon/WordSignatureFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/lexicon/WordSignatureFactory.cpp'; fi`

twostage_lorgparser_test-ParserCKYBest.o: ../src/parsers/ParserCKYBest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-ParserCKYBest.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-ParserCKYBest.Tpo -c -o twostage_lorgparser_test-ParserCKYBest.o `test -f '../src/parsers/ParserCKYBest.cpp' || echo '$(srcdir)/'`../src/parsers/ParserCKYBest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-ParserCKYBest.Tpo $(DEPDIR)/twostage_lorgparser_test-ParserCKYBest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/parsers/ParserCKYBest.cpp' object='twostage_lorgparser_test-ParserCKYBest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-ParserCKYBest.o `test -f '../src/parsers/ParserCKYBest.cpp' || echo '$(srcdir)/'`../src/parsers/ParserCKYBest.cpp

twostage_lorgparser_test-ParserCKYBest.obj: ../src/parsers/ParserCKYBest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-ParserCKYBest.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-ParserCKYBest.Tpo -c -o twostage_lorgparser_test-ParserCKYBest.obj `if test -f '../src/parsers/ParserCKYBest.cpp'; then $(CYGPATH_W) '../src/parsers/ParserCKYBest.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/parsers/ParserCKYBest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-ParserCKYBest.Tpo $(DEPDIR)/twostage_lorgparser_test-ParserCKYBest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/parsers/ParserCKYBest.cpp' object='twostage_lorgparser_test-ParserCKYBest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-ParserCKYBest.obj `if test -f '../src/parsers/ParserCKYBest.cpp'; then $(CYGPATH_W) '../src/parsers/ParserCKYBest.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/parsers/ParserCKYBest.cpp'; fi`

twostage_lorgparser_test-PCKYBestCell.o: ../src/PCKYBestCell.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-PCKYBestCell.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-PCKYBestCell.Tpo -c -o twostage_lorgparser_test-PCKYBestCell.o `test -f '../src/PCKYBestCell.cpp' || echo '$(srcdir)/'`../src/PCKYBestCell.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-PCKYBestCell.Tpo $(DEPDIR)/twostage_lorgparser_test-PCKYBestCell.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/PCKYBestCell.cpp' object='twostage_lorgparser_test-PCKYBestCell.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-PCKYBestCell.o `test -f '../src/PCKYBestCell.cpp' || echo '$(srcdir)/'`../src/PCKYBestCell.cpp

twostage_lorgparser_test-PCKYBestCell.obj: ../src/PCKYBestCell.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-PCKYBestCell.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-PCKYBestCell.Tpo -c -o twostage_lorgparser_test-PCKYBestCell.obj `if test -f '../src/PCKYBestCell.cpp'; then $(CYGPATH_W) '../src/PCKYBestCell.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/PCKYBestCell.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-PCKYBestCell.Tpo $(DEPDIR)/twostage_lorgparser_test-PCKYBestCell.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/PCKYBestCell.cpp' object='twostage_lorgparser_test-PCKYBestCell.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-PCKYBestCell.obj `if test -f '../src/PCKYBestCell.cpp'; then $(CYGPATH_W) '../src/PCKYBestCell.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/PCKYBestCell.cpp'; fi`

twostage_lorgparser_test-BRule.o: ../src/rules/BRule.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-BRule.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-BRule.Tpo -c -o twostage_lorgparser_test-BRule.o `test -f '../src/rules/BRule.cpp' || echo '$(srcdir)/'`../src/rules/BRule.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-BRule.Tpo $(DEPDIR)/twostage_lorgparser_test-BRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/rules/BRule.cpp' object='twostage_lorgparser_test-BRule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-BRule.o `test -f '../src/rules/BRule.cpp' || echo '$(srcdir)/'`../src/rules/BRule.cpp

twostage_lorgparser_test-BRule.obj: ../src/rules/BRule.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-BRule.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-BRule.Tpo -c -o twostage_lorgparser_test-BRule.obj `if test -f '../src/rules/BRule.cpp'; then $(CYGPATH_W) '../src/rules/BRule.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/rules/BRule.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-BRule.Tpo $(DEPDIR)/twostage_lorgparser_test-BRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/rules/BRule.cpp' object='twostage_lorgparser_test-BRule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-BRule.obj `if test -f '../src/rules/BRule.cpp'; then $(CYGPATH_W) '../src/rules/BRule.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/rules/BRule.cpp'; fi`

twostage_lorgparser_test-BRuleTraining.o: ../src/rules/BRuleTraining.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-BRuleTraining.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-BRuleTraining.Tpo -c -o twostage_lorgparser_test-BRuleTraining.o `test -f '../src/rules/BRuleTraining.cpp' || echo '$(srcdir)/'`../src/rules/BRuleTraining.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-BRuleTraining.Tpo $(DEPDIR)/twostage_lorgparser_test-BRuleTraining.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/rules/BRuleTraining.cpp' object='twostage_lorgparser_test-BRuleTraining.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-BRuleTraining.o `test -f '../src/rules/BRuleTraining.cpp' || echo '$(srcdir)/'`../src/rules/BRuleTraining.cpp

twostage_lorgparser_test-BRuleTraining.obj: ../src/rules/BRuleTraining.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-BRuleTraining.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-BRuleTraining.Tpo -c -o twostage_lorgparser_test-BRuleTraining.obj `if test -f '../src/rules/BRuleTraining.cpp'; then $(CYGPATH_W) '../src/rules/BRuleTraining.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/rules/BRuleTraining.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-BRuleTraining.Tpo $(DEPDIR)/twostage_lorgparser_test-BRuleTraining.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/rules/BRuleTraining.cpp' object='twostage_lorgparser_test-BRuleTraining.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-BRuleTraining.obj `if test -f '../src/rules/BRuleTraining.cpp'; then $(CYGPATH_W) '../src/rules/BRuleTraining.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/rules/BRuleTraining.cpp'; fi`

twostage_lorgparser_test-LexicalRule.o: ../src/rules/LexicalRule.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-LexicalRule.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-LexicalRule.Tpo -c -o twostage_lorgparser_test-LexicalRule.o `test -f '../src/rules/LexicalRule.cpp' || echo '$(srcdir)/'`../src/rules/LexicalRule.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-LexicalRule.Tpo $(DEPDIR)/twostage_lorgparser_test-LexicalRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/rules/LexicalRule.cpp' object='twostage_lorgparser_test-LexicalRule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-LexicalRule.o `test -f '../src/rules/LexicalRule.cpp' || echo '$(srcdir)/'`../src/rules/LexicalRule.cpp

twostage_lorgparser_test-LexicalRule.obj: ../src/rules/LexicalRule.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-LexicalRule.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-LexicalRule.Tpo -c -o twostage_lorgparser_test-LexicalRule.obj `if test -f '../src/rules/LexicalRule.cpp'; then $(CYGPATH_W) '../src/rules/LexicalRule.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/rules/LexicalRule.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-LexicalRule.Tpo $(DEPDIR)/twostage_lorgparser_test-LexicalRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/rules/LexicalRule.cpp' object='twostage_lorgparser_test-LexicalRule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-LexicalRule.obj `if test -f '../src/rules/LexicalRule.cpp'; then $(CYGPATH_W) '../src/rules/LexicalRule.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/rules/LexicalRule.cpp'; fi`

twostage_lorgparser_test-LexicalRuleTraining.o: ../src/rules/LexicalRuleTraining.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-LexicalRuleTraining.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-LexicalRuleTraining.Tpo -c -o twostage_lorgparser_test-LexicalRuleTraining.o `test -f '../src/rules/LexicalRuleTraining.cpp' || echo '$(srcdir)/'`../src/rules/LexicalRuleTraining.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-LexicalRuleTraining.Tpo $(DEPDIR)/twostage_lorgparser_test-LexicalRuleTraining.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/rules/LexicalRuleTraining.cpp' object='twostage_lorgparser_test-LexicalRuleTraining.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-LexicalRuleTraining.o `test -f '../src/rules/LexicalRuleTraining.cpp' || echo '$(srcdir)/'`../src/rules/LexicalRuleTraining.cpp

twostage_lorgparser_test-LexicalRuleTraining.obj: ../src/rules/LexicalRuleTraining.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-LexicalRuleTraining.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-LexicalRuleTraining.Tpo -c -o twostage_lorgparser_test-LexicalRuleTraining.obj `if test -f '../src/rules/LexicalRuleTraining.cpp'; then $(CYGPATH_W) '../src/rules/LexicalRuleTraining.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/rules/LexicalRuleTraining.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-LexicalRuleTraining.Tpo $(DEPDIR)/twostage_lorgparser_test-LexicalRuleTraining.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/rules/LexicalRuleTraining.cpp' object='twostage_lorgparser_test-LexicalRuleTraining.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-LexicalRuleTraining.obj `if test -f '../src/rules/LexicalRuleTraining.cpp'; then $(CYGPATH_W) '../src/rules/LexicalRuleTraining.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/rules/LexicalRuleTraining.cpp'; fi`

twostage_lorgparser_test-Production.o: ../src/rules/Production.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-Production.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-Production.Tpo -c -o twostage_lorgparser_test-Production.o `test -f '../src/rules/Production.cpp' || echo '$(srcdir)/'`../src/rules/Production.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-Production.Tpo $(DEPDIR)/twostage_lorgparser_test-Production.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/rules/Production.cpp' object='twostage_lorgparser_test-Production.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-Production.o `test -f '../src/rules/Production.cpp' || echo '$(srcdir)/'`../src/rules/Production.cpp

twostage_lorgparser_test-Production.obj: ../src/rules/Production.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-Production.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-Production.Tpo -c -o twostage_lorgparser_test-Production.obj `if test -f '../src/rules/Production.cpp'; then $(CYGPATH_W) '../src/rules/Production.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/rules/Production.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-Production.Tpo $(DEPDIR)/twostage_lorgparser_test-Production.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/rules/Production.cpp' object='twostage_lorgparser_test-Production.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-Production.obj `if test -f '../src/rules/Production.cpp'; then $(CYGPATH_W) '../src/rules/Production.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/rules/Production.cpp'; fi`

twostage_lorgparser_test-Rule.o: ../src/rules/Rule.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-Rule.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-Rule.Tpo -c -o twostage_lorgparser_test-Rule.o `test -f '../src/rules/Rule.cpp' || echo '$(srcdir)/'`../src/rules/Rule.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-Rule.Tpo $(DEPDIR)/twostage_lorgparser_test-Rule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/rules/Rule.cpp' object='twostage_lorgparser_test-Rule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-Rule.o `test -f '../src/rules/Rule.cpp' || echo '$(srcdir)/'`../src/rules/Rule.cpp

twostage_lorgparser_test-Rule.obj: ../src/rules/Rule.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-Rule.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-Rule.Tpo -c -o twostage_lorgparser_test-Rule.obj `if test -f '../src/rules/Rule.cpp'; then $(CYGPATH_W) '../src/rules/Rule.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/rules/Rule.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-Rule.Tpo $(DEPDIR)/twostage_lorgparser_test-Rule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/rules/Rule.cpp' object='twostage_lorgparser_test-Rule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-Rule.obj `if test -f '../src/rules/Rule.cpp'; then $(CYGPATH_W) '../src/rules/Rule.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/rules/Rule.cpp'; fi`

twostage_lorgparser_test-URule.o: ../src/rules/URule.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-URule.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-URule.Tpo -c -o twostage_lorgparser_test-URule.o `test -f '../src/rules/URule.cpp' || echo '$(srcdir)/'`../src/rules/URule.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-URule.Tpo $(DEPDIR)/twostage_lorgparser_test-URule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/rules/URule.cpp' object='twostage_lorgparser_test-URule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-URule.o `test -f '../src/rules/URule.cpp' || echo '$(srcdir)/'`../src/rules/URule.cpp

twostage_lorgparser_test-URule.obj: ../src/rules/URule.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-URule.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-URule.Tpo -c -o twostage_lorgparser_test-URule.obj `if test -f '../src/rules/URule.cpp'; then $(CYGPATH_W) '../src/rules/URule.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/rules/URule.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-URule.Tpo $(DEPDIR)/twostage_lorgparser_test-URule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/rules/URule.cpp' object='twostage_lorgparser_test-URule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-URule.obj `if test -f '../src/rules/URule.cpp'; then $(CYGPATH_W) '../src/rules/URule.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/rules/URule.cpp'; fi`

twostage_lorgparser_test-URuleTraining.o: ../src/rules/URuleTraining.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-URuleTraining.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-URuleTraining.Tpo -c -o twostage_lorgparser_test-URuleTraining.o `test -f '../src/rules/URuleTraining.cpp' || echo '$(srcdir)/'`../src/rules/URuleTraining.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-URuleTraining.Tpo $(DEPDIR)/twostage_lorgparser_test-URuleTraining.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/rules/URuleTraining.cpp' object='twostage_lorgparser_test-URuleTraining.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-URuleTraining.o `test -f '../src/rules/URuleTraining.cpp' || echo '$(srcdir)/'`../src/rules/URuleTraining.cpp

twostage_lorgparser_test-URuleTraining.obj: ../src/rules/URuleTraining.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-URuleTraining.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-URuleTraining.Tpo -c -o twostage_lorgparser_test-URuleTraining.obj `if test -f '../src/rules/URuleTraining.cpp'; then $(CYGPATH_W) '../src/rules/URuleTraining.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/rules/URuleTraining.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-URuleTraining.Tpo $(DEPDIR)/twostage_lorgparser_test-URuleTraining.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/rules/URuleTraining.cpp' object='twostage_lorgparser_test-URuleTraining.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-URuleTraining.obj `if test -f '../src/rules/URuleTraining.cpp'; then $(CYGPATH_W) '../src/rules/URuleTraining.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/rules/URuleTraining.cpp'; fi`

twostage_lorgparser_test-ConfigTable.o: ../src/utils/ConfigTable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-ConfigTable.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-ConfigTable.Tpo -c -o twostage_lorgparser_test-ConfigTable.o `test -f '../src/utils/ConfigTable.cpp' || echo '$(srcdir)/'`../src/utils/ConfigTable.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-ConfigTable.Tpo $(DEPDIR)/twostage_lorgparser_test-ConfigTable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/utils/ConfigTable.cpp' object='twostage_lorgparser_test-ConfigTable.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-ConfigTable.o `test -f '../src/utils/ConfigTable.cpp' || echo '$(srcdir)/'`../src/utils/ConfigTable.cpp

twostage_lorgparser_test-ConfigTable.obj: ../src/utils/ConfigTable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-ConfigTable.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-ConfigTable.Tpo -c -o twostage_lorgparser_test-ConfigTable.obj `if test -f '../src/utils/ConfigTable.cpp'; then $(CYGPATH_W) '../src/utils/ConfigTable.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/utils/ConfigTable.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-ConfigTable.Tpo $(DEPDIR)/twostage_lorgparser_test-ConfigTable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/utils/ConfigTable.cpp' object='twostage_lorgparser_test-ConfigTable.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-ConfigTable.obj `if test -f '../src/utils/ConfigTable.cpp'; then $(CYGPATH_W) '../src/utils/ConfigTable.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/utils/ConfigTable.cpp'; fi`

twostage_lorgparser_test-AnnotHistoriesParser.o: ../src/utils/data_parsers/AnnotHistoriesParser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-AnnotHistoriesParser.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-AnnotHistoriesParser.Tpo -c -o twostage_lorgparser_test-AnnotHistoriesParser.o `test -f '../src/utils/data_parsers/AnnotHistoriesParser.cpp' || echo '$(srcdir)/'`../src/utils/data_parsers/AnnotHistoriesParser.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-AnnotHistoriesParser.Tpo $(DEPDIR)/twostage_lorgparser_test-AnnotHistoriesParser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/utils/data_parsers/AnnotHistoriesParser.cpp' object='twostage_lorgparser_test-AnnotHistoriesParser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-AnnotHistoriesParser.o `test -f '../src/utils/data_parsers/AnnotHistoriesParser.cpp' || echo '$(srcdir)/'`../src/utils/data_parsers/AnnotHistoriesParser.cpp

twostage_lorgparser_test-AnnotHistoriesParser.obj: ../src/utils/data_parsers/AnnotHistoriesParser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-AnnotHistoriesParser.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-AnnotHistoriesParser.Tpo -c -o twostage_lorgparser_test-AnnotHistoriesParser.obj `if test -f '../src/utils/data_parsers/AnnotHistoriesParser.cpp'; then $(CYGPATH_W) '../src/utils/data_parsers/AnnotHistoriesParser.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/utils/data_parsers/AnnotHistoriesParser.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-AnnotHistoriesParser.Tpo $(DEPDIR)/twostage_lorgparser_test-AnnotHistoriesParser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/utils/data_parsers/AnnotHistoriesParser.cpp' object='twostage_lorgparser_test-AnnotHistoriesParser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-AnnotHistoriesParser.obj `if test -f '../src/utils/data_parsers/AnnotHistoriesParser.cpp'; then $(CYGPATH_W) '../src/utils/data_parsers/AnnotHistoriesParser.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/utils/data_parsers/AnnotHistoriesParser.cpp'; fi`

twostage_lorgparser_test-BURuleInputParser.o: ../src/utils/data_parsers/BURuleInputParser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-BURuleInputParser.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-BURuleInputParser.Tpo -c -o twostage_lorgparser_test-BURuleInputParser.o `test -f '../src/utils/data_parsers/BURuleInputParser.cpp' || echo '$(srcdir)/'`../src/utils/data_parsers/BURuleInputParser.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-BURuleInputParser.Tpo $(DEPDIR)/twostage_lorgparser_test-BURuleInputParser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/utils/data_parsers/BURuleInputParser.cpp' object='twostage_lorgparser_test-BURuleInputParser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-BURuleInputParser.o `test -f '../src/utils/data_parsers/BURuleInputParser.cpp' || echo '$(srcdir)/'`../src/utils/data_parsers/BURuleInputParser.cpp

twostage_lorgparser_test-BURuleInputParser.obj: ../src/utils/data_parsers/BURuleInputParser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-BURuleInputParser.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-BURuleInputParser.Tpo -c -o twostage_lorgparser_test-BURuleInputParser.obj `if test -f '../src/utils/data_parsers/BURuleInputParser.cpp'; then $(CYGPATH_W) '../src/utils/data_parsers/BURuleInputParser.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/utils/data_parsers/BURuleInputParser.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-BURuleInputParser.Tpo $(DEPDIR)/twostage_lorgparser_test-BURuleInputParser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/utils/data_parsers/BURuleInputParser.cpp' object='twostage_lorgparser_test-BURuleInputParser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-BURuleInputParser.obj `if test -f '../src/utils/data_parsers/BURuleInputParser.cpp'; then $(CYGPATH_W) '../src/utils/data_parsers/BURuleInputParser.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/utils/data_parsers/BURuleInputParser.cpp'; fi`

twostage_lorgparser_test-PTBInputParser.o: ../src/utils/data_parsers/PTBInputParser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-PTBInputParser.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-PTBInputParser.Tpo -c -o twostage_lorgparser_test-PTBInputParser.o `test -f '../src/utils/data_parsers/PTBInputParser.cpp' || echo '$(srcdir)/'`../src/utils/data_parsers/PTBInputParser.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-PTBInputParser.Tpo $(DEPDIR)/twostage_lorgparser_test-PTBInputParser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/utils/data_parsers/PTBInputParser.cpp' object='twostage_lorgparser_test-PTBInputParser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-PTBInputParser.o `test -f '../src/utils/data_parsers/PTBInputParser.cpp' || echo '$(srcdir)/'`../src/utils/data_parsers/PTBInputParser.cpp

twostage_lorgparser_test-PTBInputParser.obj: ../src/utils/data_parsers/PTBInputParser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-PTBInputParser.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-PTBInputParser.Tpo -c -o twostage_lorgparser_test-PTBInputParser.obj `if test -f '../src/utils/data_parsers/PTBInputParser.cpp'; then $(CYGPATH_W) '../src/utils/data_parsers/PTBInputParser.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/utils/data_parsers/PTBInputParser.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-PTBInputParser.Tpo $(DEPDIR)/twostage_lorgparser_test-PTBInputParser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/utils/data_parsers/PTBInputParser.cpp' object='twostage_lorgparser_test-PTBInputParser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-PTBInputParser.obj `if test -f '../src/utils/data_parsers/PTBInputParser.cpp'; then $(CYGPATH_W) '../src/utils/data_parsers/PTBInputParser.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/utils/data_parsers/PTBInputParser.cpp'; fi`

twostage_lorgparser_test-RuleInputParser.o: ../src/utils/data_parsers/RuleInputParser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-RuleInputParser.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-RuleInputParser.Tpo -c -o twostage_lorgparser_test-RuleInputParser.o `test -f '../src/utils/data_parsers/RuleInputParser.cpp' || echo '$(srcdir)/'`../src/utils/data_parsers/RuleInputParser.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-RuleInputParser.Tpo $(DEPDIR)/twostage_lorgparser_test-RuleInputParser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/utils/data_parsers/RuleInputParser.cpp' object='twostage_lorgparser_test-RuleInputParser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-RuleInputParser.o `test -f '../src/utils/data_parsers/RuleInputParser.cpp' || echo '$(srcdir)/'`../src/utils/data_parsers/RuleInputParser.cpp

twostage_lorgparser_test-RuleInputParser.obj: ../src/utils/data_parsers/RuleInputParser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-RuleInputParser.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-RuleInputParser.Tpo -c -o twostage_lorgparser_test-RuleInputParser.obj `if test -f '../src/utils/data_parsers/RuleInputParser.cpp'; then $(CYGPATH_W) '../src/utils/data_parsers/RuleInputParser.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/utils/data_parsers/RuleInputParser.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-RuleInputParser.Tpo $(DEPDIR)/twostage_lorgparser_test-RuleInputParser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/utils/data_parsers/RuleInputParser.cpp' object='twostage_lorgparser_test-RuleInputParser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-RuleInputParser.obj `if test -f '../src/utils/data_parsers/RuleInputParser.cpp'; then $(CYGPATH_W) '../src/utils/data_parsers/RuleInputParser.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/utils/data_parsers/RuleInputParser.cpp'; fi`

twostage_lorgparser_test-PtbPsTree.o: ../src/utils/PtbPsTree.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-PtbPsTree.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-PtbPsTree.Tpo -c -o twostage_lorgparser_test-PtbPsTree.o `test -f '../src/utils/PtbPsTree.cpp' || echo '$(srcdir)/'`../src/utils/PtbPsTree.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-PtbPsTree.Tpo $(DEPDIR)/twostage_lorgparser_test-PtbPsTree.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/utils/PtbPsTree.cpp' object='twostage_lorgparser_test-PtbPsTree.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-PtbPsTree.o `test -f '../src/utils/PtbPsTree.cpp' || echo '$(srcdir)/'`../src/utils/PtbPsTree.cpp

twostage_lorgparser_test-PtbPsTree.obj: ../src/utils/PtbPsTree.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-PtbPsTree.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-PtbPsTree.Tpo -c -o twostage_lorgparser_test-PtbPsTree.obj `if test -f '../src/utils/PtbPsTree.cpp'; then $(CYGPATH_W) '../src/utils/PtbPsTree.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/utils/PtbPsTree.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-PtbPsTree.Tpo $(DEPDIR)/twostage_lorgparser_test-PtbPsTree.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/utils/PtbPsTree.cpp' object='twostage_lorgparser_test-PtbPsTree.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-PtbPsTree.obj `if test -f '../src/utils/PtbPsTree.cpp'; then $(CYGPATH_W) '../src/utils/PtbPsTree.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/utils/PtbPsTree.cpp'; fi`

twostage_lorgparser_test-RandomGenerator.o: ../src/utils/RandomGenerator.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-RandomGenerator.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-RandomGenerator.Tpo -c -o twostage_lorgparser_test-RandomGenerator.o `test -f '../src/utils/RandomGenerator.cpp' || echo '$(srcdir)/'`../src/utils/RandomGenerator.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-RandomGenerator.Tpo $(DEPDIR)/twostage_lorgparser_test-RandomGenerator.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/utils/RandomGenerator.cpp' object='twostage_lorgparser_test-RandomGenerator.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-RandomGenerator.o `test -f '../src/utils/RandomGenerator.cpp' || echo '$(srcdir)/'`../src/utils/RandomGenerator.cpp

twostage_lorgparser_test-RandomGenerator.obj: ../src/utils/RandomGenerator.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-RandomGenerator.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-RandomGenerator.Tpo -c -o twostage_lorgparser_test-RandomGenerator.obj `if test -f '../src/utils/RandomGenerator.cpp'; then $(CYGPATH_W) '../src/utils/RandomGenerator.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/utils/RandomGenerator.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-RandomGenerator.Tpo $(DEPDIR)/twostage_lorgparser_test-RandomGenerator.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/utils/RandomGenerator.cpp' object='twostage_lorgparser_test-RandomGenerator.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-RandomGenerator.obj `if test -f '../src/utils/RandomGenerator.cpp'; then $(CYGPATH_W) '../src/utils/RandomGenerator.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/utils/RandomGenerator.cpp'; fi`

twostage_lorgparser_test-SymbolTable.o: ../src/utils/SymbolTable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-SymbolTable.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-SymbolTable.Tpo -c -o twostage_lorgparser_test-SymbolTable.o `test -f '../src/utils/SymbolTable.cpp' || echo '$(srcdir)/'`../src/utils/SymbolTable.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-SymbolTable.Tpo $(DEPDIR)/twostage_lorgparser_test-SymbolTable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/utils/SymbolTable.cpp' object='twostage_lorgparser_test-SymbolTable.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-SymbolTable.o `test -f '../src/utils/SymbolTable.cpp' || echo '$(srcdir)/'`../src/utils/SymbolTable.cpp

twostage_lorgparser_test-SymbolTable.obj: ../src/utils/SymbolTable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-SymbolTable.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-SymbolTable.Tpo -c -o twostage_lorgparser_test-SymbolTable.obj `if test -f '../src/utils/SymbolTable.cpp'; then $(CYGPATH_W) '../src/utils/SymbolTable.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/utils/SymbolTable.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-SymbolTable.Tpo $(DEPDIR)/twostage_lorgparser_test-SymbolTable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/utils/SymbolTable.cpp' object='twostage_lorgparser_test-SymbolTable.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-SymbolTable.obj `if test -f '../src/utils/SymbolTable.cpp'; then $(CYGPATH_W) '../src/utils/SymbolTable.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/utils/SymbolTable.cpp'; fi`

twostage_lorgparser_test-Tagger.o: ../src/utils/Tagger.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-Tagger.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-Tagger.Tpo -c -o twostage_lorgparser_test-Tagger.o `test -f '../src/utils/Tagger.cpp' || echo '$(srcdir)/'`../src/utils/Tagger.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-Tagger.Tpo $(DEPDIR)/twostage_lorgparser_test-Tagger.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/utils/Tagger.cpp' object='twostage_lorgparser_test-Tagger.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-Tagger.o `test -f '../src/utils/Tagger.cpp' || echo '$(srcdir)/'`../src/utils/Tagger.cpp

twostage_lorgparser_test-Tagger.obj: ../src/utils/Tagger.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-Tagger.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-Tagger.Tpo -c -o twostage_lorgparser_test-Tagger.obj `if test -f '../src/utils/Tagger.cpp'; then $(CYGPATH_W) '../src/utils/Tagger.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/utils/Tagger.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-Tagger.Tpo $(DEPDIR)/twostage_lorgparser_test-Tagger.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/utils/Tagger.cpp' object='twostage_lorgparser_test-Tagger.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-Tagger.obj `if test -f '../src/utils/Tagger.cpp'; then $(CYGPATH_W) '../src/utils/Tagger.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/utils/Tagger.cpp'; fi`

twostage_lorgparser_test-Tokeniser.o: ../src/utils/Tokeniser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-Tokeniser.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-Tokeniser.Tpo -c -o twostage_lorgparser_test-Tokeniser.o `test -f '../src/utils/Tokeniser.cpp' || echo '$(srcdir)/'`../src/utils/Tokeniser.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-Tokeniser.Tpo $(DEPDIR)/twostage_lorgparser_test-Tokeniser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/utils/Tokeniser.cpp' object='twostage_lorgparser_test-Tokeniser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-Tokeniser.o `test -f '../src/utils/Tokeniser.cpp' || echo '$(srcdir)/'`../src/utils/Tokeniser.cpp

twostage_lorgparser_test-Tokeniser.obj: ../src/utils/Tokeniser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-Tokeniser.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-Tokeniser.Tpo -c -o twostage_lorgparser_test-Tokeniser.obj `if test -f '../src/utils/Tokeniser.cpp'; then $(CYGPATH_W) '../src/utils/Tokeniser.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/utils/Tokeniser.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-Tokeniser.Tpo $(DEPDIR)/twostage_lorgparser_test-Tokeniser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/utils/Tokeniser.cpp' object='twostage_lorgparser_test-Tokeniser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-Tokeniser.obj `if test -f '../src/utils/Tokeniser.cpp'; then $(CYGPATH_W) '../src/utils/Tokeniser.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/utils/Tokeniser.cpp'; fi`

twostage_lorgparser_test-Word.o: ../src/Word.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-Word.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-Word.Tpo -c -o twostage_lorgparser_test-Word.o `test -f '../src/Word.cpp' || echo '$(srcdir)/'`../src/Word.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-Word.Tpo $(DEPDIR)/twostage_lorgparser_test-Word.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/Word.cpp' object='twostage_lorgparser_test-Word.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-Word.o `test -f '../src/Word.cpp' || echo '$(srcdir)/'`../src/Word.cpp

twostage_lorgparser_test-Word.obj: ../src/Word.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-Word.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-Word.Tpo -c -o twostage_lorgparser_test-Word.obj `if test -f '../src/Word.cpp'; then $(CYGPATH_W) '../src/Word.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/Word.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-Word.Tpo $(DEPDIR)/twostage_lorgparser_test-Word.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../src/Word.cpp' object='twostage_lorgparser_test-Word.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-Word.obj `if test -f '../src/Word.cpp'; then $(CYGPATH_W) '../src/Word.cpp'; else $(CYGPATH_W) '$(srcdir)/../src/Word.cpp'; fi`

twostage_lorgparser_test-ParserEdgeTest.o: ParserEdgeTest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-ParserEdgeTest.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-ParserEdgeTest.Tpo -c -o twostage_lorgparser_test-ParserEdgeTest.o `test -f 'ParserEdgeTest.cpp' || echo '$(srcdir)/'`ParserEdgeTest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-ParserEdgeTest.Tpo $(DEPDIR)/twostage_lorgparser_test-ParserEdgeTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ParserEdgeTest.cpp' object='twostage_lorgparser_test-ParserEdgeTest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-ParserEdgeTest.o `test -f 'ParserEdgeTest.cpp' || echo '$(srcdir)/'`ParserEdgeTest.cpp

twostage_lorgparser_test-ParserEdgeTest.obj: ParserEdgeTest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-ParserEdgeTest.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-ParserEdgeTest.Tpo -c -o twostage_lorgparser_test-ParserEdgeTest.obj `if test -f 'ParserEdgeTest.cpp'; then $(CYGPATH_W) 'ParserEdgeTest.cpp'; else $(CYGPATH_W) '$(srcdir)/ParserEdgeTest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-ParserEdgeTest.Tpo $(DEPDIR)/twostage_lorgparser_test-ParserEdgeTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ParserEdgeTest.cpp' object='twostage_lorgparser_test-ParserEdgeTest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-ParserEdgeTest.obj `if test -f 'ParserEdgeTest.cpp'; then $(CYGPATH_W) 'ParserEdgeTest.cpp'; else $(CYGPATH_W) '$(srcdir)/ParserEdgeTest.cpp'; fi`

twostage_lorgparser_test-ParserInitTest.o: ParserInitTest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-ParserInitTest.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-ParserInitTest.Tpo -c -o twostage_lorgparser_test-ParserInitTest.o `test -f 'ParserInitTest.cpp' || echo '$(srcdir)/'`ParserInitTest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-ParserInitTest.Tpo $(DEPDIR)/twostage_lorgparser_test-ParserInitTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ParserInitTest.cpp' object='twostage_lorgparser_test-ParserInitTest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-ParserInitTest.o `test -f 'ParserInitTest.cpp' || echo '$(srcdir)/'`ParserInitTest.cpp

twostage_lorgparser_test-ParserInitTest.obj: ParserInitTest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-ParserInitTest.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-ParserInitTest.Tpo -c -o twostage_lorgparser_test-ParserInitTest.obj `if test -f 'ParserInitTest.cpp'; then $(CYGPATH_W) 'ParserInitTest.cpp'; else $(CYGPATH_W) '$(srcdir)/ParserInitTest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-ParserInitTest.Tpo $(DEPDIR)/twostage_lorgparser_test-ParserInitTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ParserInitTest.cpp' object='twostage_lorgparser_test-ParserInitTest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-ParserInitTest.obj `if test -f 'ParserInitTest.cpp'; then $(CYGPATH_W) 'ParserInitTest.cpp'; else $(CYGPATH_W) '$(srcdir)/ParserInitTest.cpp'; fi`

twostage_lorgparser_test-ParserRulesTest.o: ParserRulesTest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-ParserRulesTest.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-ParserRulesTest.Tpo -c -o twostage_lorgparser_test-ParserRulesTest.o `test -f 'ParserRulesTest.cpp' || echo '$(srcdir)/'`ParserRulesTest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-ParserRulesTest.Tpo $(DEPDIR)/twostage_lorgparser_test-ParserRulesTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ParserRulesTest.cpp' object='twostage_lorgparser_test-ParserRulesTest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-ParserRulesTest.o `test -f 'ParserRulesTest.cpp' || echo '$(srcdir)/'`ParserRulesTest.cpp

twostage_lorgparser_test-ParserRulesTest.obj: ParserRulesTest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-ParserRulesTest.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-ParserRulesTest.Tpo -c -o twostage_lorgparser_test-ParserRulesTest.obj `if test -f 'ParserRulesTest.cpp'; then $(CYGPATH_W) 'ParserRulesTest.cpp'; else $(CYGPATH_W) '$(srcdir)/ParserRulesTest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-ParserRulesTest.Tpo $(DEPDIR)/twostage_lorgparser_test-ParserRulesTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ParserRulesTest.cpp' object='twostage_lorgparser_test-ParserRulesTest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-ParserRulesTest.obj `if test -f 'ParserRulesTest.cpp'; then $(CYGPATH_W) 'ParserRulesTest.cpp'; else $(CYGPATH_W) '$(srcdir)/ParserRulesTest.cpp'; fi`

twostage_lorgparser_test-ParserTreeTest.o: ParserTreeTest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-ParserTreeTest.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-ParserTreeTest.Tpo -c -o twostage_lorgparser_test-ParserTreeTest.o `test -f 'ParserTreeTest.cpp' || echo '$(srcdir)/'`ParserTreeTest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-ParserTreeTest.Tpo $(DEPDIR)/twostage_lorgparser_test-ParserTreeTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ParserTreeTest.cpp' object='twostage_lorgparser_test-ParserTreeTest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-ParserTreeTest.o `test -f 'ParserTreeTest.cpp' || echo '$(srcdir)/'`ParserTreeTest.cpp

twostage_lorgparser_test-ParserTreeTest.obj: ParserTreeTest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-ParserTreeTest.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-ParserTreeTest.Tpo -c -o twostage_lorgparser_test-ParserTreeTest.obj `if test -f 'ParserTreeTest.cpp'; then $(CYGPATH_W) 'ParserTreeTest.cpp'; else $(CYGPATH_W) '$(srcdir)/ParserTreeTest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-ParserTreeTest.Tpo $(DEPDIR)/twostage_lorgparser_test-ParserTreeTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ParserTreeTest.cpp' object='twostage_lorgparser_test-ParserTreeTest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-ParserTreeTest.obj `if test -f 'ParserTreeTest.cpp'; then $(CYGPATH_W) 'ParserTreeTest.cpp'; else $(CYGPATH_W) '$(srcdir)/ParserTreeTest.cpp'; fi`

twostage_lorgparser_test-main.o: main.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-main.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-main.Tpo -c -o twostage_lorgparser_test-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-main.Tpo $(DEPDIR)/twostage_lorgparser_test-main.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='main.cpp' object='twostage_lorgparser_test-main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp

twostage_lorgparser_test-main.obj: main.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser_test-main.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser_test-main.Tpo -c -o twostage_lorgparser_test-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser_test-main.Tpo $(DEPDIR)/twostage_lorgparser_test-main.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='main.cpp' object='twostage_lorgparser_test-main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_test_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_test_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser_test-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

cscopelist:  $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS) $(LISP)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool \
	clean-noinstPROGRAMS cscopelist ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
