# Makefile.in generated by automake 1.12.3 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2012 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#SUBDIRS = training

VPATH = @srcdir@
am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@WANT_LTR_TRUE@am__append_1 = -lrt 
bin_PROGRAMS = simple_lorgparser$(EXEEXT) twostage_lorgparser$(EXEEXT) \
	feature_extractor$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/depcomp
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_boost_base.m4 \
	$(top_srcdir)/m4/ax_boost_filesystem.m4 \
	$(top_srcdir)/m4/ax_boost_program_options.m4 \
	$(top_srcdir)/m4/ax_boost_regex.m4 \
	$(top_srcdir)/m4/ax_boost_system.m4 \
	$(top_srcdir)/m4/ax_boost_thread.m4 \
	$(top_srcdir)/m4/ax_boost_unit_test_framework.m4 \
	$(top_srcdir)/m4/ax_tbb.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_feature_extractor_OBJECTS = feature_extractor-ExtractApp.$(OBJEXT) \
	feature_extractor-LorgApp.$(OBJEXT) \
	feature_extractor-Extract.$(OBJEXT) \
	feature_extractor-Feature.$(OBJEXT) \
	feature_extractor-PTBInputParser.$(OBJEXT) \
	feature_extractor-PtbPsTree.$(OBJEXT) \
	feature_extractor-ConfigTable.$(OBJEXT) \
	feature_extractor-SymbolTable.$(OBJEXT) \
	feature_extractor-Production.$(OBJEXT)
feature_extractor_OBJECTS = $(am_feature_extractor_OBJECTS)
am__DEPENDENCIES_1 =
feature_extractor_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
feature_extractor_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(feature_extractor_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_1 = simple_lorgparser-Production.$(OBJEXT) \
	simple_lorgparser-Rule.$(OBJEXT) \
	simple_lorgparser-compact_binary_rules.$(OBJEXT) \
	simple_lorgparser-Grammar.$(OBJEXT) \
	simple_lorgparser-SymbolTable.$(OBJEXT) \
	simple_lorgparser-Tagger.$(OBJEXT) \
	simple_lorgparser-TokeniserFactory.$(OBJEXT) \
	simple_lorgparser-Tokeniser.$(OBJEXT) \
	simple_lorgparser-PtbPsTree.$(OBJEXT) \
	simple_lorgparser-ConfigTable.$(OBJEXT) \
	simple_lorgparser-RandomGenerator.$(OBJEXT) \
	simple_lorgparser-WordSignatureFactory.$(OBJEXT) \
	simple_lorgparser-BerkeleyEnglishUMapping.$(OBJEXT) \
	simple_lorgparser-BaselineFrenchUMapping.$(OBJEXT) \
	simple_lorgparser-EnglishIGMapping.$(OBJEXT) \
	simple_lorgparser-FrenchIGMapping.$(OBJEXT) \
	simple_lorgparser-ItalianIGMapping.$(OBJEXT) \
	simple_lorgparser-ArabicUMapping.$(OBJEXT) \
	simple_lorgparser-ArabicIGMapping.$(OBJEXT) \
	simple_lorgparser-Word.$(OBJEXT) \
	simple_lorgparser-LorgApp.$(OBJEXT) \
	simple_lorgparser-LorgParseApp.$(OBJEXT) \
	simple_lorgparser-Extract.$(OBJEXT) \
	simple_lorgparser-Feature.$(OBJEXT)
am_simple_lorgparser_OBJECTS = $(am__objects_1) \
	simple_lorgparser-simple_lorgparser.$(OBJEXT) \
	simple_lorgparser-compact_binary_rules_simple.$(OBJEXT) \
	simple_lorgparser-RuleInputParser.$(OBJEXT) \
	simple_lorgparser-Edge.$(OBJEXT) \
	simple_lorgparser-ParserCKYBest.$(OBJEXT) \
	simple_lorgparser-PCKYBestCell.$(OBJEXT) \
	simple_lorgparser-SimpleLorgParseApp.$(OBJEXT)
simple_lorgparser_OBJECTS = $(am_simple_lorgparser_OBJECTS)
@WANT_TCMALLOC_FALSE@simple_lorgparser_DEPENDENCIES =  \
@WANT_TCMALLOC_FALSE@	$(am__DEPENDENCIES_1) \
@WANT_TCMALLOC_FALSE@	$(am__DEPENDENCIES_1) \
@WANT_TCMALLOC_FALSE@	$(am__DEPENDENCIES_1) \
@WANT_TCMALLOC_FALSE@	$(am__DEPENDENCIES_1) \
@WANT_TCMALLOC_FALSE@	$(am__DEPENDENCIES_1)
@WANT_TCMALLOC_TRUE@simple_lorgparser_DEPENDENCIES =  \
@WANT_TCMALLOC_TRUE@	$(am__DEPENDENCIES_1) \
@WANT_TCMALLOC_TRUE@	$(am__DEPENDENCIES_1) \
@WANT_TCMALLOC_TRUE@	$(am__DEPENDENCIES_1) \
@WANT_TCMALLOC_TRUE@	$(am__DEPENDENCIES_1) \
@WANT_TCMALLOC_TRUE@	$(am__DEPENDENCIES_1)
simple_lorgparser_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_2 = twostage_lorgparser-Production.$(OBJEXT) \
	twostage_lorgparser-Rule.$(OBJEXT) \
	twostage_lorgparser-compact_binary_rules.$(OBJEXT) \
	twostage_lorgparser-Grammar.$(OBJEXT) \
	twostage_lorgparser-SymbolTable.$(OBJEXT) \
	twostage_lorgparser-Tagger.$(OBJEXT) \
	twostage_lorgparser-TokeniserFactory.$(OBJEXT) \
	twostage_lorgparser-Tokeniser.$(OBJEXT) \
	twostage_lorgparser-PtbPsTree.$(OBJEXT) \
	twostage_lorgparser-ConfigTable.$(OBJEXT) \
	twostage_lorgparser-RandomGenerator.$(OBJEXT) \
	twostage_lorgparser-WordSignatureFactory.$(OBJEXT) \
	twostage_lorgparser-BerkeleyEnglishUMapping.$(OBJEXT) \
	twostage_lorgparser-BaselineFrenchUMapping.$(OBJEXT) \
	twostage_lorgparser-EnglishIGMapping.$(OBJEXT) \
	twostage_lorgparser-FrenchIGMapping.$(OBJEXT) \
	twostage_lorgparser-ItalianIGMapping.$(OBJEXT) \
	twostage_lorgparser-ArabicUMapping.$(OBJEXT) \
	twostage_lorgparser-ArabicIGMapping.$(OBJEXT) \
	twostage_lorgparser-Word.$(OBJEXT) \
	twostage_lorgparser-LorgApp.$(OBJEXT) \
	twostage_lorgparser-LorgParseApp.$(OBJEXT) \
	twostage_lorgparser-Extract.$(OBJEXT) \
	twostage_lorgparser-Feature.$(OBJEXT)
am_twostage_lorgparser_OBJECTS = $(am__objects_2) \
	twostage_lorgparser-twostage_lorgparser.$(OBJEXT) \
	twostage_lorgparser-compact_binary_rules_annotated.$(OBJEXT) \
	twostage_lorgparser-AnnotatedLabelsInfo.$(OBJEXT) \
	twostage_lorgparser-BURuleInputParser.$(OBJEXT) \
	twostage_lorgparser-AnnotHistoriesParser.$(OBJEXT) \
	twostage_lorgparser-AnnotationInfo.$(OBJEXT) \
	twostage_lorgparser-BRule.$(OBJEXT) \
	twostage_lorgparser-URule.$(OBJEXT) \
	twostage_lorgparser-LexicalRule.$(OBJEXT)
twostage_lorgparser_OBJECTS = $(am_twostage_lorgparser_OBJECTS)
@WANT_TCMALLOC_FALSE@twostage_lorgparser_DEPENDENCIES =  \
@WANT_TCMALLOC_FALSE@	$(am__DEPENDENCIES_1) \
@WANT_TCMALLOC_FALSE@	$(am__DEPENDENCIES_1) \
@WANT_TCMALLOC_FALSE@	$(am__DEPENDENCIES_1) \
@WANT_TCMALLOC_FALSE@	$(am__DEPENDENCIES_1) \
@WANT_TCMALLOC_FALSE@	$(am__DEPENDENCIES_1) \
@WANT_TCMALLOC_FALSE@	$(am__DEPENDENCIES_1) \
@WANT_TCMALLOC_FALSE@	$(am__DEPENDENCIES_1)
@WANT_TCMALLOC_TRUE@twostage_lorgparser_DEPENDENCIES =  \
@WANT_TCMALLOC_TRUE@	$(am__DEPENDENCIES_1) \
@WANT_TCMALLOC_TRUE@	$(am__DEPENDENCIES_1) \
@WANT_TCMALLOC_TRUE@	$(am__DEPENDENCIES_1) \
@WANT_TCMALLOC_TRUE@	$(am__DEPENDENCIES_1) \
@WANT_TCMALLOC_TRUE@	$(am__DEPENDENCIES_1) \
@WANT_TCMALLOC_TRUE@	$(am__DEPENDENCIES_1) \
@WANT_TCMALLOC_TRUE@	$(am__DEPENDENCIES_1)
twostage_lorgparser_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(feature_extractor_SOURCES) $(simple_lorgparser_SOURCES) \
	$(twostage_lorgparser_SOURCES)
DIST_SOURCES = $(feature_extractor_SOURCES) \
	$(simple_lorgparser_SOURCES) $(twostage_lorgparser_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
BOOST_FILESYSTEM_LIB = @BOOST_FILESYSTEM_LIB@
BOOST_LDFLAGS = @BOOST_LDFLAGS@
BOOST_PROGRAM_OPTIONS_LIB = @BOOST_PROGRAM_OPTIONS_LIB@
BOOST_REGEX_LIB = @BOOST_REGEX_LIB@
BOOST_SYSTEM_LIB = @BOOST_SYSTEM_LIB@
BOOST_THREAD_LIB = @BOOST_THREAD_LIB@
BOOST_UNIT_TEST_FRAMEWORK_LIB = @BOOST_UNIT_TEST_FRAMEWORK_LIB@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@ $(am__append_1)
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TBB_CPPFLAGS = @TBB_CPPFLAGS@
TBB_LDFLAGS = @TBB_LDFLAGS@
TBB_LIBS = @TBB_LIBS@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AM_CPPFLAGS = $(BOOST_CPPFLAGS) -I.
#gram2clmodel
common_sources = rules/Types4Rules.h rules/MetaProduction.h \
	rules/Production.cpp rules/Production.h \
	rules/Rule.cpp rules/Rule.h \
	grammars/compact_binary_rules.h grammars/compact_binary_rules.cpp \
	grammars/Grammar.h grammars/Grammar.cpp \
	utils/SymbolTable.cpp utils/SymbolTable.h \
	utils/Tagger.h utils/Tagger.cpp \
	utils/TokeniserFactory.h utils/TokeniserFactory.cpp\
	utils/Tokeniser.h utils/Tokeniser.cpp utils/TokeniserSpec.h \
	utils/EnglishSpec.h Bracketing.h \
	utils/PtbPsTree.cpp utils/PtbPsTree.h utils/PsTree.h \
	utils/Tree.h utils/tree_detail/BreadthFirstTreeIterator.h  \
	utils/tree_detail/ConstDepthFirstTreeIterator.h  \
	utils/tree_detail/ConstLeafTreeIterator.h  utils/tree_detail/ConstTreeIterator.h  \
	utils/tree_detail/DepthFirstTreeIterator.h  utils/tree_detail/LeafTreeIterator.h  \
	utils/tree_detail/Node.h  utils/tree_detail/TreeIterator.h \
	utils/LorgConstants.h\
	utils/ConfigTable.h utils/ConfigTable.cpp utils/LorgOptions.h \
	utils/data_parsers/ParseError.h \
	utils/RandomGenerator.h utils/RandomGenerator.cpp \
	utils/tree_detail/BreadthFirstTreeIterator.h utils/tree_detail/ConstDepthFirstTreeIterator.h \
	utils/tree_detail/ConstLeafTreeIterator.h utils/tree_detail/ConstTreeIterator.h \
	utils/tree_detail/DepthFirstTreeIterator.h utils/tree_detail/LeafTreeIterator.h \
	utils/tree_detail/Node.h utils/tree_detail/TreeIterator.h \
	lexicon/WordSignature.h \
	lexicon/WordSignatureFactory.h lexicon/WordSignatureFactory.cpp \
	lexicon/BerkeleyEnglishUMapping.h lexicon/BerkeleyEnglishUMapping.cpp \
	lexicon/BaselineFrenchUMapping.h lexicon/BaselineFrenchUMapping.cpp \
	lexicon/EnglishIGMapping.h lexicon/EnglishIGMapping.cpp \
	lexicon/FrenchIGMapping.h lexicon/FrenchIGMapping.cpp \
	lexicon/ItalianIGMapping.h lexicon/ItalianIGMapping.cpp \
	lexicon/ArabicUMapping.h lexicon/ArabicUMapping.cpp \
	lexicon/ArabicIGMapping.h lexicon/ArabicIGMapping.cpp \
        classifier/NaiveBayesClassifier.h classifier/ProbModel.h \
        classifier/Classifier.h classifier/FreqDist.h \
	ChartCKY.h \
	Word.cpp Word.h \
	ParseSolution.h \
	parsers/ParserCKY.h\
	LorgApp.h LorgApp.cpp \
	LorgParseApp.h LorgParseApp.cpp \
	feature_extract/Extract.h feature_extract/Extract.cpp \
	feature_extract/Feature.h feature_extract/Feature.cpp \
	TagGuesser.h

simple_lorgparser_SOURCES = ${common_sources} simple_lorgparser.cpp \
	grammars/compact_binary_rules_simple.cpp \
	utils/data_parsers/RuleInputParser.cpp \
	utils/data_parsers/RuleInputParser.h edges/Edge.cpp \
	edges/Edge.h parsers/ParserCKYBest.cpp parsers/ParserCKYBest.h \
	PCKYBestCell.cpp PCKYBestCell.h SimpleLorgParseApp.h \
	SimpleLorgParseApp.cpp
simple_lorgparser_CPPFLAGS = $(BOOST_CPPFLAGS) $(TBB_CPPFLAGS) -I. -DNDEBUG
simple_lorgparser_CXXFLAGS = -O6 -Wall -Wextra -pipe
@WANT_TCMALLOC_FALSE@simple_lorgparser_LDADD = $(BOOST_LDFLAGS)  $(BOOST_REGEX_LIB) $(BOOST_PROGRAM_OPTIONS_LIB) $(TBB_LDFLAGS) $(TBB_LIBS)
#simple_lorgparser_CXXFLAGS= -O3 -Wall -pipe -fomit-frame-pointer -march=core2  -mtune=core2
#simple_lorgparser_CXXFLAGS= -O3 -Wall -pipe -DNDEBUG -fomit-frame-pointer

#flags for debugging
#simple_lorgparser_CPPFLAGS= $(BOOST_CPPFLAGS) -I.
#simple_lorgparser_CXXFLAGS= -O2 -g -pg -Wall
@WANT_TCMALLOC_TRUE@simple_lorgparser_LDADD = $(BOOST_LDFLAGS) $(BOOST_REGEX_LIB) $(BOOST_PROGRAM_OPTIONS_LIB) $(TBB_LDFLAGS) $(TBB_LIBS) -ltcmalloc
#simple_lorgparser_LDADD = $(BOOST_LDFLAGS) $(BOOST_REGEX_LIB) $(BOOST_PROGRAM_OPTIONS_LIB) -lprofiler
twostage_lorgparser_SOURCES = $(common_sources) \
	twostage_lorgparser.cpp \
	grammars/compact_binary_rules_annotated.cpp \
	grammars/AnnotatedLabelsInfo.h \
	grammars/AnnotatedLabelsInfo.cpp grammars/GrammarAnnotated.h \
	utils/RuleVect2Map.h utils/data_parsers/BURuleInputParser.cpp \
	utils/data_parsers/BURuleInputParser.h \
	utils/data_parsers/AnnotHistoriesParser.h \
	utils/data_parsers/AnnotHistoriesParser.cpp edges/PackedEdge.h \
	edges/PackedEdgeDaughters.h edges/PackedEdgeProbability.h \
	edges/ViterbiProbability.h edges/maxrule_functions.h \
	edges/MaxRuleProbability.h edges/MaxRuleProbabilityKB.h \
	edges/MaxRuleProbabilityMultiple.h PCKYAllCell.h \
	parsers/ParserCKYAll.h parsers/ParserCKYAllViterbi.h \
	parsers/ParserCKYAllMaxVar.h parsers/ParserCKYAllMaxVarKB.h \
	parsers/ParserCKYAllMaxVarMultiple.h \
	parsers/ParserCKYAllFactory.h rules/AnnotatedRule.h \
	edges/AnnotationInfo.h edges/AnnotationInfo.cpp rules/C2f.h \
	rules/BRule.h rules/BRule.cpp rules/BRuleC2f.h rules/URule.h \
	rules/URule.cpp rules/URuleC2f.h rules/LexicalRule.h \
	rules/LexicalRule.cpp rules/LexicalRuleC2f.h \
	TwoStageLorgParseApp.h
twostage_lorgparser_CPPFLAGS = $(BOOST_CPPFLAGS) $(TBB_CPPFLAGS) -I. -DNDEBUG
twostage_lorgparser_CXXFLAGS = -O6 -Wall -Wextra -pipe
@WANT_TCMALLOC_FALSE@twostage_lorgparser_LDADD = $(BOOST_LDFLAGS)  $(BOOST_REGEX_LIB) $(BOOST_PROGRAM_OPTIONS_LIB) $(BOOST_SYSTEM_LIB) $(BOOST_THREAD_LIB) $(TBB_LDFLAGS) $(TBB_LIBS)
#twostage_lorgparser_CXXFLAGS= -Ofast -Wall -Wextra -pipe
#twostage_lorgparser_CXXFLAGS= -O3 -Wall -pipe -fomit-frame-pointer -march=core2  -mtune=core2
#twostage_lorgparser_CXXFLAGS= -O3 -Wall -pipe -DNDEBUG -fomit-frame-pointer

#flags for debugging
#twostage_lorgparser_CPPFLAGS= $(BOOST_CPPFLAGS) -I.
#twostage_lorgparser_CXXFLAGS= -O1 -g -pg -Wall -Wextra -fno-inline-functions -fno-inline-functions-called-once -fno-optimize-sibling-calls
@WANT_TCMALLOC_TRUE@twostage_lorgparser_LDADD = $(BOOST_LDFLAGS) $(BOOST_REGEX_LIB) $(BOOST_PROGRAM_OPTIONS_LIB) $(BOOST_SYSTEM_LIB) $(BOOST_THREAD_LIB) $(TBB_LDFLAGS) $(TBB_LIBS) -ltcmalloc
#twostage_lorgparser_LDADD = $(BOOST_LDFLAGS) $(BOOST_REGEX_LIB) $(BOOST_PROGRAM_OPTIONS_LIB)  $(BOOST_THREAD_LIB) -lprofiler

# gram2clmodel_CXXFLAGS= -O2 -g -pg -Wall
# gram2clmodel_SOURCES = gram2clmodel.cpp TagGuesser.cpp utils/SymbolTable.cpp \
# 	utils/Features.cpp rules/Production.cpp rules/Rule.cpp \
# 	utils/data_parsers/RuleInputParser.cpp

# gram2clmodel_LDADD = $(BOOST_LDFLAGS) $(BOOST_REGEX_LIB) $(BOOST_PROGRAM_OPTIONS_LIB)
# # gram2clmodel_LDADD = $(BOOST_LDFLAGS) $(BOOST_REGEX_LIB) -lprofiler -ltcmalloc
feature_extractor_CXXFLAGS = -O3 -Wall -Wextra -pipe
feature_extractor_SOURCES = feature_extract/ExtractApp.h \
	feature_extract/ExtractApp.cpp \
	LorgApp.h LorgApp.cpp \
	feature_extract/Extract.h feature_extract/Extract.cpp \
	feature_extract/Feature.h feature_extract/Feature.cpp \
	utils/data_parsers/PTBInputParser.h utils/data_parsers/PTBInputParser.cpp \
	utils/PtbPsTree.cpp utils/PtbPsTree.h utils/PsTree.h \
	utils/Tree.h utils/tree_detail/BreadthFirstTreeIterator.h  \
	utils/tree_detail/ConstDepthFirstTreeIterator.h  \
	utils/tree_detail/ConstLeafTreeIterator.h  utils/tree_detail/ConstTreeIterator.h  \
	utils/tree_detail/DepthFirstTreeIterator.h  utils/tree_detail/LeafTreeIterator.h  \
	utils/tree_detail/Node.h  utils/tree_detail/TreeIterator.h \
	utils/LorgConstants.h\
	utils/ConfigTable.h utils/ConfigTable.cpp utils/LorgOptions.h \
	utils/data_parsers/ParseError.h \
	utils/SymbolTable.h utils/SymbolTable.cpp \
	rules/Types4Rules.h rules/MetaProduction.h \
	rules/Production.cpp rules/Production.h


#\	rules/Rule.cpp rules/Rule.h
feature_extractor_LDADD = $(BOOST_LDFLAGS) $(BOOST_REGEX_LIB) $(BOOST_PROGRAM_OPTIONS_LIB)
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
feature_extractor$(EXEEXT): $(feature_extractor_OBJECTS) $(feature_extractor_DEPENDENCIES) $(EXTRA_feature_extractor_DEPENDENCIES) 
	@rm -f feature_extractor$(EXEEXT)
	$(feature_extractor_LINK) $(feature_extractor_OBJECTS) $(feature_extractor_LDADD) $(LIBS)
simple_lorgparser$(EXEEXT): $(simple_lorgparser_OBJECTS) $(simple_lorgparser_DEPENDENCIES) $(EXTRA_simple_lorgparser_DEPENDENCIES) 
	@rm -f simple_lorgparser$(EXEEXT)
	$(simple_lorgparser_LINK) $(simple_lorgparser_OBJECTS) $(simple_lorgparser_LDADD) $(LIBS)
twostage_lorgparser$(EXEEXT): $(twostage_lorgparser_OBJECTS) $(twostage_lorgparser_DEPENDENCIES) $(EXTRA_twostage_lorgparser_DEPENDENCIES) 
	@rm -f twostage_lorgparser$(EXEEXT)
	$(twostage_lorgparser_LINK) $(twostage_lorgparser_OBJECTS) $(twostage_lorgparser_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/feature_extractor-ConfigTable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/feature_extractor-Extract.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/feature_extractor-ExtractApp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/feature_extractor-Feature.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/feature_extractor-LorgApp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/feature_extractor-PTBInputParser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/feature_extractor-Production.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/feature_extractor-PtbPsTree.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/feature_extractor-SymbolTable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simple_lorgparser-ArabicIGMapping.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simple_lorgparser-ArabicUMapping.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simple_lorgparser-BaselineFrenchUMapping.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simple_lorgparser-BerkeleyEnglishUMapping.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simple_lorgparser-ConfigTable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simple_lorgparser-Edge.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simple_lorgparser-EnglishIGMapping.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simple_lorgparser-Extract.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simple_lorgparser-Feature.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simple_lorgparser-FrenchIGMapping.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simple_lorgparser-Grammar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simple_lorgparser-ItalianIGMapping.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simple_lorgparser-LorgApp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simple_lorgparser-LorgParseApp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simple_lorgparser-PCKYBestCell.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simple_lorgparser-ParserCKYBest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simple_lorgparser-Production.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simple_lorgparser-PtbPsTree.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simple_lorgparser-RandomGenerator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simple_lorgparser-Rule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simple_lorgparser-RuleInputParser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simple_lorgparser-SimpleLorgParseApp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simple_lorgparser-SymbolTable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simple_lorgparser-Tagger.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simple_lorgparser-Tokeniser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simple_lorgparser-TokeniserFactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simple_lorgparser-Word.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simple_lorgparser-WordSignatureFactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simple_lorgparser-compact_binary_rules.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simple_lorgparser-compact_binary_rules_simple.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simple_lorgparser-simple_lorgparser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser-AnnotHistoriesParser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser-AnnotatedLabelsInfo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser-AnnotationInfo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser-ArabicIGMapping.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser-ArabicUMapping.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser-BRule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser-BURuleInputParser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser-BaselineFrenchUMapping.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser-BerkeleyEnglishUMapping.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser-ConfigTable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser-EnglishIGMapping.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser-Extract.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser-Feature.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser-FrenchIGMapping.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser-Grammar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser-ItalianIGMapping.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser-LexicalRule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser-LorgApp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser-LorgParseApp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser-Production.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser-PtbPsTree.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser-RandomGenerator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser-Rule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser-SymbolTable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser-Tagger.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser-Tokeniser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser-TokeniserFactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser-URule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser-Word.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser-WordSignatureFactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser-compact_binary_rules.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser-compact_binary_rules_annotated.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twostage_lorgparser-twostage_lorgparser.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

feature_extractor-ExtractApp.o: feature_extract/ExtractApp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(feature_extractor_CXXFLAGS) $(CXXFLAGS) -MT feature_extractor-ExtractApp.o -MD -MP -MF $(DEPDIR)/feature_extractor-ExtractApp.Tpo -c -o feature_extractor-ExtractApp.o `test -f 'feature_extract/ExtractApp.cpp' || echo '$(srcdir)/'`feature_extract/ExtractApp.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/feature_extractor-ExtractApp.Tpo $(DEPDIR)/feature_extractor-ExtractApp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='feature_extract/ExtractApp.cpp' object='feature_extractor-ExtractApp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(feature_extractor_CXXFLAGS) $(CXXFLAGS) -c -o feature_extractor-ExtractApp.o `test -f 'feature_extract/ExtractApp.cpp' || echo '$(srcdir)/'`feature_extract/ExtractApp.cpp

feature_extractor-ExtractApp.obj: feature_extract/ExtractApp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(feature_extractor_CXXFLAGS) $(CXXFLAGS) -MT feature_extractor-ExtractApp.obj -MD -MP -MF $(DEPDIR)/feature_extractor-ExtractApp.Tpo -c -o feature_extractor-ExtractApp.obj `if test -f 'feature_extract/ExtractApp.cpp'; then $(CYGPATH_W) 'feature_extract/ExtractApp.cpp'; else $(CYGPATH_W) '$(srcdir)/feature_extract/ExtractApp.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/feature_extractor-ExtractApp.Tpo $(DEPDIR)/feature_extractor-ExtractApp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='feature_extract/ExtractApp.cpp' object='feature_extractor-ExtractApp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(feature_extractor_CXXFLAGS) $(CXXFLAGS) -c -o feature_extractor-ExtractApp.obj `if test -f 'feature_extract/ExtractApp.cpp'; then $(CYGPATH_W) 'feature_extract/ExtractApp.cpp'; else $(CYGPATH_W) '$(srcdir)/feature_extract/ExtractApp.cpp'; fi`

feature_extractor-LorgApp.o: LorgApp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(feature_extractor_CXXFLAGS) $(CXXFLAGS) -MT feature_extractor-LorgApp.o -MD -MP -MF $(DEPDIR)/feature_extractor-LorgApp.Tpo -c -o feature_extractor-LorgApp.o `test -f 'LorgApp.cpp' || echo '$(srcdir)/'`LorgApp.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/feature_extractor-LorgApp.Tpo $(DEPDIR)/feature_extractor-LorgApp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LorgApp.cpp' object='feature_extractor-LorgApp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(feature_extractor_CXXFLAGS) $(CXXFLAGS) -c -o feature_extractor-LorgApp.o `test -f 'LorgApp.cpp' || echo '$(srcdir)/'`LorgApp.cpp

feature_extractor-LorgApp.obj: LorgApp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(feature_extractor_CXXFLAGS) $(CXXFLAGS) -MT feature_extractor-LorgApp.obj -MD -MP -MF $(DEPDIR)/feature_extractor-LorgApp.Tpo -c -o feature_extractor-LorgApp.obj `if test -f 'LorgApp.cpp'; then $(CYGPATH_W) 'LorgApp.cpp'; else $(CYGPATH_W) '$(srcdir)/LorgApp.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/feature_extractor-LorgApp.Tpo $(DEPDIR)/feature_extractor-LorgApp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LorgApp.cpp' object='feature_extractor-LorgApp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(feature_extractor_CXXFLAGS) $(CXXFLAGS) -c -o feature_extractor-LorgApp.obj `if test -f 'LorgApp.cpp'; then $(CYGPATH_W) 'LorgApp.cpp'; else $(CYGPATH_W) '$(srcdir)/LorgApp.cpp'; fi`

feature_extractor-Extract.o: feature_extract/Extract.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(feature_extractor_CXXFLAGS) $(CXXFLAGS) -MT feature_extractor-Extract.o -MD -MP -MF $(DEPDIR)/feature_extractor-Extract.Tpo -c -o feature_extractor-Extract.o `test -f 'feature_extract/Extract.cpp' || echo '$(srcdir)/'`feature_extract/Extract.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/feature_extractor-Extract.Tpo $(DEPDIR)/feature_extractor-Extract.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='feature_extract/Extract.cpp' object='feature_extractor-Extract.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(feature_extractor_CXXFLAGS) $(CXXFLAGS) -c -o feature_extractor-Extract.o `test -f 'feature_extract/Extract.cpp' || echo '$(srcdir)/'`feature_extract/Extract.cpp

feature_extractor-Extract.obj: feature_extract/Extract.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(feature_extractor_CXXFLAGS) $(CXXFLAGS) -MT feature_extractor-Extract.obj -MD -MP -MF $(DEPDIR)/feature_extractor-Extract.Tpo -c -o feature_extractor-Extract.obj `if test -f 'feature_extract/Extract.cpp'; then $(CYGPATH_W) 'feature_extract/Extract.cpp'; else $(CYGPATH_W) '$(srcdir)/feature_extract/Extract.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/feature_extractor-Extract.Tpo $(DEPDIR)/feature_extractor-Extract.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='feature_extract/Extract.cpp' object='feature_extractor-Extract.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(feature_extractor_CXXFLAGS) $(CXXFLAGS) -c -o feature_extractor-Extract.obj `if test -f 'feature_extract/Extract.cpp'; then $(CYGPATH_W) 'feature_extract/Extract.cpp'; else $(CYGPATH_W) '$(srcdir)/feature_extract/Extract.cpp'; fi`

feature_extractor-Feature.o: feature_extract/Feature.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(feature_extractor_CXXFLAGS) $(CXXFLAGS) -MT feature_extractor-Feature.o -MD -MP -MF $(DEPDIR)/feature_extractor-Feature.Tpo -c -o feature_extractor-Feature.o `test -f 'feature_extract/Feature.cpp' || echo '$(srcdir)/'`feature_extract/Feature.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/feature_extractor-Feature.Tpo $(DEPDIR)/feature_extractor-Feature.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='feature_extract/Feature.cpp' object='feature_extractor-Feature.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(feature_extractor_CXXFLAGS) $(CXXFLAGS) -c -o feature_extractor-Feature.o `test -f 'feature_extract/Feature.cpp' || echo '$(srcdir)/'`feature_extract/Feature.cpp

feature_extractor-Feature.obj: feature_extract/Feature.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(feature_extractor_CXXFLAGS) $(CXXFLAGS) -MT feature_extractor-Feature.obj -MD -MP -MF $(DEPDIR)/feature_extractor-Feature.Tpo -c -o feature_extractor-Feature.obj `if test -f 'feature_extract/Feature.cpp'; then $(CYGPATH_W) 'feature_extract/Feature.cpp'; else $(CYGPATH_W) '$(srcdir)/feature_extract/Feature.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/feature_extractor-Feature.Tpo $(DEPDIR)/feature_extractor-Feature.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='feature_extract/Feature.cpp' object='feature_extractor-Feature.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(feature_extractor_CXXFLAGS) $(CXXFLAGS) -c -o feature_extractor-Feature.obj `if test -f 'feature_extract/Feature.cpp'; then $(CYGPATH_W) 'feature_extract/Feature.cpp'; else $(CYGPATH_W) '$(srcdir)/feature_extract/Feature.cpp'; fi`

feature_extractor-PTBInputParser.o: utils/data_parsers/PTBInputParser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(feature_extractor_CXXFLAGS) $(CXXFLAGS) -MT feature_extractor-PTBInputParser.o -MD -MP -MF $(DEPDIR)/feature_extractor-PTBInputParser.Tpo -c -o feature_extractor-PTBInputParser.o `test -f 'utils/data_parsers/PTBInputParser.cpp' || echo '$(srcdir)/'`utils/data_parsers/PTBInputParser.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/feature_extractor-PTBInputParser.Tpo $(DEPDIR)/feature_extractor-PTBInputParser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/data_parsers/PTBInputParser.cpp' object='feature_extractor-PTBInputParser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(feature_extractor_CXXFLAGS) $(CXXFLAGS) -c -o feature_extractor-PTBInputParser.o `test -f 'utils/data_parsers/PTBInputParser.cpp' || echo '$(srcdir)/'`utils/data_parsers/PTBInputParser.cpp

feature_extractor-PTBInputParser.obj: utils/data_parsers/PTBInputParser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(feature_extractor_CXXFLAGS) $(CXXFLAGS) -MT feature_extractor-PTBInputParser.obj -MD -MP -MF $(DEPDIR)/feature_extractor-PTBInputParser.Tpo -c -o feature_extractor-PTBInputParser.obj `if test -f 'utils/data_parsers/PTBInputParser.cpp'; then $(CYGPATH_W) 'utils/data_parsers/PTBInputParser.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/data_parsers/PTBInputParser.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/feature_extractor-PTBInputParser.Tpo $(DEPDIR)/feature_extractor-PTBInputParser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/data_parsers/PTBInputParser.cpp' object='feature_extractor-PTBInputParser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(feature_extractor_CXXFLAGS) $(CXXFLAGS) -c -o feature_extractor-PTBInputParser.obj `if test -f 'utils/data_parsers/PTBInputParser.cpp'; then $(CYGPATH_W) 'utils/data_parsers/PTBInputParser.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/data_parsers/PTBInputParser.cpp'; fi`

feature_extractor-PtbPsTree.o: utils/PtbPsTree.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(feature_extractor_CXXFLAGS) $(CXXFLAGS) -MT feature_extractor-PtbPsTree.o -MD -MP -MF $(DEPDIR)/feature_extractor-PtbPsTree.Tpo -c -o feature_extractor-PtbPsTree.o `test -f 'utils/PtbPsTree.cpp' || echo '$(srcdir)/'`utils/PtbPsTree.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/feature_extractor-PtbPsTree.Tpo $(DEPDIR)/feature_extractor-PtbPsTree.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/PtbPsTree.cpp' object='feature_extractor-PtbPsTree.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(feature_extractor_CXXFLAGS) $(CXXFLAGS) -c -o feature_extractor-PtbPsTree.o `test -f 'utils/PtbPsTree.cpp' || echo '$(srcdir)/'`utils/PtbPsTree.cpp

feature_extractor-PtbPsTree.obj: utils/PtbPsTree.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(feature_extractor_CXXFLAGS) $(CXXFLAGS) -MT feature_extractor-PtbPsTree.obj -MD -MP -MF $(DEPDIR)/feature_extractor-PtbPsTree.Tpo -c -o feature_extractor-PtbPsTree.obj `if test -f 'utils/PtbPsTree.cpp'; then $(CYGPATH_W) 'utils/PtbPsTree.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/PtbPsTree.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/feature_extractor-PtbPsTree.Tpo $(DEPDIR)/feature_extractor-PtbPsTree.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/PtbPsTree.cpp' object='feature_extractor-PtbPsTree.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(feature_extractor_CXXFLAGS) $(CXXFLAGS) -c -o feature_extractor-PtbPsTree.obj `if test -f 'utils/PtbPsTree.cpp'; then $(CYGPATH_W) 'utils/PtbPsTree.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/PtbPsTree.cpp'; fi`

feature_extractor-ConfigTable.o: utils/ConfigTable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(feature_extractor_CXXFLAGS) $(CXXFLAGS) -MT feature_extractor-ConfigTable.o -MD -MP -MF $(DEPDIR)/feature_extractor-ConfigTable.Tpo -c -o feature_extractor-ConfigTable.o `test -f 'utils/ConfigTable.cpp' || echo '$(srcdir)/'`utils/ConfigTable.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/feature_extractor-ConfigTable.Tpo $(DEPDIR)/feature_extractor-ConfigTable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/ConfigTable.cpp' object='feature_extractor-ConfigTable.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(feature_extractor_CXXFLAGS) $(CXXFLAGS) -c -o feature_extractor-ConfigTable.o `test -f 'utils/ConfigTable.cpp' || echo '$(srcdir)/'`utils/ConfigTable.cpp

feature_extractor-ConfigTable.obj: utils/ConfigTable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(feature_extractor_CXXFLAGS) $(CXXFLAGS) -MT feature_extractor-ConfigTable.obj -MD -MP -MF $(DEPDIR)/feature_extractor-ConfigTable.Tpo -c -o feature_extractor-ConfigTable.obj `if test -f 'utils/ConfigTable.cpp'; then $(CYGPATH_W) 'utils/ConfigTable.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/ConfigTable.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/feature_extractor-ConfigTable.Tpo $(DEPDIR)/feature_extractor-ConfigTable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/ConfigTable.cpp' object='feature_extractor-ConfigTable.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(feature_extractor_CXXFLAGS) $(CXXFLAGS) -c -o feature_extractor-ConfigTable.obj `if test -f 'utils/ConfigTable.cpp'; then $(CYGPATH_W) 'utils/ConfigTable.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/ConfigTable.cpp'; fi`

feature_extractor-SymbolTable.o: utils/SymbolTable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(feature_extractor_CXXFLAGS) $(CXXFLAGS) -MT feature_extractor-SymbolTable.o -MD -MP -MF $(DEPDIR)/feature_extractor-SymbolTable.Tpo -c -o feature_extractor-SymbolTable.o `test -f 'utils/SymbolTable.cpp' || echo '$(srcdir)/'`utils/SymbolTable.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/feature_extractor-SymbolTable.Tpo $(DEPDIR)/feature_extractor-SymbolTable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/SymbolTable.cpp' object='feature_extractor-SymbolTable.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(feature_extractor_CXXFLAGS) $(CXXFLAGS) -c -o feature_extractor-SymbolTable.o `test -f 'utils/SymbolTable.cpp' || echo '$(srcdir)/'`utils/SymbolTable.cpp

feature_extractor-SymbolTable.obj: utils/SymbolTable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(feature_extractor_CXXFLAGS) $(CXXFLAGS) -MT feature_extractor-SymbolTable.obj -MD -MP -MF $(DEPDIR)/feature_extractor-SymbolTable.Tpo -c -o feature_extractor-SymbolTable.obj `if test -f 'utils/SymbolTable.cpp'; then $(CYGPATH_W) 'utils/SymbolTable.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/SymbolTable.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/feature_extractor-SymbolTable.Tpo $(DEPDIR)/feature_extractor-SymbolTable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/SymbolTable.cpp' object='feature_extractor-SymbolTable.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(feature_extractor_CXXFLAGS) $(CXXFLAGS) -c -o feature_extractor-SymbolTable.obj `if test -f 'utils/SymbolTable.cpp'; then $(CYGPATH_W) 'utils/SymbolTable.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/SymbolTable.cpp'; fi`

feature_extractor-Production.o: rules/Production.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(feature_extractor_CXXFLAGS) $(CXXFLAGS) -MT feature_extractor-Production.o -MD -MP -MF $(DEPDIR)/feature_extractor-Production.Tpo -c -o feature_extractor-Production.o `test -f 'rules/Production.cpp' || echo '$(srcdir)/'`rules/Production.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/feature_extractor-Production.Tpo $(DEPDIR)/feature_extractor-Production.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='rules/Production.cpp' object='feature_extractor-Production.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(feature_extractor_CXXFLAGS) $(CXXFLAGS) -c -o feature_extractor-Production.o `test -f 'rules/Production.cpp' || echo '$(srcdir)/'`rules/Production.cpp

feature_extractor-Production.obj: rules/Production.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(feature_extractor_CXXFLAGS) $(CXXFLAGS) -MT feature_extractor-Production.obj -MD -MP -MF $(DEPDIR)/feature_extractor-Production.Tpo -c -o feature_extractor-Production.obj `if test -f 'rules/Production.cpp'; then $(CYGPATH_W) 'rules/Production.cpp'; else $(CYGPATH_W) '$(srcdir)/rules/Production.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/feature_extractor-Production.Tpo $(DEPDIR)/feature_extractor-Production.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='rules/Production.cpp' object='feature_extractor-Production.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(feature_extractor_CXXFLAGS) $(CXXFLAGS) -c -o feature_extractor-Production.obj `if test -f 'rules/Production.cpp'; then $(CYGPATH_W) 'rules/Production.cpp'; else $(CYGPATH_W) '$(srcdir)/rules/Production.cpp'; fi`

simple_lorgparser-Production.o: rules/Production.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-Production.o -MD -MP -MF $(DEPDIR)/simple_lorgparser-Production.Tpo -c -o simple_lorgparser-Production.o `test -f 'rules/Production.cpp' || echo '$(srcdir)/'`rules/Production.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-Production.Tpo $(DEPDIR)/simple_lorgparser-Production.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='rules/Production.cpp' object='simple_lorgparser-Production.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-Production.o `test -f 'rules/Production.cpp' || echo '$(srcdir)/'`rules/Production.cpp

simple_lorgparser-Production.obj: rules/Production.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-Production.obj -MD -MP -MF $(DEPDIR)/simple_lorgparser-Production.Tpo -c -o simple_lorgparser-Production.obj `if test -f 'rules/Production.cpp'; then $(CYGPATH_W) 'rules/Production.cpp'; else $(CYGPATH_W) '$(srcdir)/rules/Production.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-Production.Tpo $(DEPDIR)/simple_lorgparser-Production.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='rules/Production.cpp' object='simple_lorgparser-Production.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-Production.obj `if test -f 'rules/Production.cpp'; then $(CYGPATH_W) 'rules/Production.cpp'; else $(CYGPATH_W) '$(srcdir)/rules/Production.cpp'; fi`

simple_lorgparser-Rule.o: rules/Rule.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-Rule.o -MD -MP -MF $(DEPDIR)/simple_lorgparser-Rule.Tpo -c -o simple_lorgparser-Rule.o `test -f 'rules/Rule.cpp' || echo '$(srcdir)/'`rules/Rule.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-Rule.Tpo $(DEPDIR)/simple_lorgparser-Rule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='rules/Rule.cpp' object='simple_lorgparser-Rule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-Rule.o `test -f 'rules/Rule.cpp' || echo '$(srcdir)/'`rules/Rule.cpp

simple_lorgparser-Rule.obj: rules/Rule.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-Rule.obj -MD -MP -MF $(DEPDIR)/simple_lorgparser-Rule.Tpo -c -o simple_lorgparser-Rule.obj `if test -f 'rules/Rule.cpp'; then $(CYGPATH_W) 'rules/Rule.cpp'; else $(CYGPATH_W) '$(srcdir)/rules/Rule.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-Rule.Tpo $(DEPDIR)/simple_lorgparser-Rule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='rules/Rule.cpp' object='simple_lorgparser-Rule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-Rule.obj `if test -f 'rules/Rule.cpp'; then $(CYGPATH_W) 'rules/Rule.cpp'; else $(CYGPATH_W) '$(srcdir)/rules/Rule.cpp'; fi`

simple_lorgparser-compact_binary_rules.o: grammars/compact_binary_rules.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-compact_binary_rules.o -MD -MP -MF $(DEPDIR)/simple_lorgparser-compact_binary_rules.Tpo -c -o simple_lorgparser-compact_binary_rules.o `test -f 'grammars/compact_binary_rules.cpp' || echo '$(srcdir)/'`grammars/compact_binary_rules.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-compact_binary_rules.Tpo $(DEPDIR)/simple_lorgparser-compact_binary_rules.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='grammars/compact_binary_rules.cpp' object='simple_lorgparser-compact_binary_rules.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-compact_binary_rules.o `test -f 'grammars/compact_binary_rules.cpp' || echo '$(srcdir)/'`grammars/compact_binary_rules.cpp

simple_lorgparser-compact_binary_rules.obj: grammars/compact_binary_rules.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-compact_binary_rules.obj -MD -MP -MF $(DEPDIR)/simple_lorgparser-compact_binary_rules.Tpo -c -o simple_lorgparser-compact_binary_rules.obj `if test -f 'grammars/compact_binary_rules.cpp'; then $(CYGPATH_W) 'grammars/compact_binary_rules.cpp'; else $(CYGPATH_W) '$(srcdir)/grammars/compact_binary_rules.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-compact_binary_rules.Tpo $(DEPDIR)/simple_lorgparser-compact_binary_rules.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='grammars/compact_binary_rules.cpp' object='simple_lorgparser-compact_binary_rules.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-compact_binary_rules.obj `if test -f 'grammars/compact_binary_rules.cpp'; then $(CYGPATH_W) 'grammars/compact_binary_rules.cpp'; else $(CYGPATH_W) '$(srcdir)/grammars/compact_binary_rules.cpp'; fi`

simple_lorgparser-Grammar.o: grammars/Grammar.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-Grammar.o -MD -MP -MF $(DEPDIR)/simple_lorgparser-Grammar.Tpo -c -o simple_lorgparser-Grammar.o `test -f 'grammars/Grammar.cpp' || echo '$(srcdir)/'`grammars/Grammar.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-Grammar.Tpo $(DEPDIR)/simple_lorgparser-Grammar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='grammars/Grammar.cpp' object='simple_lorgparser-Grammar.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-Grammar.o `test -f 'grammars/Grammar.cpp' || echo '$(srcdir)/'`grammars/Grammar.cpp

simple_lorgparser-Grammar.obj: grammars/Grammar.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-Grammar.obj -MD -MP -MF $(DEPDIR)/simple_lorgparser-Grammar.Tpo -c -o simple_lorgparser-Grammar.obj `if test -f 'grammars/Grammar.cpp'; then $(CYGPATH_W) 'grammars/Grammar.cpp'; else $(CYGPATH_W) '$(srcdir)/grammars/Grammar.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-Grammar.Tpo $(DEPDIR)/simple_lorgparser-Grammar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='grammars/Grammar.cpp' object='simple_lorgparser-Grammar.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-Grammar.obj `if test -f 'grammars/Grammar.cpp'; then $(CYGPATH_W) 'grammars/Grammar.cpp'; else $(CYGPATH_W) '$(srcdir)/grammars/Grammar.cpp'; fi`

simple_lorgparser-SymbolTable.o: utils/SymbolTable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-SymbolTable.o -MD -MP -MF $(DEPDIR)/simple_lorgparser-SymbolTable.Tpo -c -o simple_lorgparser-SymbolTable.o `test -f 'utils/SymbolTable.cpp' || echo '$(srcdir)/'`utils/SymbolTable.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-SymbolTable.Tpo $(DEPDIR)/simple_lorgparser-SymbolTable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/SymbolTable.cpp' object='simple_lorgparser-SymbolTable.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-SymbolTable.o `test -f 'utils/SymbolTable.cpp' || echo '$(srcdir)/'`utils/SymbolTable.cpp

simple_lorgparser-SymbolTable.obj: utils/SymbolTable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-SymbolTable.obj -MD -MP -MF $(DEPDIR)/simple_lorgparser-SymbolTable.Tpo -c -o simple_lorgparser-SymbolTable.obj `if test -f 'utils/SymbolTable.cpp'; then $(CYGPATH_W) 'utils/SymbolTable.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/SymbolTable.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-SymbolTable.Tpo $(DEPDIR)/simple_lorgparser-SymbolTable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/SymbolTable.cpp' object='simple_lorgparser-SymbolTable.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-SymbolTable.obj `if test -f 'utils/SymbolTable.cpp'; then $(CYGPATH_W) 'utils/SymbolTable.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/SymbolTable.cpp'; fi`

simple_lorgparser-Tagger.o: utils/Tagger.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-Tagger.o -MD -MP -MF $(DEPDIR)/simple_lorgparser-Tagger.Tpo -c -o simple_lorgparser-Tagger.o `test -f 'utils/Tagger.cpp' || echo '$(srcdir)/'`utils/Tagger.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-Tagger.Tpo $(DEPDIR)/simple_lorgparser-Tagger.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/Tagger.cpp' object='simple_lorgparser-Tagger.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-Tagger.o `test -f 'utils/Tagger.cpp' || echo '$(srcdir)/'`utils/Tagger.cpp

simple_lorgparser-Tagger.obj: utils/Tagger.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-Tagger.obj -MD -MP -MF $(DEPDIR)/simple_lorgparser-Tagger.Tpo -c -o simple_lorgparser-Tagger.obj `if test -f 'utils/Tagger.cpp'; then $(CYGPATH_W) 'utils/Tagger.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/Tagger.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-Tagger.Tpo $(DEPDIR)/simple_lorgparser-Tagger.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/Tagger.cpp' object='simple_lorgparser-Tagger.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-Tagger.obj `if test -f 'utils/Tagger.cpp'; then $(CYGPATH_W) 'utils/Tagger.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/Tagger.cpp'; fi`

simple_lorgparser-TokeniserFactory.o: utils/TokeniserFactory.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-TokeniserFactory.o -MD -MP -MF $(DEPDIR)/simple_lorgparser-TokeniserFactory.Tpo -c -o simple_lorgparser-TokeniserFactory.o `test -f 'utils/TokeniserFactory.cpp' || echo '$(srcdir)/'`utils/TokeniserFactory.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-TokeniserFactory.Tpo $(DEPDIR)/simple_lorgparser-TokeniserFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/TokeniserFactory.cpp' object='simple_lorgparser-TokeniserFactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-TokeniserFactory.o `test -f 'utils/TokeniserFactory.cpp' || echo '$(srcdir)/'`utils/TokeniserFactory.cpp

simple_lorgparser-TokeniserFactory.obj: utils/TokeniserFactory.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-TokeniserFactory.obj -MD -MP -MF $(DEPDIR)/simple_lorgparser-TokeniserFactory.Tpo -c -o simple_lorgparser-TokeniserFactory.obj `if test -f 'utils/TokeniserFactory.cpp'; then $(CYGPATH_W) 'utils/TokeniserFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/TokeniserFactory.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-TokeniserFactory.Tpo $(DEPDIR)/simple_lorgparser-TokeniserFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/TokeniserFactory.cpp' object='simple_lorgparser-TokeniserFactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-TokeniserFactory.obj `if test -f 'utils/TokeniserFactory.cpp'; then $(CYGPATH_W) 'utils/TokeniserFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/TokeniserFactory.cpp'; fi`

simple_lorgparser-Tokeniser.o: utils/Tokeniser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-Tokeniser.o -MD -MP -MF $(DEPDIR)/simple_lorgparser-Tokeniser.Tpo -c -o simple_lorgparser-Tokeniser.o `test -f 'utils/Tokeniser.cpp' || echo '$(srcdir)/'`utils/Tokeniser.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-Tokeniser.Tpo $(DEPDIR)/simple_lorgparser-Tokeniser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/Tokeniser.cpp' object='simple_lorgparser-Tokeniser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-Tokeniser.o `test -f 'utils/Tokeniser.cpp' || echo '$(srcdir)/'`utils/Tokeniser.cpp

simple_lorgparser-Tokeniser.obj: utils/Tokeniser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-Tokeniser.obj -MD -MP -MF $(DEPDIR)/simple_lorgparser-Tokeniser.Tpo -c -o simple_lorgparser-Tokeniser.obj `if test -f 'utils/Tokeniser.cpp'; then $(CYGPATH_W) 'utils/Tokeniser.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/Tokeniser.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-Tokeniser.Tpo $(DEPDIR)/simple_lorgparser-Tokeniser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/Tokeniser.cpp' object='simple_lorgparser-Tokeniser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-Tokeniser.obj `if test -f 'utils/Tokeniser.cpp'; then $(CYGPATH_W) 'utils/Tokeniser.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/Tokeniser.cpp'; fi`

simple_lorgparser-PtbPsTree.o: utils/PtbPsTree.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-PtbPsTree.o -MD -MP -MF $(DEPDIR)/simple_lorgparser-PtbPsTree.Tpo -c -o simple_lorgparser-PtbPsTree.o `test -f 'utils/PtbPsTree.cpp' || echo '$(srcdir)/'`utils/PtbPsTree.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-PtbPsTree.Tpo $(DEPDIR)/simple_lorgparser-PtbPsTree.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/PtbPsTree.cpp' object='simple_lorgparser-PtbPsTree.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-PtbPsTree.o `test -f 'utils/PtbPsTree.cpp' || echo '$(srcdir)/'`utils/PtbPsTree.cpp

simple_lorgparser-PtbPsTree.obj: utils/PtbPsTree.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-PtbPsTree.obj -MD -MP -MF $(DEPDIR)/simple_lorgparser-PtbPsTree.Tpo -c -o simple_lorgparser-PtbPsTree.obj `if test -f 'utils/PtbPsTree.cpp'; then $(CYGPATH_W) 'utils/PtbPsTree.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/PtbPsTree.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-PtbPsTree.Tpo $(DEPDIR)/simple_lorgparser-PtbPsTree.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/PtbPsTree.cpp' object='simple_lorgparser-PtbPsTree.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-PtbPsTree.obj `if test -f 'utils/PtbPsTree.cpp'; then $(CYGPATH_W) 'utils/PtbPsTree.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/PtbPsTree.cpp'; fi`

simple_lorgparser-ConfigTable.o: utils/ConfigTable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-ConfigTable.o -MD -MP -MF $(DEPDIR)/simple_lorgparser-ConfigTable.Tpo -c -o simple_lorgparser-ConfigTable.o `test -f 'utils/ConfigTable.cpp' || echo '$(srcdir)/'`utils/ConfigTable.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-ConfigTable.Tpo $(DEPDIR)/simple_lorgparser-ConfigTable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/ConfigTable.cpp' object='simple_lorgparser-ConfigTable.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-ConfigTable.o `test -f 'utils/ConfigTable.cpp' || echo '$(srcdir)/'`utils/ConfigTable.cpp

simple_lorgparser-ConfigTable.obj: utils/ConfigTable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-ConfigTable.obj -MD -MP -MF $(DEPDIR)/simple_lorgparser-ConfigTable.Tpo -c -o simple_lorgparser-ConfigTable.obj `if test -f 'utils/ConfigTable.cpp'; then $(CYGPATH_W) 'utils/ConfigTable.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/ConfigTable.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-ConfigTable.Tpo $(DEPDIR)/simple_lorgparser-ConfigTable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/ConfigTable.cpp' object='simple_lorgparser-ConfigTable.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-ConfigTable.obj `if test -f 'utils/ConfigTable.cpp'; then $(CYGPATH_W) 'utils/ConfigTable.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/ConfigTable.cpp'; fi`

simple_lorgparser-RandomGenerator.o: utils/RandomGenerator.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-RandomGenerator.o -MD -MP -MF $(DEPDIR)/simple_lorgparser-RandomGenerator.Tpo -c -o simple_lorgparser-RandomGenerator.o `test -f 'utils/RandomGenerator.cpp' || echo '$(srcdir)/'`utils/RandomGenerator.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-RandomGenerator.Tpo $(DEPDIR)/simple_lorgparser-RandomGenerator.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/RandomGenerator.cpp' object='simple_lorgparser-RandomGenerator.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-RandomGenerator.o `test -f 'utils/RandomGenerator.cpp' || echo '$(srcdir)/'`utils/RandomGenerator.cpp

simple_lorgparser-RandomGenerator.obj: utils/RandomGenerator.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-RandomGenerator.obj -MD -MP -MF $(DEPDIR)/simple_lorgparser-RandomGenerator.Tpo -c -o simple_lorgparser-RandomGenerator.obj `if test -f 'utils/RandomGenerator.cpp'; then $(CYGPATH_W) 'utils/RandomGenerator.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/RandomGenerator.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-RandomGenerator.Tpo $(DEPDIR)/simple_lorgparser-RandomGenerator.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/RandomGenerator.cpp' object='simple_lorgparser-RandomGenerator.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-RandomGenerator.obj `if test -f 'utils/RandomGenerator.cpp'; then $(CYGPATH_W) 'utils/RandomGenerator.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/RandomGenerator.cpp'; fi`

simple_lorgparser-WordSignatureFactory.o: lexicon/WordSignatureFactory.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-WordSignatureFactory.o -MD -MP -MF $(DEPDIR)/simple_lorgparser-WordSignatureFactory.Tpo -c -o simple_lorgparser-WordSignatureFactory.o `test -f 'lexicon/WordSignatureFactory.cpp' || echo '$(srcdir)/'`lexicon/WordSignatureFactory.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-WordSignatureFactory.Tpo $(DEPDIR)/simple_lorgparser-WordSignatureFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lexicon/WordSignatureFactory.cpp' object='simple_lorgparser-WordSignatureFactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-WordSignatureFactory.o `test -f 'lexicon/WordSignatureFactory.cpp' || echo '$(srcdir)/'`lexicon/WordSignatureFactory.cpp

simple_lorgparser-WordSignatureFactory.obj: lexicon/WordSignatureFactory.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-WordSignatureFactory.obj -MD -MP -MF $(DEPDIR)/simple_lorgparser-WordSignatureFactory.Tpo -c -o simple_lorgparser-WordSignatureFactory.obj `if test -f 'lexicon/WordSignatureFactory.cpp'; then $(CYGPATH_W) 'lexicon/WordSignatureFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/lexicon/WordSignatureFactory.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-WordSignatureFactory.Tpo $(DEPDIR)/simple_lorgparser-WordSignatureFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lexicon/WordSignatureFactory.cpp' object='simple_lorgparser-WordSignatureFactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-WordSignatureFactory.obj `if test -f 'lexicon/WordSignatureFactory.cpp'; then $(CYGPATH_W) 'lexicon/WordSignatureFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/lexicon/WordSignatureFactory.cpp'; fi`

simple_lorgparser-BerkeleyEnglishUMapping.o: lexicon/BerkeleyEnglishUMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-BerkeleyEnglishUMapping.o -MD -MP -MF $(DEPDIR)/simple_lorgparser-BerkeleyEnglishUMapping.Tpo -c -o simple_lorgparser-BerkeleyEnglishUMapping.o `test -f 'lexicon/BerkeleyEnglishUMapping.cpp' || echo '$(srcdir)/'`lexicon/BerkeleyEnglishUMapping.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-BerkeleyEnglishUMapping.Tpo $(DEPDIR)/simple_lorgparser-BerkeleyEnglishUMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lexicon/BerkeleyEnglishUMapping.cpp' object='simple_lorgparser-BerkeleyEnglishUMapping.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-BerkeleyEnglishUMapping.o `test -f 'lexicon/BerkeleyEnglishUMapping.cpp' || echo '$(srcdir)/'`lexicon/BerkeleyEnglishUMapping.cpp

simple_lorgparser-BerkeleyEnglishUMapping.obj: lexicon/BerkeleyEnglishUMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-BerkeleyEnglishUMapping.obj -MD -MP -MF $(DEPDIR)/simple_lorgparser-BerkeleyEnglishUMapping.Tpo -c -o simple_lorgparser-BerkeleyEnglishUMapping.obj `if test -f 'lexicon/BerkeleyEnglishUMapping.cpp'; then $(CYGPATH_W) 'lexicon/BerkeleyEnglishUMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/lexicon/BerkeleyEnglishUMapping.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-BerkeleyEnglishUMapping.Tpo $(DEPDIR)/simple_lorgparser-BerkeleyEnglishUMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lexicon/BerkeleyEnglishUMapping.cpp' object='simple_lorgparser-BerkeleyEnglishUMapping.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-BerkeleyEnglishUMapping.obj `if test -f 'lexicon/BerkeleyEnglishUMapping.cpp'; then $(CYGPATH_W) 'lexicon/BerkeleyEnglishUMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/lexicon/BerkeleyEnglishUMapping.cpp'; fi`

simple_lorgparser-BaselineFrenchUMapping.o: lexicon/BaselineFrenchUMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-BaselineFrenchUMapping.o -MD -MP -MF $(DEPDIR)/simple_lorgparser-BaselineFrenchUMapping.Tpo -c -o simple_lorgparser-BaselineFrenchUMapping.o `test -f 'lexicon/BaselineFrenchUMapping.cpp' || echo '$(srcdir)/'`lexicon/BaselineFrenchUMapping.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-BaselineFrenchUMapping.Tpo $(DEPDIR)/simple_lorgparser-BaselineFrenchUMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lexicon/BaselineFrenchUMapping.cpp' object='simple_lorgparser-BaselineFrenchUMapping.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-BaselineFrenchUMapping.o `test -f 'lexicon/BaselineFrenchUMapping.cpp' || echo '$(srcdir)/'`lexicon/BaselineFrenchUMapping.cpp

simple_lorgparser-BaselineFrenchUMapping.obj: lexicon/BaselineFrenchUMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-BaselineFrenchUMapping.obj -MD -MP -MF $(DEPDIR)/simple_lorgparser-BaselineFrenchUMapping.Tpo -c -o simple_lorgparser-BaselineFrenchUMapping.obj `if test -f 'lexicon/BaselineFrenchUMapping.cpp'; then $(CYGPATH_W) 'lexicon/BaselineFrenchUMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/lexicon/BaselineFrenchUMapping.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-BaselineFrenchUMapping.Tpo $(DEPDIR)/simple_lorgparser-BaselineFrenchUMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lexicon/BaselineFrenchUMapping.cpp' object='simple_lorgparser-BaselineFrenchUMapping.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-BaselineFrenchUMapping.obj `if test -f 'lexicon/BaselineFrenchUMapping.cpp'; then $(CYGPATH_W) 'lexicon/BaselineFrenchUMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/lexicon/BaselineFrenchUMapping.cpp'; fi`

simple_lorgparser-EnglishIGMapping.o: lexicon/EnglishIGMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-EnglishIGMapping.o -MD -MP -MF $(DEPDIR)/simple_lorgparser-EnglishIGMapping.Tpo -c -o simple_lorgparser-EnglishIGMapping.o `test -f 'lexicon/EnglishIGMapping.cpp' || echo '$(srcdir)/'`lexicon/EnglishIGMapping.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-EnglishIGMapping.Tpo $(DEPDIR)/simple_lorgparser-EnglishIGMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lexicon/EnglishIGMapping.cpp' object='simple_lorgparser-EnglishIGMapping.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-EnglishIGMapping.o `test -f 'lexicon/EnglishIGMapping.cpp' || echo '$(srcdir)/'`lexicon/EnglishIGMapping.cpp

simple_lorgparser-EnglishIGMapping.obj: lexicon/EnglishIGMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-EnglishIGMapping.obj -MD -MP -MF $(DEPDIR)/simple_lorgparser-EnglishIGMapping.Tpo -c -o simple_lorgparser-EnglishIGMapping.obj `if test -f 'lexicon/EnglishIGMapping.cpp'; then $(CYGPATH_W) 'lexicon/EnglishIGMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/lexicon/EnglishIGMapping.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-EnglishIGMapping.Tpo $(DEPDIR)/simple_lorgparser-EnglishIGMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lexicon/EnglishIGMapping.cpp' object='simple_lorgparser-EnglishIGMapping.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-EnglishIGMapping.obj `if test -f 'lexicon/EnglishIGMapping.cpp'; then $(CYGPATH_W) 'lexicon/EnglishIGMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/lexicon/EnglishIGMapping.cpp'; fi`

simple_lorgparser-FrenchIGMapping.o: lexicon/FrenchIGMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-FrenchIGMapping.o -MD -MP -MF $(DEPDIR)/simple_lorgparser-FrenchIGMapping.Tpo -c -o simple_lorgparser-FrenchIGMapping.o `test -f 'lexicon/FrenchIGMapping.cpp' || echo '$(srcdir)/'`lexicon/FrenchIGMapping.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-FrenchIGMapping.Tpo $(DEPDIR)/simple_lorgparser-FrenchIGMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lexicon/FrenchIGMapping.cpp' object='simple_lorgparser-FrenchIGMapping.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-FrenchIGMapping.o `test -f 'lexicon/FrenchIGMapping.cpp' || echo '$(srcdir)/'`lexicon/FrenchIGMapping.cpp

simple_lorgparser-FrenchIGMapping.obj: lexicon/FrenchIGMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-FrenchIGMapping.obj -MD -MP -MF $(DEPDIR)/simple_lorgparser-FrenchIGMapping.Tpo -c -o simple_lorgparser-FrenchIGMapping.obj `if test -f 'lexicon/FrenchIGMapping.cpp'; then $(CYGPATH_W) 'lexicon/FrenchIGMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/lexicon/FrenchIGMapping.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-FrenchIGMapping.Tpo $(DEPDIR)/simple_lorgparser-FrenchIGMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lexicon/FrenchIGMapping.cpp' object='simple_lorgparser-FrenchIGMapping.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-FrenchIGMapping.obj `if test -f 'lexicon/FrenchIGMapping.cpp'; then $(CYGPATH_W) 'lexicon/FrenchIGMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/lexicon/FrenchIGMapping.cpp'; fi`

simple_lorgparser-ItalianIGMapping.o: lexicon/ItalianIGMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-ItalianIGMapping.o -MD -MP -MF $(DEPDIR)/simple_lorgparser-ItalianIGMapping.Tpo -c -o simple_lorgparser-ItalianIGMapping.o `test -f 'lexicon/ItalianIGMapping.cpp' || echo '$(srcdir)/'`lexicon/ItalianIGMapping.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-ItalianIGMapping.Tpo $(DEPDIR)/simple_lorgparser-ItalianIGMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lexicon/ItalianIGMapping.cpp' object='simple_lorgparser-ItalianIGMapping.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-ItalianIGMapping.o `test -f 'lexicon/ItalianIGMapping.cpp' || echo '$(srcdir)/'`lexicon/ItalianIGMapping.cpp

simple_lorgparser-ItalianIGMapping.obj: lexicon/ItalianIGMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-ItalianIGMapping.obj -MD -MP -MF $(DEPDIR)/simple_lorgparser-ItalianIGMapping.Tpo -c -o simple_lorgparser-ItalianIGMapping.obj `if test -f 'lexicon/ItalianIGMapping.cpp'; then $(CYGPATH_W) 'lexicon/ItalianIGMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/lexicon/ItalianIGMapping.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-ItalianIGMapping.Tpo $(DEPDIR)/simple_lorgparser-ItalianIGMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lexicon/ItalianIGMapping.cpp' object='simple_lorgparser-ItalianIGMapping.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-ItalianIGMapping.obj `if test -f 'lexicon/ItalianIGMapping.cpp'; then $(CYGPATH_W) 'lexicon/ItalianIGMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/lexicon/ItalianIGMapping.cpp'; fi`

simple_lorgparser-ArabicUMapping.o: lexicon/ArabicUMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-ArabicUMapping.o -MD -MP -MF $(DEPDIR)/simple_lorgparser-ArabicUMapping.Tpo -c -o simple_lorgparser-ArabicUMapping.o `test -f 'lexicon/ArabicUMapping.cpp' || echo '$(srcdir)/'`lexicon/ArabicUMapping.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-ArabicUMapping.Tpo $(DEPDIR)/simple_lorgparser-ArabicUMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lexicon/ArabicUMapping.cpp' object='simple_lorgparser-ArabicUMapping.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-ArabicUMapping.o `test -f 'lexicon/ArabicUMapping.cpp' || echo '$(srcdir)/'`lexicon/ArabicUMapping.cpp

simple_lorgparser-ArabicUMapping.obj: lexicon/ArabicUMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-ArabicUMapping.obj -MD -MP -MF $(DEPDIR)/simple_lorgparser-ArabicUMapping.Tpo -c -o simple_lorgparser-ArabicUMapping.obj `if test -f 'lexicon/ArabicUMapping.cpp'; then $(CYGPATH_W) 'lexicon/ArabicUMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/lexicon/ArabicUMapping.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-ArabicUMapping.Tpo $(DEPDIR)/simple_lorgparser-ArabicUMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lexicon/ArabicUMapping.cpp' object='simple_lorgparser-ArabicUMapping.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-ArabicUMapping.obj `if test -f 'lexicon/ArabicUMapping.cpp'; then $(CYGPATH_W) 'lexicon/ArabicUMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/lexicon/ArabicUMapping.cpp'; fi`

simple_lorgparser-ArabicIGMapping.o: lexicon/ArabicIGMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-ArabicIGMapping.o -MD -MP -MF $(DEPDIR)/simple_lorgparser-ArabicIGMapping.Tpo -c -o simple_lorgparser-ArabicIGMapping.o `test -f 'lexicon/ArabicIGMapping.cpp' || echo '$(srcdir)/'`lexicon/ArabicIGMapping.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-ArabicIGMapping.Tpo $(DEPDIR)/simple_lorgparser-ArabicIGMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lexicon/ArabicIGMapping.cpp' object='simple_lorgparser-ArabicIGMapping.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-ArabicIGMapping.o `test -f 'lexicon/ArabicIGMapping.cpp' || echo '$(srcdir)/'`lexicon/ArabicIGMapping.cpp

simple_lorgparser-ArabicIGMapping.obj: lexicon/ArabicIGMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-ArabicIGMapping.obj -MD -MP -MF $(DEPDIR)/simple_lorgparser-ArabicIGMapping.Tpo -c -o simple_lorgparser-ArabicIGMapping.obj `if test -f 'lexicon/ArabicIGMapping.cpp'; then $(CYGPATH_W) 'lexicon/ArabicIGMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/lexicon/ArabicIGMapping.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-ArabicIGMapping.Tpo $(DEPDIR)/simple_lorgparser-ArabicIGMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lexicon/ArabicIGMapping.cpp' object='simple_lorgparser-ArabicIGMapping.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-ArabicIGMapping.obj `if test -f 'lexicon/ArabicIGMapping.cpp'; then $(CYGPATH_W) 'lexicon/ArabicIGMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/lexicon/ArabicIGMapping.cpp'; fi`

simple_lorgparser-Word.o: Word.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-Word.o -MD -MP -MF $(DEPDIR)/simple_lorgparser-Word.Tpo -c -o simple_lorgparser-Word.o `test -f 'Word.cpp' || echo '$(srcdir)/'`Word.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-Word.Tpo $(DEPDIR)/simple_lorgparser-Word.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Word.cpp' object='simple_lorgparser-Word.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-Word.o `test -f 'Word.cpp' || echo '$(srcdir)/'`Word.cpp

simple_lorgparser-Word.obj: Word.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-Word.obj -MD -MP -MF $(DEPDIR)/simple_lorgparser-Word.Tpo -c -o simple_lorgparser-Word.obj `if test -f 'Word.cpp'; then $(CYGPATH_W) 'Word.cpp'; else $(CYGPATH_W) '$(srcdir)/Word.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-Word.Tpo $(DEPDIR)/simple_lorgparser-Word.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Word.cpp' object='simple_lorgparser-Word.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-Word.obj `if test -f 'Word.cpp'; then $(CYGPATH_W) 'Word.cpp'; else $(CYGPATH_W) '$(srcdir)/Word.cpp'; fi`

simple_lorgparser-LorgApp.o: LorgApp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-LorgApp.o -MD -MP -MF $(DEPDIR)/simple_lorgparser-LorgApp.Tpo -c -o simple_lorgparser-LorgApp.o `test -f 'LorgApp.cpp' || echo '$(srcdir)/'`LorgApp.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-LorgApp.Tpo $(DEPDIR)/simple_lorgparser-LorgApp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LorgApp.cpp' object='simple_lorgparser-LorgApp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-LorgApp.o `test -f 'LorgApp.cpp' || echo '$(srcdir)/'`LorgApp.cpp

simple_lorgparser-LorgApp.obj: LorgApp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-LorgApp.obj -MD -MP -MF $(DEPDIR)/simple_lorgparser-LorgApp.Tpo -c -o simple_lorgparser-LorgApp.obj `if test -f 'LorgApp.cpp'; then $(CYGPATH_W) 'LorgApp.cpp'; else $(CYGPATH_W) '$(srcdir)/LorgApp.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-LorgApp.Tpo $(DEPDIR)/simple_lorgparser-LorgApp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LorgApp.cpp' object='simple_lorgparser-LorgApp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-LorgApp.obj `if test -f 'LorgApp.cpp'; then $(CYGPATH_W) 'LorgApp.cpp'; else $(CYGPATH_W) '$(srcdir)/LorgApp.cpp'; fi`

simple_lorgparser-LorgParseApp.o: LorgParseApp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-LorgParseApp.o -MD -MP -MF $(DEPDIR)/simple_lorgparser-LorgParseApp.Tpo -c -o simple_lorgparser-LorgParseApp.o `test -f 'LorgParseApp.cpp' || echo '$(srcdir)/'`LorgParseApp.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-LorgParseApp.Tpo $(DEPDIR)/simple_lorgparser-LorgParseApp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LorgParseApp.cpp' object='simple_lorgparser-LorgParseApp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-LorgParseApp.o `test -f 'LorgParseApp.cpp' || echo '$(srcdir)/'`LorgParseApp.cpp

simple_lorgparser-LorgParseApp.obj: LorgParseApp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-LorgParseApp.obj -MD -MP -MF $(DEPDIR)/simple_lorgparser-LorgParseApp.Tpo -c -o simple_lorgparser-LorgParseApp.obj `if test -f 'LorgParseApp.cpp'; then $(CYGPATH_W) 'LorgParseApp.cpp'; else $(CYGPATH_W) '$(srcdir)/LorgParseApp.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-LorgParseApp.Tpo $(DEPDIR)/simple_lorgparser-LorgParseApp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LorgParseApp.cpp' object='simple_lorgparser-LorgParseApp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-LorgParseApp.obj `if test -f 'LorgParseApp.cpp'; then $(CYGPATH_W) 'LorgParseApp.cpp'; else $(CYGPATH_W) '$(srcdir)/LorgParseApp.cpp'; fi`

simple_lorgparser-Extract.o: feature_extract/Extract.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-Extract.o -MD -MP -MF $(DEPDIR)/simple_lorgparser-Extract.Tpo -c -o simple_lorgparser-Extract.o `test -f 'feature_extract/Extract.cpp' || echo '$(srcdir)/'`feature_extract/Extract.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-Extract.Tpo $(DEPDIR)/simple_lorgparser-Extract.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='feature_extract/Extract.cpp' object='simple_lorgparser-Extract.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-Extract.o `test -f 'feature_extract/Extract.cpp' || echo '$(srcdir)/'`feature_extract/Extract.cpp

simple_lorgparser-Extract.obj: feature_extract/Extract.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-Extract.obj -MD -MP -MF $(DEPDIR)/simple_lorgparser-Extract.Tpo -c -o simple_lorgparser-Extract.obj `if test -f 'feature_extract/Extract.cpp'; then $(CYGPATH_W) 'feature_extract/Extract.cpp'; else $(CYGPATH_W) '$(srcdir)/feature_extract/Extract.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-Extract.Tpo $(DEPDIR)/simple_lorgparser-Extract.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='feature_extract/Extract.cpp' object='simple_lorgparser-Extract.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-Extract.obj `if test -f 'feature_extract/Extract.cpp'; then $(CYGPATH_W) 'feature_extract/Extract.cpp'; else $(CYGPATH_W) '$(srcdir)/feature_extract/Extract.cpp'; fi`

simple_lorgparser-Feature.o: feature_extract/Feature.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-Feature.o -MD -MP -MF $(DEPDIR)/simple_lorgparser-Feature.Tpo -c -o simple_lorgparser-Feature.o `test -f 'feature_extract/Feature.cpp' || echo '$(srcdir)/'`feature_extract/Feature.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-Feature.Tpo $(DEPDIR)/simple_lorgparser-Feature.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='feature_extract/Feature.cpp' object='simple_lorgparser-Feature.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-Feature.o `test -f 'feature_extract/Feature.cpp' || echo '$(srcdir)/'`feature_extract/Feature.cpp

simple_lorgparser-Feature.obj: feature_extract/Feature.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-Feature.obj -MD -MP -MF $(DEPDIR)/simple_lorgparser-Feature.Tpo -c -o simple_lorgparser-Feature.obj `if test -f 'feature_extract/Feature.cpp'; then $(CYGPATH_W) 'feature_extract/Feature.cpp'; else $(CYGPATH_W) '$(srcdir)/feature_extract/Feature.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-Feature.Tpo $(DEPDIR)/simple_lorgparser-Feature.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='feature_extract/Feature.cpp' object='simple_lorgparser-Feature.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-Feature.obj `if test -f 'feature_extract/Feature.cpp'; then $(CYGPATH_W) 'feature_extract/Feature.cpp'; else $(CYGPATH_W) '$(srcdir)/feature_extract/Feature.cpp'; fi`

simple_lorgparser-simple_lorgparser.o: simple_lorgparser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-simple_lorgparser.o -MD -MP -MF $(DEPDIR)/simple_lorgparser-simple_lorgparser.Tpo -c -o simple_lorgparser-simple_lorgparser.o `test -f 'simple_lorgparser.cpp' || echo '$(srcdir)/'`simple_lorgparser.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-simple_lorgparser.Tpo $(DEPDIR)/simple_lorgparser-simple_lorgparser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='simple_lorgparser.cpp' object='simple_lorgparser-simple_lorgparser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-simple_lorgparser.o `test -f 'simple_lorgparser.cpp' || echo '$(srcdir)/'`simple_lorgparser.cpp

simple_lorgparser-simple_lorgparser.obj: simple_lorgparser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-simple_lorgparser.obj -MD -MP -MF $(DEPDIR)/simple_lorgparser-simple_lorgparser.Tpo -c -o simple_lorgparser-simple_lorgparser.obj `if test -f 'simple_lorgparser.cpp'; then $(CYGPATH_W) 'simple_lorgparser.cpp'; else $(CYGPATH_W) '$(srcdir)/simple_lorgparser.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-simple_lorgparser.Tpo $(DEPDIR)/simple_lorgparser-simple_lorgparser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='simple_lorgparser.cpp' object='simple_lorgparser-simple_lorgparser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-simple_lorgparser.obj `if test -f 'simple_lorgparser.cpp'; then $(CYGPATH_W) 'simple_lorgparser.cpp'; else $(CYGPATH_W) '$(srcdir)/simple_lorgparser.cpp'; fi`

simple_lorgparser-compact_binary_rules_simple.o: grammars/compact_binary_rules_simple.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-compact_binary_rules_simple.o -MD -MP -MF $(DEPDIR)/simple_lorgparser-compact_binary_rules_simple.Tpo -c -o simple_lorgparser-compact_binary_rules_simple.o `test -f 'grammars/compact_binary_rules_simple.cpp' || echo '$(srcdir)/'`grammars/compact_binary_rules_simple.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-compact_binary_rules_simple.Tpo $(DEPDIR)/simple_lorgparser-compact_binary_rules_simple.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='grammars/compact_binary_rules_simple.cpp' object='simple_lorgparser-compact_binary_rules_simple.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-compact_binary_rules_simple.o `test -f 'grammars/compact_binary_rules_simple.cpp' || echo '$(srcdir)/'`grammars/compact_binary_rules_simple.cpp

simple_lorgparser-compact_binary_rules_simple.obj: grammars/compact_binary_rules_simple.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-compact_binary_rules_simple.obj -MD -MP -MF $(DEPDIR)/simple_lorgparser-compact_binary_rules_simple.Tpo -c -o simple_lorgparser-compact_binary_rules_simple.obj `if test -f 'grammars/compact_binary_rules_simple.cpp'; then $(CYGPATH_W) 'grammars/compact_binary_rules_simple.cpp'; else $(CYGPATH_W) '$(srcdir)/grammars/compact_binary_rules_simple.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-compact_binary_rules_simple.Tpo $(DEPDIR)/simple_lorgparser-compact_binary_rules_simple.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='grammars/compact_binary_rules_simple.cpp' object='simple_lorgparser-compact_binary_rules_simple.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-compact_binary_rules_simple.obj `if test -f 'grammars/compact_binary_rules_simple.cpp'; then $(CYGPATH_W) 'grammars/compact_binary_rules_simple.cpp'; else $(CYGPATH_W) '$(srcdir)/grammars/compact_binary_rules_simple.cpp'; fi`

simple_lorgparser-RuleInputParser.o: utils/data_parsers/RuleInputParser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-RuleInputParser.o -MD -MP -MF $(DEPDIR)/simple_lorgparser-RuleInputParser.Tpo -c -o simple_lorgparser-RuleInputParser.o `test -f 'utils/data_parsers/RuleInputParser.cpp' || echo '$(srcdir)/'`utils/data_parsers/RuleInputParser.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-RuleInputParser.Tpo $(DEPDIR)/simple_lorgparser-RuleInputParser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/data_parsers/RuleInputParser.cpp' object='simple_lorgparser-RuleInputParser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-RuleInputParser.o `test -f 'utils/data_parsers/RuleInputParser.cpp' || echo '$(srcdir)/'`utils/data_parsers/RuleInputParser.cpp

simple_lorgparser-RuleInputParser.obj: utils/data_parsers/RuleInputParser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-RuleInputParser.obj -MD -MP -MF $(DEPDIR)/simple_lorgparser-RuleInputParser.Tpo -c -o simple_lorgparser-RuleInputParser.obj `if test -f 'utils/data_parsers/RuleInputParser.cpp'; then $(CYGPATH_W) 'utils/data_parsers/RuleInputParser.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/data_parsers/RuleInputParser.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-RuleInputParser.Tpo $(DEPDIR)/simple_lorgparser-RuleInputParser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/data_parsers/RuleInputParser.cpp' object='simple_lorgparser-RuleInputParser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-RuleInputParser.obj `if test -f 'utils/data_parsers/RuleInputParser.cpp'; then $(CYGPATH_W) 'utils/data_parsers/RuleInputParser.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/data_parsers/RuleInputParser.cpp'; fi`

simple_lorgparser-Edge.o: edges/Edge.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-Edge.o -MD -MP -MF $(DEPDIR)/simple_lorgparser-Edge.Tpo -c -o simple_lorgparser-Edge.o `test -f 'edges/Edge.cpp' || echo '$(srcdir)/'`edges/Edge.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-Edge.Tpo $(DEPDIR)/simple_lorgparser-Edge.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='edges/Edge.cpp' object='simple_lorgparser-Edge.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-Edge.o `test -f 'edges/Edge.cpp' || echo '$(srcdir)/'`edges/Edge.cpp

simple_lorgparser-Edge.obj: edges/Edge.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-Edge.obj -MD -MP -MF $(DEPDIR)/simple_lorgparser-Edge.Tpo -c -o simple_lorgparser-Edge.obj `if test -f 'edges/Edge.cpp'; then $(CYGPATH_W) 'edges/Edge.cpp'; else $(CYGPATH_W) '$(srcdir)/edges/Edge.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-Edge.Tpo $(DEPDIR)/simple_lorgparser-Edge.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='edges/Edge.cpp' object='simple_lorgparser-Edge.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-Edge.obj `if test -f 'edges/Edge.cpp'; then $(CYGPATH_W) 'edges/Edge.cpp'; else $(CYGPATH_W) '$(srcdir)/edges/Edge.cpp'; fi`

simple_lorgparser-ParserCKYBest.o: parsers/ParserCKYBest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-ParserCKYBest.o -MD -MP -MF $(DEPDIR)/simple_lorgparser-ParserCKYBest.Tpo -c -o simple_lorgparser-ParserCKYBest.o `test -f 'parsers/ParserCKYBest.cpp' || echo '$(srcdir)/'`parsers/ParserCKYBest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-ParserCKYBest.Tpo $(DEPDIR)/simple_lorgparser-ParserCKYBest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parsers/ParserCKYBest.cpp' object='simple_lorgparser-ParserCKYBest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-ParserCKYBest.o `test -f 'parsers/ParserCKYBest.cpp' || echo '$(srcdir)/'`parsers/ParserCKYBest.cpp

simple_lorgparser-ParserCKYBest.obj: parsers/ParserCKYBest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-ParserCKYBest.obj -MD -MP -MF $(DEPDIR)/simple_lorgparser-ParserCKYBest.Tpo -c -o simple_lorgparser-ParserCKYBest.obj `if test -f 'parsers/ParserCKYBest.cpp'; then $(CYGPATH_W) 'parsers/ParserCKYBest.cpp'; else $(CYGPATH_W) '$(srcdir)/parsers/ParserCKYBest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-ParserCKYBest.Tpo $(DEPDIR)/simple_lorgparser-ParserCKYBest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parsers/ParserCKYBest.cpp' object='simple_lorgparser-ParserCKYBest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-ParserCKYBest.obj `if test -f 'parsers/ParserCKYBest.cpp'; then $(CYGPATH_W) 'parsers/ParserCKYBest.cpp'; else $(CYGPATH_W) '$(srcdir)/parsers/ParserCKYBest.cpp'; fi`

simple_lorgparser-PCKYBestCell.o: PCKYBestCell.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-PCKYBestCell.o -MD -MP -MF $(DEPDIR)/simple_lorgparser-PCKYBestCell.Tpo -c -o simple_lorgparser-PCKYBestCell.o `test -f 'PCKYBestCell.cpp' || echo '$(srcdir)/'`PCKYBestCell.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-PCKYBestCell.Tpo $(DEPDIR)/simple_lorgparser-PCKYBestCell.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='PCKYBestCell.cpp' object='simple_lorgparser-PCKYBestCell.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-PCKYBestCell.o `test -f 'PCKYBestCell.cpp' || echo '$(srcdir)/'`PCKYBestCell.cpp

simple_lorgparser-PCKYBestCell.obj: PCKYBestCell.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-PCKYBestCell.obj -MD -MP -MF $(DEPDIR)/simple_lorgparser-PCKYBestCell.Tpo -c -o simple_lorgparser-PCKYBestCell.obj `if test -f 'PCKYBestCell.cpp'; then $(CYGPATH_W) 'PCKYBestCell.cpp'; else $(CYGPATH_W) '$(srcdir)/PCKYBestCell.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-PCKYBestCell.Tpo $(DEPDIR)/simple_lorgparser-PCKYBestCell.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='PCKYBestCell.cpp' object='simple_lorgparser-PCKYBestCell.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-PCKYBestCell.obj `if test -f 'PCKYBestCell.cpp'; then $(CYGPATH_W) 'PCKYBestCell.cpp'; else $(CYGPATH_W) '$(srcdir)/PCKYBestCell.cpp'; fi`

simple_lorgparser-SimpleLorgParseApp.o: SimpleLorgParseApp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-SimpleLorgParseApp.o -MD -MP -MF $(DEPDIR)/simple_lorgparser-SimpleLorgParseApp.Tpo -c -o simple_lorgparser-SimpleLorgParseApp.o `test -f 'SimpleLorgParseApp.cpp' || echo '$(srcdir)/'`SimpleLorgParseApp.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-SimpleLorgParseApp.Tpo $(DEPDIR)/simple_lorgparser-SimpleLorgParseApp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SimpleLorgParseApp.cpp' object='simple_lorgparser-SimpleLorgParseApp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-SimpleLorgParseApp.o `test -f 'SimpleLorgParseApp.cpp' || echo '$(srcdir)/'`SimpleLorgParseApp.cpp

simple_lorgparser-SimpleLorgParseApp.obj: SimpleLorgParseApp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT simple_lorgparser-SimpleLorgParseApp.obj -MD -MP -MF $(DEPDIR)/simple_lorgparser-SimpleLorgParseApp.Tpo -c -o simple_lorgparser-SimpleLorgParseApp.obj `if test -f 'SimpleLorgParseApp.cpp'; then $(CYGPATH_W) 'SimpleLorgParseApp.cpp'; else $(CYGPATH_W) '$(srcdir)/SimpleLorgParseApp.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simple_lorgparser-SimpleLorgParseApp.Tpo $(DEPDIR)/simple_lorgparser-SimpleLorgParseApp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SimpleLorgParseApp.cpp' object='simple_lorgparser-SimpleLorgParseApp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simple_lorgparser_CPPFLAGS) $(CPPFLAGS) $(simple_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o simple_lorgparser-SimpleLorgParseApp.obj `if test -f 'SimpleLorgParseApp.cpp'; then $(CYGPATH_W) 'SimpleLorgParseApp.cpp'; else $(CYGPATH_W) '$(srcdir)/SimpleLorgParseApp.cpp'; fi`

twostage_lorgparser-Production.o: rules/Production.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-Production.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser-Production.Tpo -c -o twostage_lorgparser-Production.o `test -f 'rules/Production.cpp' || echo '$(srcdir)/'`rules/Production.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-Production.Tpo $(DEPDIR)/twostage_lorgparser-Production.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='rules/Production.cpp' object='twostage_lorgparser-Production.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-Production.o `test -f 'rules/Production.cpp' || echo '$(srcdir)/'`rules/Production.cpp

twostage_lorgparser-Production.obj: rules/Production.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-Production.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser-Production.Tpo -c -o twostage_lorgparser-Production.obj `if test -f 'rules/Production.cpp'; then $(CYGPATH_W) 'rules/Production.cpp'; else $(CYGPATH_W) '$(srcdir)/rules/Production.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-Production.Tpo $(DEPDIR)/twostage_lorgparser-Production.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='rules/Production.cpp' object='twostage_lorgparser-Production.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-Production.obj `if test -f 'rules/Production.cpp'; then $(CYGPATH_W) 'rules/Production.cpp'; else $(CYGPATH_W) '$(srcdir)/rules/Production.cpp'; fi`

twostage_lorgparser-Rule.o: rules/Rule.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-Rule.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser-Rule.Tpo -c -o twostage_lorgparser-Rule.o `test -f 'rules/Rule.cpp' || echo '$(srcdir)/'`rules/Rule.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-Rule.Tpo $(DEPDIR)/twostage_lorgparser-Rule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='rules/Rule.cpp' object='twostage_lorgparser-Rule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-Rule.o `test -f 'rules/Rule.cpp' || echo '$(srcdir)/'`rules/Rule.cpp

twostage_lorgparser-Rule.obj: rules/Rule.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-Rule.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser-Rule.Tpo -c -o twostage_lorgparser-Rule.obj `if test -f 'rules/Rule.cpp'; then $(CYGPATH_W) 'rules/Rule.cpp'; else $(CYGPATH_W) '$(srcdir)/rules/Rule.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-Rule.Tpo $(DEPDIR)/twostage_lorgparser-Rule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='rules/Rule.cpp' object='twostage_lorgparser-Rule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-Rule.obj `if test -f 'rules/Rule.cpp'; then $(CYGPATH_W) 'rules/Rule.cpp'; else $(CYGPATH_W) '$(srcdir)/rules/Rule.cpp'; fi`

twostage_lorgparser-compact_binary_rules.o: grammars/compact_binary_rules.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-compact_binary_rules.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser-compact_binary_rules.Tpo -c -o twostage_lorgparser-compact_binary_rules.o `test -f 'grammars/compact_binary_rules.cpp' || echo '$(srcdir)/'`grammars/compact_binary_rules.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-compact_binary_rules.Tpo $(DEPDIR)/twostage_lorgparser-compact_binary_rules.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='grammars/compact_binary_rules.cpp' object='twostage_lorgparser-compact_binary_rules.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-compact_binary_rules.o `test -f 'grammars/compact_binary_rules.cpp' || echo '$(srcdir)/'`grammars/compact_binary_rules.cpp

twostage_lorgparser-compact_binary_rules.obj: grammars/compact_binary_rules.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-compact_binary_rules.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser-compact_binary_rules.Tpo -c -o twostage_lorgparser-compact_binary_rules.obj `if test -f 'grammars/compact_binary_rules.cpp'; then $(CYGPATH_W) 'grammars/compact_binary_rules.cpp'; else $(CYGPATH_W) '$(srcdir)/grammars/compact_binary_rules.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-compact_binary_rules.Tpo $(DEPDIR)/twostage_lorgparser-compact_binary_rules.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='grammars/compact_binary_rules.cpp' object='twostage_lorgparser-compact_binary_rules.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-compact_binary_rules.obj `if test -f 'grammars/compact_binary_rules.cpp'; then $(CYGPATH_W) 'grammars/compact_binary_rules.cpp'; else $(CYGPATH_W) '$(srcdir)/grammars/compact_binary_rules.cpp'; fi`

twostage_lorgparser-Grammar.o: grammars/Grammar.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-Grammar.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser-Grammar.Tpo -c -o twostage_lorgparser-Grammar.o `test -f 'grammars/Grammar.cpp' || echo '$(srcdir)/'`grammars/Grammar.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-Grammar.Tpo $(DEPDIR)/twostage_lorgparser-Grammar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='grammars/Grammar.cpp' object='twostage_lorgparser-Grammar.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-Grammar.o `test -f 'grammars/Grammar.cpp' || echo '$(srcdir)/'`grammars/Grammar.cpp

twostage_lorgparser-Grammar.obj: grammars/Grammar.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-Grammar.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser-Grammar.Tpo -c -o twostage_lorgparser-Grammar.obj `if test -f 'grammars/Grammar.cpp'; then $(CYGPATH_W) 'grammars/Grammar.cpp'; else $(CYGPATH_W) '$(srcdir)/grammars/Grammar.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-Grammar.Tpo $(DEPDIR)/twostage_lorgparser-Grammar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='grammars/Grammar.cpp' object='twostage_lorgparser-Grammar.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-Grammar.obj `if test -f 'grammars/Grammar.cpp'; then $(CYGPATH_W) 'grammars/Grammar.cpp'; else $(CYGPATH_W) '$(srcdir)/grammars/Grammar.cpp'; fi`

twostage_lorgparser-SymbolTable.o: utils/SymbolTable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-SymbolTable.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser-SymbolTable.Tpo -c -o twostage_lorgparser-SymbolTable.o `test -f 'utils/SymbolTable.cpp' || echo '$(srcdir)/'`utils/SymbolTable.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-SymbolTable.Tpo $(DEPDIR)/twostage_lorgparser-SymbolTable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/SymbolTable.cpp' object='twostage_lorgparser-SymbolTable.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-SymbolTable.o `test -f 'utils/SymbolTable.cpp' || echo '$(srcdir)/'`utils/SymbolTable.cpp

twostage_lorgparser-SymbolTable.obj: utils/SymbolTable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-SymbolTable.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser-SymbolTable.Tpo -c -o twostage_lorgparser-SymbolTable.obj `if test -f 'utils/SymbolTable.cpp'; then $(CYGPATH_W) 'utils/SymbolTable.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/SymbolTable.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-SymbolTable.Tpo $(DEPDIR)/twostage_lorgparser-SymbolTable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/SymbolTable.cpp' object='twostage_lorgparser-SymbolTable.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-SymbolTable.obj `if test -f 'utils/SymbolTable.cpp'; then $(CYGPATH_W) 'utils/SymbolTable.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/SymbolTable.cpp'; fi`

twostage_lorgparser-Tagger.o: utils/Tagger.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-Tagger.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser-Tagger.Tpo -c -o twostage_lorgparser-Tagger.o `test -f 'utils/Tagger.cpp' || echo '$(srcdir)/'`utils/Tagger.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-Tagger.Tpo $(DEPDIR)/twostage_lorgparser-Tagger.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/Tagger.cpp' object='twostage_lorgparser-Tagger.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-Tagger.o `test -f 'utils/Tagger.cpp' || echo '$(srcdir)/'`utils/Tagger.cpp

twostage_lorgparser-Tagger.obj: utils/Tagger.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-Tagger.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser-Tagger.Tpo -c -o twostage_lorgparser-Tagger.obj `if test -f 'utils/Tagger.cpp'; then $(CYGPATH_W) 'utils/Tagger.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/Tagger.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-Tagger.Tpo $(DEPDIR)/twostage_lorgparser-Tagger.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/Tagger.cpp' object='twostage_lorgparser-Tagger.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-Tagger.obj `if test -f 'utils/Tagger.cpp'; then $(CYGPATH_W) 'utils/Tagger.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/Tagger.cpp'; fi`

twostage_lorgparser-TokeniserFactory.o: utils/TokeniserFactory.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-TokeniserFactory.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser-TokeniserFactory.Tpo -c -o twostage_lorgparser-TokeniserFactory.o `test -f 'utils/TokeniserFactory.cpp' || echo '$(srcdir)/'`utils/TokeniserFactory.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-TokeniserFactory.Tpo $(DEPDIR)/twostage_lorgparser-TokeniserFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/TokeniserFactory.cpp' object='twostage_lorgparser-TokeniserFactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-TokeniserFactory.o `test -f 'utils/TokeniserFactory.cpp' || echo '$(srcdir)/'`utils/TokeniserFactory.cpp

twostage_lorgparser-TokeniserFactory.obj: utils/TokeniserFactory.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-TokeniserFactory.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser-TokeniserFactory.Tpo -c -o twostage_lorgparser-TokeniserFactory.obj `if test -f 'utils/TokeniserFactory.cpp'; then $(CYGPATH_W) 'utils/TokeniserFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/TokeniserFactory.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-TokeniserFactory.Tpo $(DEPDIR)/twostage_lorgparser-TokeniserFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/TokeniserFactory.cpp' object='twostage_lorgparser-TokeniserFactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-TokeniserFactory.obj `if test -f 'utils/TokeniserFactory.cpp'; then $(CYGPATH_W) 'utils/TokeniserFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/TokeniserFactory.cpp'; fi`

twostage_lorgparser-Tokeniser.o: utils/Tokeniser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-Tokeniser.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser-Tokeniser.Tpo -c -o twostage_lorgparser-Tokeniser.o `test -f 'utils/Tokeniser.cpp' || echo '$(srcdir)/'`utils/Tokeniser.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-Tokeniser.Tpo $(DEPDIR)/twostage_lorgparser-Tokeniser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/Tokeniser.cpp' object='twostage_lorgparser-Tokeniser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-Tokeniser.o `test -f 'utils/Tokeniser.cpp' || echo '$(srcdir)/'`utils/Tokeniser.cpp

twostage_lorgparser-Tokeniser.obj: utils/Tokeniser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-Tokeniser.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser-Tokeniser.Tpo -c -o twostage_lorgparser-Tokeniser.obj `if test -f 'utils/Tokeniser.cpp'; then $(CYGPATH_W) 'utils/Tokeniser.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/Tokeniser.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-Tokeniser.Tpo $(DEPDIR)/twostage_lorgparser-Tokeniser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/Tokeniser.cpp' object='twostage_lorgparser-Tokeniser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-Tokeniser.obj `if test -f 'utils/Tokeniser.cpp'; then $(CYGPATH_W) 'utils/Tokeniser.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/Tokeniser.cpp'; fi`

twostage_lorgparser-PtbPsTree.o: utils/PtbPsTree.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-PtbPsTree.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser-PtbPsTree.Tpo -c -o twostage_lorgparser-PtbPsTree.o `test -f 'utils/PtbPsTree.cpp' || echo '$(srcdir)/'`utils/PtbPsTree.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-PtbPsTree.Tpo $(DEPDIR)/twostage_lorgparser-PtbPsTree.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/PtbPsTree.cpp' object='twostage_lorgparser-PtbPsTree.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-PtbPsTree.o `test -f 'utils/PtbPsTree.cpp' || echo '$(srcdir)/'`utils/PtbPsTree.cpp

twostage_lorgparser-PtbPsTree.obj: utils/PtbPsTree.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-PtbPsTree.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser-PtbPsTree.Tpo -c -o twostage_lorgparser-PtbPsTree.obj `if test -f 'utils/PtbPsTree.cpp'; then $(CYGPATH_W) 'utils/PtbPsTree.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/PtbPsTree.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-PtbPsTree.Tpo $(DEPDIR)/twostage_lorgparser-PtbPsTree.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/PtbPsTree.cpp' object='twostage_lorgparser-PtbPsTree.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-PtbPsTree.obj `if test -f 'utils/PtbPsTree.cpp'; then $(CYGPATH_W) 'utils/PtbPsTree.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/PtbPsTree.cpp'; fi`

twostage_lorgparser-ConfigTable.o: utils/ConfigTable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-ConfigTable.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser-ConfigTable.Tpo -c -o twostage_lorgparser-ConfigTable.o `test -f 'utils/ConfigTable.cpp' || echo '$(srcdir)/'`utils/ConfigTable.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-ConfigTable.Tpo $(DEPDIR)/twostage_lorgparser-ConfigTable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/ConfigTable.cpp' object='twostage_lorgparser-ConfigTable.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-ConfigTable.o `test -f 'utils/ConfigTable.cpp' || echo '$(srcdir)/'`utils/ConfigTable.cpp

twostage_lorgparser-ConfigTable.obj: utils/ConfigTable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-ConfigTable.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser-ConfigTable.Tpo -c -o twostage_lorgparser-ConfigTable.obj `if test -f 'utils/ConfigTable.cpp'; then $(CYGPATH_W) 'utils/ConfigTable.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/ConfigTable.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-ConfigTable.Tpo $(DEPDIR)/twostage_lorgparser-ConfigTable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/ConfigTable.cpp' object='twostage_lorgparser-ConfigTable.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-ConfigTable.obj `if test -f 'utils/ConfigTable.cpp'; then $(CYGPATH_W) 'utils/ConfigTable.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/ConfigTable.cpp'; fi`

twostage_lorgparser-RandomGenerator.o: utils/RandomGenerator.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-RandomGenerator.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser-RandomGenerator.Tpo -c -o twostage_lorgparser-RandomGenerator.o `test -f 'utils/RandomGenerator.cpp' || echo '$(srcdir)/'`utils/RandomGenerator.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-RandomGenerator.Tpo $(DEPDIR)/twostage_lorgparser-RandomGenerator.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/RandomGenerator.cpp' object='twostage_lorgparser-RandomGenerator.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-RandomGenerator.o `test -f 'utils/RandomGenerator.cpp' || echo '$(srcdir)/'`utils/RandomGenerator.cpp

twostage_lorgparser-RandomGenerator.obj: utils/RandomGenerator.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-RandomGenerator.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser-RandomGenerator.Tpo -c -o twostage_lorgparser-RandomGenerator.obj `if test -f 'utils/RandomGenerator.cpp'; then $(CYGPATH_W) 'utils/RandomGenerator.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/RandomGenerator.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-RandomGenerator.Tpo $(DEPDIR)/twostage_lorgparser-RandomGenerator.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/RandomGenerator.cpp' object='twostage_lorgparser-RandomGenerator.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-RandomGenerator.obj `if test -f 'utils/RandomGenerator.cpp'; then $(CYGPATH_W) 'utils/RandomGenerator.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/RandomGenerator.cpp'; fi`

twostage_lorgparser-WordSignatureFactory.o: lexicon/WordSignatureFactory.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-WordSignatureFactory.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser-WordSignatureFactory.Tpo -c -o twostage_lorgparser-WordSignatureFactory.o `test -f 'lexicon/WordSignatureFactory.cpp' || echo '$(srcdir)/'`lexicon/WordSignatureFactory.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-WordSignatureFactory.Tpo $(DEPDIR)/twostage_lorgparser-WordSignatureFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lexicon/WordSignatureFactory.cpp' object='twostage_lorgparser-WordSignatureFactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-WordSignatureFactory.o `test -f 'lexicon/WordSignatureFactory.cpp' || echo '$(srcdir)/'`lexicon/WordSignatureFactory.cpp

twostage_lorgparser-WordSignatureFactory.obj: lexicon/WordSignatureFactory.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-WordSignatureFactory.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser-WordSignatureFactory.Tpo -c -o twostage_lorgparser-WordSignatureFactory.obj `if test -f 'lexicon/WordSignatureFactory.cpp'; then $(CYGPATH_W) 'lexicon/WordSignatureFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/lexicon/WordSignatureFactory.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-WordSignatureFactory.Tpo $(DEPDIR)/twostage_lorgparser-WordSignatureFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lexicon/WordSignatureFactory.cpp' object='twostage_lorgparser-WordSignatureFactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-WordSignatureFactory.obj `if test -f 'lexicon/WordSignatureFactory.cpp'; then $(CYGPATH_W) 'lexicon/WordSignatureFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/lexicon/WordSignatureFactory.cpp'; fi`

twostage_lorgparser-BerkeleyEnglishUMapping.o: lexicon/BerkeleyEnglishUMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-BerkeleyEnglishUMapping.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser-BerkeleyEnglishUMapping.Tpo -c -o twostage_lorgparser-BerkeleyEnglishUMapping.o `test -f 'lexicon/BerkeleyEnglishUMapping.cpp' || echo '$(srcdir)/'`lexicon/BerkeleyEnglishUMapping.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-BerkeleyEnglishUMapping.Tpo $(DEPDIR)/twostage_lorgparser-BerkeleyEnglishUMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lexicon/BerkeleyEnglishUMapping.cpp' object='twostage_lorgparser-BerkeleyEnglishUMapping.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-BerkeleyEnglishUMapping.o `test -f 'lexicon/BerkeleyEnglishUMapping.cpp' || echo '$(srcdir)/'`lexicon/BerkeleyEnglishUMapping.cpp

twostage_lorgparser-BerkeleyEnglishUMapping.obj: lexicon/BerkeleyEnglishUMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-BerkeleyEnglishUMapping.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser-BerkeleyEnglishUMapping.Tpo -c -o twostage_lorgparser-BerkeleyEnglishUMapping.obj `if test -f 'lexicon/BerkeleyEnglishUMapping.cpp'; then $(CYGPATH_W) 'lexicon/BerkeleyEnglishUMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/lexicon/BerkeleyEnglishUMapping.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-BerkeleyEnglishUMapping.Tpo $(DEPDIR)/twostage_lorgparser-BerkeleyEnglishUMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lexicon/BerkeleyEnglishUMapping.cpp' object='twostage_lorgparser-BerkeleyEnglishUMapping.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-BerkeleyEnglishUMapping.obj `if test -f 'lexicon/BerkeleyEnglishUMapping.cpp'; then $(CYGPATH_W) 'lexicon/BerkeleyEnglishUMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/lexicon/BerkeleyEnglishUMapping.cpp'; fi`

twostage_lorgparser-BaselineFrenchUMapping.o: lexicon/BaselineFrenchUMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-BaselineFrenchUMapping.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser-BaselineFrenchUMapping.Tpo -c -o twostage_lorgparser-BaselineFrenchUMapping.o `test -f 'lexicon/BaselineFrenchUMapping.cpp' || echo '$(srcdir)/'`lexicon/BaselineFrenchUMapping.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-BaselineFrenchUMapping.Tpo $(DEPDIR)/twostage_lorgparser-BaselineFrenchUMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lexicon/BaselineFrenchUMapping.cpp' object='twostage_lorgparser-BaselineFrenchUMapping.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-BaselineFrenchUMapping.o `test -f 'lexicon/BaselineFrenchUMapping.cpp' || echo '$(srcdir)/'`lexicon/BaselineFrenchUMapping.cpp

twostage_lorgparser-BaselineFrenchUMapping.obj: lexicon/BaselineFrenchUMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-BaselineFrenchUMapping.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser-BaselineFrenchUMapping.Tpo -c -o twostage_lorgparser-BaselineFrenchUMapping.obj `if test -f 'lexicon/BaselineFrenchUMapping.cpp'; then $(CYGPATH_W) 'lexicon/BaselineFrenchUMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/lexicon/BaselineFrenchUMapping.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-BaselineFrenchUMapping.Tpo $(DEPDIR)/twostage_lorgparser-BaselineFrenchUMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lexicon/BaselineFrenchUMapping.cpp' object='twostage_lorgparser-BaselineFrenchUMapping.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-BaselineFrenchUMapping.obj `if test -f 'lexicon/BaselineFrenchUMapping.cpp'; then $(CYGPATH_W) 'lexicon/BaselineFrenchUMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/lexicon/BaselineFrenchUMapping.cpp'; fi`

twostage_lorgparser-EnglishIGMapping.o: lexicon/EnglishIGMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-EnglishIGMapping.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser-EnglishIGMapping.Tpo -c -o twostage_lorgparser-EnglishIGMapping.o `test -f 'lexicon/EnglishIGMapping.cpp' || echo '$(srcdir)/'`lexicon/EnglishIGMapping.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-EnglishIGMapping.Tpo $(DEPDIR)/twostage_lorgparser-EnglishIGMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lexicon/EnglishIGMapping.cpp' object='twostage_lorgparser-EnglishIGMapping.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-EnglishIGMapping.o `test -f 'lexicon/EnglishIGMapping.cpp' || echo '$(srcdir)/'`lexicon/EnglishIGMapping.cpp

twostage_lorgparser-EnglishIGMapping.obj: lexicon/EnglishIGMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-EnglishIGMapping.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser-EnglishIGMapping.Tpo -c -o twostage_lorgparser-EnglishIGMapping.obj `if test -f 'lexicon/EnglishIGMapping.cpp'; then $(CYGPATH_W) 'lexicon/EnglishIGMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/lexicon/EnglishIGMapping.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-EnglishIGMapping.Tpo $(DEPDIR)/twostage_lorgparser-EnglishIGMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lexicon/EnglishIGMapping.cpp' object='twostage_lorgparser-EnglishIGMapping.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-EnglishIGMapping.obj `if test -f 'lexicon/EnglishIGMapping.cpp'; then $(CYGPATH_W) 'lexicon/EnglishIGMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/lexicon/EnglishIGMapping.cpp'; fi`

twostage_lorgparser-FrenchIGMapping.o: lexicon/FrenchIGMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-FrenchIGMapping.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser-FrenchIGMapping.Tpo -c -o twostage_lorgparser-FrenchIGMapping.o `test -f 'lexicon/FrenchIGMapping.cpp' || echo '$(srcdir)/'`lexicon/FrenchIGMapping.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-FrenchIGMapping.Tpo $(DEPDIR)/twostage_lorgparser-FrenchIGMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lexicon/FrenchIGMapping.cpp' object='twostage_lorgparser-FrenchIGMapping.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-FrenchIGMapping.o `test -f 'lexicon/FrenchIGMapping.cpp' || echo '$(srcdir)/'`lexicon/FrenchIGMapping.cpp

twostage_lorgparser-FrenchIGMapping.obj: lexicon/FrenchIGMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-FrenchIGMapping.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser-FrenchIGMapping.Tpo -c -o twostage_lorgparser-FrenchIGMapping.obj `if test -f 'lexicon/FrenchIGMapping.cpp'; then $(CYGPATH_W) 'lexicon/FrenchIGMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/lexicon/FrenchIGMapping.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-FrenchIGMapping.Tpo $(DEPDIR)/twostage_lorgparser-FrenchIGMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lexicon/FrenchIGMapping.cpp' object='twostage_lorgparser-FrenchIGMapping.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-FrenchIGMapping.obj `if test -f 'lexicon/FrenchIGMapping.cpp'; then $(CYGPATH_W) 'lexicon/FrenchIGMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/lexicon/FrenchIGMapping.cpp'; fi`

twostage_lorgparser-ItalianIGMapping.o: lexicon/ItalianIGMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-ItalianIGMapping.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser-ItalianIGMapping.Tpo -c -o twostage_lorgparser-ItalianIGMapping.o `test -f 'lexicon/ItalianIGMapping.cpp' || echo '$(srcdir)/'`lexicon/ItalianIGMapping.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-ItalianIGMapping.Tpo $(DEPDIR)/twostage_lorgparser-ItalianIGMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lexicon/ItalianIGMapping.cpp' object='twostage_lorgparser-ItalianIGMapping.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-ItalianIGMapping.o `test -f 'lexicon/ItalianIGMapping.cpp' || echo '$(srcdir)/'`lexicon/ItalianIGMapping.cpp

twostage_lorgparser-ItalianIGMapping.obj: lexicon/ItalianIGMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-ItalianIGMapping.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser-ItalianIGMapping.Tpo -c -o twostage_lorgparser-ItalianIGMapping.obj `if test -f 'lexicon/ItalianIGMapping.cpp'; then $(CYGPATH_W) 'lexicon/ItalianIGMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/lexicon/ItalianIGMapping.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-ItalianIGMapping.Tpo $(DEPDIR)/twostage_lorgparser-ItalianIGMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lexicon/ItalianIGMapping.cpp' object='twostage_lorgparser-ItalianIGMapping.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-ItalianIGMapping.obj `if test -f 'lexicon/ItalianIGMapping.cpp'; then $(CYGPATH_W) 'lexicon/ItalianIGMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/lexicon/ItalianIGMapping.cpp'; fi`

twostage_lorgparser-ArabicUMapping.o: lexicon/ArabicUMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-ArabicUMapping.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser-ArabicUMapping.Tpo -c -o twostage_lorgparser-ArabicUMapping.o `test -f 'lexicon/ArabicUMapping.cpp' || echo '$(srcdir)/'`lexicon/ArabicUMapping.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-ArabicUMapping.Tpo $(DEPDIR)/twostage_lorgparser-ArabicUMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lexicon/ArabicUMapping.cpp' object='twostage_lorgparser-ArabicUMapping.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-ArabicUMapping.o `test -f 'lexicon/ArabicUMapping.cpp' || echo '$(srcdir)/'`lexicon/ArabicUMapping.cpp

twostage_lorgparser-ArabicUMapping.obj: lexicon/ArabicUMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-ArabicUMapping.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser-ArabicUMapping.Tpo -c -o twostage_lorgparser-ArabicUMapping.obj `if test -f 'lexicon/ArabicUMapping.cpp'; then $(CYGPATH_W) 'lexicon/ArabicUMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/lexicon/ArabicUMapping.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-ArabicUMapping.Tpo $(DEPDIR)/twostage_lorgparser-ArabicUMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lexicon/ArabicUMapping.cpp' object='twostage_lorgparser-ArabicUMapping.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-ArabicUMapping.obj `if test -f 'lexicon/ArabicUMapping.cpp'; then $(CYGPATH_W) 'lexicon/ArabicUMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/lexicon/ArabicUMapping.cpp'; fi`

twostage_lorgparser-ArabicIGMapping.o: lexicon/ArabicIGMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-ArabicIGMapping.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser-ArabicIGMapping.Tpo -c -o twostage_lorgparser-ArabicIGMapping.o `test -f 'lexicon/ArabicIGMapping.cpp' || echo '$(srcdir)/'`lexicon/ArabicIGMapping.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-ArabicIGMapping.Tpo $(DEPDIR)/twostage_lorgparser-ArabicIGMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lexicon/ArabicIGMapping.cpp' object='twostage_lorgparser-ArabicIGMapping.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-ArabicIGMapping.o `test -f 'lexicon/ArabicIGMapping.cpp' || echo '$(srcdir)/'`lexicon/ArabicIGMapping.cpp

twostage_lorgparser-ArabicIGMapping.obj: lexicon/ArabicIGMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-ArabicIGMapping.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser-ArabicIGMapping.Tpo -c -o twostage_lorgparser-ArabicIGMapping.obj `if test -f 'lexicon/ArabicIGMapping.cpp'; then $(CYGPATH_W) 'lexicon/ArabicIGMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/lexicon/ArabicIGMapping.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-ArabicIGMapping.Tpo $(DEPDIR)/twostage_lorgparser-ArabicIGMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lexicon/ArabicIGMapping.cpp' object='twostage_lorgparser-ArabicIGMapping.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-ArabicIGMapping.obj `if test -f 'lexicon/ArabicIGMapping.cpp'; then $(CYGPATH_W) 'lexicon/ArabicIGMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/lexicon/ArabicIGMapping.cpp'; fi`

twostage_lorgparser-Word.o: Word.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-Word.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser-Word.Tpo -c -o twostage_lorgparser-Word.o `test -f 'Word.cpp' || echo '$(srcdir)/'`Word.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-Word.Tpo $(DEPDIR)/twostage_lorgparser-Word.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Word.cpp' object='twostage_lorgparser-Word.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-Word.o `test -f 'Word.cpp' || echo '$(srcdir)/'`Word.cpp

twostage_lorgparser-Word.obj: Word.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-Word.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser-Word.Tpo -c -o twostage_lorgparser-Word.obj `if test -f 'Word.cpp'; then $(CYGPATH_W) 'Word.cpp'; else $(CYGPATH_W) '$(srcdir)/Word.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-Word.Tpo $(DEPDIR)/twostage_lorgparser-Word.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Word.cpp' object='twostage_lorgparser-Word.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-Word.obj `if test -f 'Word.cpp'; then $(CYGPATH_W) 'Word.cpp'; else $(CYGPATH_W) '$(srcdir)/Word.cpp'; fi`

twostage_lorgparser-LorgApp.o: LorgApp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-LorgApp.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser-LorgApp.Tpo -c -o twostage_lorgparser-LorgApp.o `test -f 'LorgApp.cpp' || echo '$(srcdir)/'`LorgApp.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-LorgApp.Tpo $(DEPDIR)/twostage_lorgparser-LorgApp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LorgApp.cpp' object='twostage_lorgparser-LorgApp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-LorgApp.o `test -f 'LorgApp.cpp' || echo '$(srcdir)/'`LorgApp.cpp

twostage_lorgparser-LorgApp.obj: LorgApp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-LorgApp.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser-LorgApp.Tpo -c -o twostage_lorgparser-LorgApp.obj `if test -f 'LorgApp.cpp'; then $(CYGPATH_W) 'LorgApp.cpp'; else $(CYGPATH_W) '$(srcdir)/LorgApp.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-LorgApp.Tpo $(DEPDIR)/twostage_lorgparser-LorgApp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LorgApp.cpp' object='twostage_lorgparser-LorgApp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-LorgApp.obj `if test -f 'LorgApp.cpp'; then $(CYGPATH_W) 'LorgApp.cpp'; else $(CYGPATH_W) '$(srcdir)/LorgApp.cpp'; fi`

twostage_lorgparser-LorgParseApp.o: LorgParseApp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-LorgParseApp.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser-LorgParseApp.Tpo -c -o twostage_lorgparser-LorgParseApp.o `test -f 'LorgParseApp.cpp' || echo '$(srcdir)/'`LorgParseApp.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-LorgParseApp.Tpo $(DEPDIR)/twostage_lorgparser-LorgParseApp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LorgParseApp.cpp' object='twostage_lorgparser-LorgParseApp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-LorgParseApp.o `test -f 'LorgParseApp.cpp' || echo '$(srcdir)/'`LorgParseApp.cpp

twostage_lorgparser-LorgParseApp.obj: LorgParseApp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-LorgParseApp.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser-LorgParseApp.Tpo -c -o twostage_lorgparser-LorgParseApp.obj `if test -f 'LorgParseApp.cpp'; then $(CYGPATH_W) 'LorgParseApp.cpp'; else $(CYGPATH_W) '$(srcdir)/LorgParseApp.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-LorgParseApp.Tpo $(DEPDIR)/twostage_lorgparser-LorgParseApp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LorgParseApp.cpp' object='twostage_lorgparser-LorgParseApp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-LorgParseApp.obj `if test -f 'LorgParseApp.cpp'; then $(CYGPATH_W) 'LorgParseApp.cpp'; else $(CYGPATH_W) '$(srcdir)/LorgParseApp.cpp'; fi`

twostage_lorgparser-Extract.o: feature_extract/Extract.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-Extract.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser-Extract.Tpo -c -o twostage_lorgparser-Extract.o `test -f 'feature_extract/Extract.cpp' || echo '$(srcdir)/'`feature_extract/Extract.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-Extract.Tpo $(DEPDIR)/twostage_lorgparser-Extract.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='feature_extract/Extract.cpp' object='twostage_lorgparser-Extract.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-Extract.o `test -f 'feature_extract/Extract.cpp' || echo '$(srcdir)/'`feature_extract/Extract.cpp

twostage_lorgparser-Extract.obj: feature_extract/Extract.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-Extract.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser-Extract.Tpo -c -o twostage_lorgparser-Extract.obj `if test -f 'feature_extract/Extract.cpp'; then $(CYGPATH_W) 'feature_extract/Extract.cpp'; else $(CYGPATH_W) '$(srcdir)/feature_extract/Extract.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-Extract.Tpo $(DEPDIR)/twostage_lorgparser-Extract.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='feature_extract/Extract.cpp' object='twostage_lorgparser-Extract.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-Extract.obj `if test -f 'feature_extract/Extract.cpp'; then $(CYGPATH_W) 'feature_extract/Extract.cpp'; else $(CYGPATH_W) '$(srcdir)/feature_extract/Extract.cpp'; fi`

twostage_lorgparser-Feature.o: feature_extract/Feature.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-Feature.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser-Feature.Tpo -c -o twostage_lorgparser-Feature.o `test -f 'feature_extract/Feature.cpp' || echo '$(srcdir)/'`feature_extract/Feature.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-Feature.Tpo $(DEPDIR)/twostage_lorgparser-Feature.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='feature_extract/Feature.cpp' object='twostage_lorgparser-Feature.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-Feature.o `test -f 'feature_extract/Feature.cpp' || echo '$(srcdir)/'`feature_extract/Feature.cpp

twostage_lorgparser-Feature.obj: feature_extract/Feature.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-Feature.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser-Feature.Tpo -c -o twostage_lorgparser-Feature.obj `if test -f 'feature_extract/Feature.cpp'; then $(CYGPATH_W) 'feature_extract/Feature.cpp'; else $(CYGPATH_W) '$(srcdir)/feature_extract/Feature.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-Feature.Tpo $(DEPDIR)/twostage_lorgparser-Feature.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='feature_extract/Feature.cpp' object='twostage_lorgparser-Feature.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-Feature.obj `if test -f 'feature_extract/Feature.cpp'; then $(CYGPATH_W) 'feature_extract/Feature.cpp'; else $(CYGPATH_W) '$(srcdir)/feature_extract/Feature.cpp'; fi`

twostage_lorgparser-twostage_lorgparser.o: twostage_lorgparser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-twostage_lorgparser.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser-twostage_lorgparser.Tpo -c -o twostage_lorgparser-twostage_lorgparser.o `test -f 'twostage_lorgparser.cpp' || echo '$(srcdir)/'`twostage_lorgparser.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-twostage_lorgparser.Tpo $(DEPDIR)/twostage_lorgparser-twostage_lorgparser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='twostage_lorgparser.cpp' object='twostage_lorgparser-twostage_lorgparser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-twostage_lorgparser.o `test -f 'twostage_lorgparser.cpp' || echo '$(srcdir)/'`twostage_lorgparser.cpp

twostage_lorgparser-twostage_lorgparser.obj: twostage_lorgparser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-twostage_lorgparser.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser-twostage_lorgparser.Tpo -c -o twostage_lorgparser-twostage_lorgparser.obj `if test -f 'twostage_lorgparser.cpp'; then $(CYGPATH_W) 'twostage_lorgparser.cpp'; else $(CYGPATH_W) '$(srcdir)/twostage_lorgparser.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-twostage_lorgparser.Tpo $(DEPDIR)/twostage_lorgparser-twostage_lorgparser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='twostage_lorgparser.cpp' object='twostage_lorgparser-twostage_lorgparser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-twostage_lorgparser.obj `if test -f 'twostage_lorgparser.cpp'; then $(CYGPATH_W) 'twostage_lorgparser.cpp'; else $(CYGPATH_W) '$(srcdir)/twostage_lorgparser.cpp'; fi`

twostage_lorgparser-compact_binary_rules_annotated.o: grammars/compact_binary_rules_annotated.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-compact_binary_rules_annotated.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser-compact_binary_rules_annotated.Tpo -c -o twostage_lorgparser-compact_binary_rules_annotated.o `test -f 'grammars/compact_binary_rules_annotated.cpp' || echo '$(srcdir)/'`grammars/compact_binary_rules_annotated.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-compact_binary_rules_annotated.Tpo $(DEPDIR)/twostage_lorgparser-compact_binary_rules_annotated.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='grammars/compact_binary_rules_annotated.cpp' object='twostage_lorgparser-compact_binary_rules_annotated.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-compact_binary_rules_annotated.o `test -f 'grammars/compact_binary_rules_annotated.cpp' || echo '$(srcdir)/'`grammars/compact_binary_rules_annotated.cpp

twostage_lorgparser-compact_binary_rules_annotated.obj: grammars/compact_binary_rules_annotated.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-compact_binary_rules_annotated.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser-compact_binary_rules_annotated.Tpo -c -o twostage_lorgparser-compact_binary_rules_annotated.obj `if test -f 'grammars/compact_binary_rules_annotated.cpp'; then $(CYGPATH_W) 'grammars/compact_binary_rules_annotated.cpp'; else $(CYGPATH_W) '$(srcdir)/grammars/compact_binary_rules_annotated.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-compact_binary_rules_annotated.Tpo $(DEPDIR)/twostage_lorgparser-compact_binary_rules_annotated.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='grammars/compact_binary_rules_annotated.cpp' object='twostage_lorgparser-compact_binary_rules_annotated.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-compact_binary_rules_annotated.obj `if test -f 'grammars/compact_binary_rules_annotated.cpp'; then $(CYGPATH_W) 'grammars/compact_binary_rules_annotated.cpp'; else $(CYGPATH_W) '$(srcdir)/grammars/compact_binary_rules_annotated.cpp'; fi`

twostage_lorgparser-AnnotatedLabelsInfo.o: grammars/AnnotatedLabelsInfo.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-AnnotatedLabelsInfo.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser-AnnotatedLabelsInfo.Tpo -c -o twostage_lorgparser-AnnotatedLabelsInfo.o `test -f 'grammars/AnnotatedLabelsInfo.cpp' || echo '$(srcdir)/'`grammars/AnnotatedLabelsInfo.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-AnnotatedLabelsInfo.Tpo $(DEPDIR)/twostage_lorgparser-AnnotatedLabelsInfo.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='grammars/AnnotatedLabelsInfo.cpp' object='twostage_lorgparser-AnnotatedLabelsInfo.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-AnnotatedLabelsInfo.o `test -f 'grammars/AnnotatedLabelsInfo.cpp' || echo '$(srcdir)/'`grammars/AnnotatedLabelsInfo.cpp

twostage_lorgparser-AnnotatedLabelsInfo.obj: grammars/AnnotatedLabelsInfo.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-AnnotatedLabelsInfo.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser-AnnotatedLabelsInfo.Tpo -c -o twostage_lorgparser-AnnotatedLabelsInfo.obj `if test -f 'grammars/AnnotatedLabelsInfo.cpp'; then $(CYGPATH_W) 'grammars/AnnotatedLabelsInfo.cpp'; else $(CYGPATH_W) '$(srcdir)/grammars/AnnotatedLabelsInfo.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-AnnotatedLabelsInfo.Tpo $(DEPDIR)/twostage_lorgparser-AnnotatedLabelsInfo.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='grammars/AnnotatedLabelsInfo.cpp' object='twostage_lorgparser-AnnotatedLabelsInfo.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-AnnotatedLabelsInfo.obj `if test -f 'grammars/AnnotatedLabelsInfo.cpp'; then $(CYGPATH_W) 'grammars/AnnotatedLabelsInfo.cpp'; else $(CYGPATH_W) '$(srcdir)/grammars/AnnotatedLabelsInfo.cpp'; fi`

twostage_lorgparser-BURuleInputParser.o: utils/data_parsers/BURuleInputParser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-BURuleInputParser.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser-BURuleInputParser.Tpo -c -o twostage_lorgparser-BURuleInputParser.o `test -f 'utils/data_parsers/BURuleInputParser.cpp' || echo '$(srcdir)/'`utils/data_parsers/BURuleInputParser.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-BURuleInputParser.Tpo $(DEPDIR)/twostage_lorgparser-BURuleInputParser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/data_parsers/BURuleInputParser.cpp' object='twostage_lorgparser-BURuleInputParser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-BURuleInputParser.o `test -f 'utils/data_parsers/BURuleInputParser.cpp' || echo '$(srcdir)/'`utils/data_parsers/BURuleInputParser.cpp

twostage_lorgparser-BURuleInputParser.obj: utils/data_parsers/BURuleInputParser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-BURuleInputParser.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser-BURuleInputParser.Tpo -c -o twostage_lorgparser-BURuleInputParser.obj `if test -f 'utils/data_parsers/BURuleInputParser.cpp'; then $(CYGPATH_W) 'utils/data_parsers/BURuleInputParser.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/data_parsers/BURuleInputParser.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-BURuleInputParser.Tpo $(DEPDIR)/twostage_lorgparser-BURuleInputParser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/data_parsers/BURuleInputParser.cpp' object='twostage_lorgparser-BURuleInputParser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-BURuleInputParser.obj `if test -f 'utils/data_parsers/BURuleInputParser.cpp'; then $(CYGPATH_W) 'utils/data_parsers/BURuleInputParser.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/data_parsers/BURuleInputParser.cpp'; fi`

twostage_lorgparser-AnnotHistoriesParser.o: utils/data_parsers/AnnotHistoriesParser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-AnnotHistoriesParser.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser-AnnotHistoriesParser.Tpo -c -o twostage_lorgparser-AnnotHistoriesParser.o `test -f 'utils/data_parsers/AnnotHistoriesParser.cpp' || echo '$(srcdir)/'`utils/data_parsers/AnnotHistoriesParser.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-AnnotHistoriesParser.Tpo $(DEPDIR)/twostage_lorgparser-AnnotHistoriesParser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/data_parsers/AnnotHistoriesParser.cpp' object='twostage_lorgparser-AnnotHistoriesParser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-AnnotHistoriesParser.o `test -f 'utils/data_parsers/AnnotHistoriesParser.cpp' || echo '$(srcdir)/'`utils/data_parsers/AnnotHistoriesParser.cpp

twostage_lorgparser-AnnotHistoriesParser.obj: utils/data_parsers/AnnotHistoriesParser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-AnnotHistoriesParser.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser-AnnotHistoriesParser.Tpo -c -o twostage_lorgparser-AnnotHistoriesParser.obj `if test -f 'utils/data_parsers/AnnotHistoriesParser.cpp'; then $(CYGPATH_W) 'utils/data_parsers/AnnotHistoriesParser.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/data_parsers/AnnotHistoriesParser.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-AnnotHistoriesParser.Tpo $(DEPDIR)/twostage_lorgparser-AnnotHistoriesParser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/data_parsers/AnnotHistoriesParser.cpp' object='twostage_lorgparser-AnnotHistoriesParser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-AnnotHistoriesParser.obj `if test -f 'utils/data_parsers/AnnotHistoriesParser.cpp'; then $(CYGPATH_W) 'utils/data_parsers/AnnotHistoriesParser.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/data_parsers/AnnotHistoriesParser.cpp'; fi`

twostage_lorgparser-AnnotationInfo.o: edges/AnnotationInfo.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-AnnotationInfo.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser-AnnotationInfo.Tpo -c -o twostage_lorgparser-AnnotationInfo.o `test -f 'edges/AnnotationInfo.cpp' || echo '$(srcdir)/'`edges/AnnotationInfo.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-AnnotationInfo.Tpo $(DEPDIR)/twostage_lorgparser-AnnotationInfo.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='edges/AnnotationInfo.cpp' object='twostage_lorgparser-AnnotationInfo.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-AnnotationInfo.o `test -f 'edges/AnnotationInfo.cpp' || echo '$(srcdir)/'`edges/AnnotationInfo.cpp

twostage_lorgparser-AnnotationInfo.obj: edges/AnnotationInfo.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-AnnotationInfo.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser-AnnotationInfo.Tpo -c -o twostage_lorgparser-AnnotationInfo.obj `if test -f 'edges/AnnotationInfo.cpp'; then $(CYGPATH_W) 'edges/AnnotationInfo.cpp'; else $(CYGPATH_W) '$(srcdir)/edges/AnnotationInfo.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-AnnotationInfo.Tpo $(DEPDIR)/twostage_lorgparser-AnnotationInfo.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='edges/AnnotationInfo.cpp' object='twostage_lorgparser-AnnotationInfo.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-AnnotationInfo.obj `if test -f 'edges/AnnotationInfo.cpp'; then $(CYGPATH_W) 'edges/AnnotationInfo.cpp'; else $(CYGPATH_W) '$(srcdir)/edges/AnnotationInfo.cpp'; fi`

twostage_lorgparser-BRule.o: rules/BRule.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-BRule.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser-BRule.Tpo -c -o twostage_lorgparser-BRule.o `test -f 'rules/BRule.cpp' || echo '$(srcdir)/'`rules/BRule.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-BRule.Tpo $(DEPDIR)/twostage_lorgparser-BRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='rules/BRule.cpp' object='twostage_lorgparser-BRule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-BRule.o `test -f 'rules/BRule.cpp' || echo '$(srcdir)/'`rules/BRule.cpp

twostage_lorgparser-BRule.obj: rules/BRule.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-BRule.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser-BRule.Tpo -c -o twostage_lorgparser-BRule.obj `if test -f 'rules/BRule.cpp'; then $(CYGPATH_W) 'rules/BRule.cpp'; else $(CYGPATH_W) '$(srcdir)/rules/BRule.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-BRule.Tpo $(DEPDIR)/twostage_lorgparser-BRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='rules/BRule.cpp' object='twostage_lorgparser-BRule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-BRule.obj `if test -f 'rules/BRule.cpp'; then $(CYGPATH_W) 'rules/BRule.cpp'; else $(CYGPATH_W) '$(srcdir)/rules/BRule.cpp'; fi`

twostage_lorgparser-URule.o: rules/URule.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-URule.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser-URule.Tpo -c -o twostage_lorgparser-URule.o `test -f 'rules/URule.cpp' || echo '$(srcdir)/'`rules/URule.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-URule.Tpo $(DEPDIR)/twostage_lorgparser-URule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='rules/URule.cpp' object='twostage_lorgparser-URule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-URule.o `test -f 'rules/URule.cpp' || echo '$(srcdir)/'`rules/URule.cpp

twostage_lorgparser-URule.obj: rules/URule.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-URule.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser-URule.Tpo -c -o twostage_lorgparser-URule.obj `if test -f 'rules/URule.cpp'; then $(CYGPATH_W) 'rules/URule.cpp'; else $(CYGPATH_W) '$(srcdir)/rules/URule.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-URule.Tpo $(DEPDIR)/twostage_lorgparser-URule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='rules/URule.cpp' object='twostage_lorgparser-URule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-URule.obj `if test -f 'rules/URule.cpp'; then $(CYGPATH_W) 'rules/URule.cpp'; else $(CYGPATH_W) '$(srcdir)/rules/URule.cpp'; fi`

twostage_lorgparser-LexicalRule.o: rules/LexicalRule.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-LexicalRule.o -MD -MP -MF $(DEPDIR)/twostage_lorgparser-LexicalRule.Tpo -c -o twostage_lorgparser-LexicalRule.o `test -f 'rules/LexicalRule.cpp' || echo '$(srcdir)/'`rules/LexicalRule.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-LexicalRule.Tpo $(DEPDIR)/twostage_lorgparser-LexicalRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='rules/LexicalRule.cpp' object='twostage_lorgparser-LexicalRule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-LexicalRule.o `test -f 'rules/LexicalRule.cpp' || echo '$(srcdir)/'`rules/LexicalRule.cpp

twostage_lorgparser-LexicalRule.obj: rules/LexicalRule.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -MT twostage_lorgparser-LexicalRule.obj -MD -MP -MF $(DEPDIR)/twostage_lorgparser-LexicalRule.Tpo -c -o twostage_lorgparser-LexicalRule.obj `if test -f 'rules/LexicalRule.cpp'; then $(CYGPATH_W) 'rules/LexicalRule.cpp'; else $(CYGPATH_W) '$(srcdir)/rules/LexicalRule.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twostage_lorgparser-LexicalRule.Tpo $(DEPDIR)/twostage_lorgparser-LexicalRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='rules/LexicalRule.cpp' object='twostage_lorgparser-LexicalRule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(twostage_lorgparser_CPPFLAGS) $(CPPFLAGS) $(twostage_lorgparser_CXXFLAGS) $(CXXFLAGS) -c -o twostage_lorgparser-LexicalRule.obj `if test -f 'rules/LexicalRule.cpp'; then $(CYGPATH_W) 'rules/LexicalRule.cpp'; else $(CYGPATH_W) '$(srcdir)/rules/LexicalRule.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

cscopelist:  $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS) $(LISP)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool cscopelist ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
