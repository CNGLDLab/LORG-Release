# Makefile.in generated by automake 1.12.3 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2012 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = tb2gram$(EXEEXT)
@WANT_LTR_TRUE@am__append_1 = -lrt 
subdir = src/training
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/depcomp
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_boost_base.m4 \
	$(top_srcdir)/m4/ax_boost_filesystem.m4 \
	$(top_srcdir)/m4/ax_boost_program_options.m4 \
	$(top_srcdir)/m4/ax_boost_regex.m4 \
	$(top_srcdir)/m4/ax_boost_system.m4 \
	$(top_srcdir)/m4/ax_boost_thread.m4 \
	$(top_srcdir)/m4/ax_boost_unit_test_framework.m4 \
	$(top_srcdir)/m4/ax_tbb.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_tb2gram_OBJECTS = tb2gram-tb2gram.$(OBJEXT) \
	tb2gram-LorgApp.$(OBJEXT) tb2gram-LorgTrainerApp.$(OBJEXT) \
	tb2gram-PtbPsTree.$(OBJEXT) tb2gram-Treebank.$(OBJEXT) \
	tb2gram-PTBInputParser.$(OBJEXT) tb2gram-SymbolTable.$(OBJEXT) \
	tb2gram-Production.$(OBJEXT) tb2gram-Rule.$(OBJEXT) \
	tb2gram-ConfigTable.$(OBJEXT) tb2gram-EMTrainer.$(OBJEXT) \
	tb2gram-RandomGenerator.$(OBJEXT) tb2gram-BRule.$(OBJEXT) \
	tb2gram-URule.$(OBJEXT) tb2gram-BRuleTraining.$(OBJEXT) \
	tb2gram-URuleTraining.$(OBJEXT) tb2gram-LexicalRule.$(OBJEXT) \
	tb2gram-LexicalRuleTraining.$(OBJEXT) \
	tb2gram-AnnotatedLabelsInfo.$(OBJEXT) \
	tb2gram-Grammar.$(OBJEXT) tb2gram-Lexicon.$(OBJEXT) \
	tb2gram-BasicLexicon.$(OBJEXT) \
	tb2gram-BerkeleyLexicon.$(OBJEXT) \
	tb2gram-LexiconFactory.$(OBJEXT) \
	tb2gram-WordSignatureFactory.$(OBJEXT) \
	tb2gram-BerkeleyEnglishUMapping.$(OBJEXT) \
	tb2gram-BaselineFrenchUMapping.$(OBJEXT) \
	tb2gram-EnglishIGMapping.$(OBJEXT) \
	tb2gram-FrenchIGMapping.$(OBJEXT) \
	tb2gram-ItalianIGMapping.$(OBJEXT) \
	tb2gram-ArabicUMapping.$(OBJEXT) \
	tb2gram-ArabicIGMapping.$(OBJEXT) \
	tb2gram-AnnotationInfo.$(OBJEXT) \
	tb2gram-BinaryTrainingTree.$(OBJEXT) \
	tb2gram-TrainingNode.$(OBJEXT) \
	tb2gram-TrainingGrammar.$(OBJEXT)
tb2gram_OBJECTS = $(am_tb2gram_OBJECTS)
am__DEPENDENCIES_1 =
@WANT_TCMALLOC_FALSE@tb2gram_DEPENDENCIES = $(am__DEPENDENCIES_1) \
@WANT_TCMALLOC_FALSE@	$(am__DEPENDENCIES_1) \
@WANT_TCMALLOC_FALSE@	$(am__DEPENDENCIES_1) \
@WANT_TCMALLOC_FALSE@	$(am__DEPENDENCIES_1) \
@WANT_TCMALLOC_FALSE@	$(am__DEPENDENCIES_1) \
@WANT_TCMALLOC_FALSE@	$(am__DEPENDENCIES_1) \
@WANT_TCMALLOC_FALSE@	$(am__DEPENDENCIES_1) \
@WANT_TCMALLOC_FALSE@	$(am__DEPENDENCIES_1)
@WANT_TCMALLOC_TRUE@tb2gram_DEPENDENCIES = $(am__DEPENDENCIES_1) \
@WANT_TCMALLOC_TRUE@	$(am__DEPENDENCIES_1) \
@WANT_TCMALLOC_TRUE@	$(am__DEPENDENCIES_1) \
@WANT_TCMALLOC_TRUE@	$(am__DEPENDENCIES_1) \
@WANT_TCMALLOC_TRUE@	$(am__DEPENDENCIES_1) \
@WANT_TCMALLOC_TRUE@	$(am__DEPENDENCIES_1) \
@WANT_TCMALLOC_TRUE@	$(am__DEPENDENCIES_1) \
@WANT_TCMALLOC_TRUE@	$(am__DEPENDENCIES_1)
tb2gram_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(tb2gram_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(tb2gram_SOURCES)
DIST_SOURCES = $(tb2gram_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
BOOST_FILESYSTEM_LIB = @BOOST_FILESYSTEM_LIB@
BOOST_LDFLAGS = @BOOST_LDFLAGS@
BOOST_PROGRAM_OPTIONS_LIB = @BOOST_PROGRAM_OPTIONS_LIB@
BOOST_REGEX_LIB = @BOOST_REGEX_LIB@
BOOST_SYSTEM_LIB = @BOOST_SYSTEM_LIB@
BOOST_THREAD_LIB = @BOOST_THREAD_LIB@
BOOST_UNIT_TEST_FRAMEWORK_LIB = @BOOST_UNIT_TEST_FRAMEWORK_LIB@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@ $(am__append_1)
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TBB_CPPFLAGS = @TBB_CPPFLAGS@
TBB_LDFLAGS = @TBB_LDFLAGS@
TBB_LIBS = @TBB_LIBS@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AM_CPPFLAGS = $(BOOST_CPPFLAGS) $(TBB_CPPFLAGS) -I$(top_srcdir)/src
tb2gram_CXXFLAGS = -O6 -Wall -Wextra -pipe -ffast-math -DNDEBUG
#tb2gram_CXXFLAGS = -O3 -Wall -pipe #-fdiagnostics-show-option

#flags for debugging
#CXXFLAGS = -O0 -g -fno-inline -Wall -pg
#tb2gram_CXXFLAGS = -Wall -Wextra  -O2  -g  -pg -DBENCHMARK
#tb2gram_CXXFLAGS = -O1  -g  -Wall -Wextra -pg
tb2gram_SOURCES = tb2gram.cpp \
	../LorgApp.h ../LorgApp.cpp LorgTrainerApp.h LorgTrainerApp.cpp \
	../utils/PtbPsTree.cpp ../utils/PtbPsTree.h \
	Treebank.h Treebank.cpp	TreebankFactory.h \
	../utils/data_parsers/ParseError.h \
	../utils/data_parsers/PTBInputParser.cpp ../utils/data_parsers/PTBInputParser.h \
	../utils/SymbolTable.cpp ../utils/SymbolTable.h \
	../rules/Production.cpp ../rules/Production.h \
	../rules/Rule.cpp ../rules/Rule.h \
	../utils/ConfigTable.cpp ../utils/ConfigTable.h	\
	EMTrainer.h EMTrainer.cpp \
	../utils/RandomGenerator.cpp ../utils/RandomGenerator.h \
	../rules/BRule.h ../rules/BRule.cpp  \
	../rules/URule.h ../rules/URule.cpp \
	../rules/BRuleTraining.h ../rules/BRuleTraining.cpp  \
	../rules/URuleTraining.h ../rules/URuleTraining.cpp \
	../rules/LexicalRule.h ../rules/LexicalRule.cpp \
	../rules/LexicalRuleTraining.h ../rules/LexicalRuleTraining.cpp \
	../grammars/AnnotatedLabelsInfo.h ../grammars/AnnotatedLabelsInfo.cpp \
	../grammars/Grammar.h ../grammars/Grammar.cpp \
	../lexicon/Lexicon.h ../lexicon/Lexicon.cpp \
	../lexicon/BasicLexicon.h ../lexicon/BasicLexicon.cpp \
	../lexicon/BerkeleyLexicon.h ../lexicon/BerkeleyLexicon.cpp  \
	../lexicon/WordSignature.h \
	../lexicon/LexiconFactory.h ../lexicon/LexiconFactory.cpp \
	../lexicon/WordSignatureFactory.h ../lexicon/WordSignatureFactory.cpp \
	../lexicon/BerkeleyEnglishUMapping.h ../lexicon/BerkeleyEnglishUMapping.cpp \
	../lexicon/BaselineFrenchUMapping.h ../lexicon/BaselineFrenchUMapping.cpp \
	../lexicon/EnglishIGMapping.h ../lexicon/EnglishIGMapping.cpp \
	../lexicon/FrenchIGMapping.h ../lexicon/FrenchIGMapping.cpp \
	../lexicon/ItalianIGMapping.h ../lexicon/ItalianIGMapping.cpp \
	../lexicon/ArabicUMapping.h ../lexicon/ArabicUMapping.cpp \
	../lexicon/ArabicIGMapping.h ../lexicon/ArabicIGMapping.cpp \
	../edges/AnnotationInfo.h ../edges/AnnotationInfo.cpp \
	../edges/BinaryTrainingTree.h ../edges/BinaryTrainingTree.cpp \
	../edges/TrainingNode.h ../edges/TrainingNode.cpp \
	TrainingGrammar.h TrainingGrammar.cpp

@WANT_TCMALLOC_FALSE@tb2gram_LDADD = $(BOOST_LDFLAGS) $(BOOST_REGEX_LIB) $(BOOST_PROGRAM_OPTIONS_LIB) $(BOOST_SYSTEM_LIB) $(BOOST_FILESYSTEM_LIB) $(BOOST_THREAD_LIB) $(TBB_LDFLAGS) $(TBB_LIBS) -lm
@WANT_TCMALLOC_TRUE@tb2gram_LDADD = $(BOOST_LDFLAGS) $(BOOST_REGEX_LIB) $(BOOST_PROGRAM_OPTIONS_LIB) $(BOOST_SYSTEM_LIB) $(BOOST_FILESYSTEM_LIB) $(BOOST_THREAD_LIB) $(TBB_LDFLAGS) $(TBB_LIBS) -lm -ltcmalloc
# tb2gram_LDADD = $(BOOST_LDFLAGS) $(BOOST_REGEX_LIB) $(BOOST_PROGRAM_OPTIONS_LIB) $(BOOST_FILESYSTEM_LIB) -lm

#AM_CXXFLAGS = $(BOOST_CPPFLAGS)
AM_LDLFAGS = $(BOOST_LDFLAGS)
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/training/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/training/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
tb2gram$(EXEEXT): $(tb2gram_OBJECTS) $(tb2gram_DEPENDENCIES) $(EXTRA_tb2gram_DEPENDENCIES) 
	@rm -f tb2gram$(EXEEXT)
	$(tb2gram_LINK) $(tb2gram_OBJECTS) $(tb2gram_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tb2gram-AnnotatedLabelsInfo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tb2gram-AnnotationInfo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tb2gram-ArabicIGMapping.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tb2gram-ArabicUMapping.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tb2gram-BRule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tb2gram-BRuleTraining.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tb2gram-BaselineFrenchUMapping.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tb2gram-BasicLexicon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tb2gram-BerkeleyEnglishUMapping.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tb2gram-BerkeleyLexicon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tb2gram-BinaryTrainingTree.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tb2gram-ConfigTable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tb2gram-EMTrainer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tb2gram-EnglishIGMapping.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tb2gram-FrenchIGMapping.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tb2gram-Grammar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tb2gram-ItalianIGMapping.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tb2gram-LexicalRule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tb2gram-LexicalRuleTraining.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tb2gram-Lexicon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tb2gram-LexiconFactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tb2gram-LorgApp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tb2gram-LorgTrainerApp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tb2gram-PTBInputParser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tb2gram-Production.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tb2gram-PtbPsTree.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tb2gram-RandomGenerator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tb2gram-Rule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tb2gram-SymbolTable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tb2gram-TrainingGrammar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tb2gram-TrainingNode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tb2gram-Treebank.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tb2gram-URule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tb2gram-URuleTraining.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tb2gram-WordSignatureFactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tb2gram-tb2gram.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

tb2gram-tb2gram.o: tb2gram.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-tb2gram.o -MD -MP -MF $(DEPDIR)/tb2gram-tb2gram.Tpo -c -o tb2gram-tb2gram.o `test -f 'tb2gram.cpp' || echo '$(srcdir)/'`tb2gram.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-tb2gram.Tpo $(DEPDIR)/tb2gram-tb2gram.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tb2gram.cpp' object='tb2gram-tb2gram.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-tb2gram.o `test -f 'tb2gram.cpp' || echo '$(srcdir)/'`tb2gram.cpp

tb2gram-tb2gram.obj: tb2gram.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-tb2gram.obj -MD -MP -MF $(DEPDIR)/tb2gram-tb2gram.Tpo -c -o tb2gram-tb2gram.obj `if test -f 'tb2gram.cpp'; then $(CYGPATH_W) 'tb2gram.cpp'; else $(CYGPATH_W) '$(srcdir)/tb2gram.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-tb2gram.Tpo $(DEPDIR)/tb2gram-tb2gram.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tb2gram.cpp' object='tb2gram-tb2gram.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-tb2gram.obj `if test -f 'tb2gram.cpp'; then $(CYGPATH_W) 'tb2gram.cpp'; else $(CYGPATH_W) '$(srcdir)/tb2gram.cpp'; fi`

tb2gram-LorgApp.o: ../LorgApp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-LorgApp.o -MD -MP -MF $(DEPDIR)/tb2gram-LorgApp.Tpo -c -o tb2gram-LorgApp.o `test -f '../LorgApp.cpp' || echo '$(srcdir)/'`../LorgApp.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-LorgApp.Tpo $(DEPDIR)/tb2gram-LorgApp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../LorgApp.cpp' object='tb2gram-LorgApp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-LorgApp.o `test -f '../LorgApp.cpp' || echo '$(srcdir)/'`../LorgApp.cpp

tb2gram-LorgApp.obj: ../LorgApp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-LorgApp.obj -MD -MP -MF $(DEPDIR)/tb2gram-LorgApp.Tpo -c -o tb2gram-LorgApp.obj `if test -f '../LorgApp.cpp'; then $(CYGPATH_W) '../LorgApp.cpp'; else $(CYGPATH_W) '$(srcdir)/../LorgApp.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-LorgApp.Tpo $(DEPDIR)/tb2gram-LorgApp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../LorgApp.cpp' object='tb2gram-LorgApp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-LorgApp.obj `if test -f '../LorgApp.cpp'; then $(CYGPATH_W) '../LorgApp.cpp'; else $(CYGPATH_W) '$(srcdir)/../LorgApp.cpp'; fi`

tb2gram-LorgTrainerApp.o: LorgTrainerApp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-LorgTrainerApp.o -MD -MP -MF $(DEPDIR)/tb2gram-LorgTrainerApp.Tpo -c -o tb2gram-LorgTrainerApp.o `test -f 'LorgTrainerApp.cpp' || echo '$(srcdir)/'`LorgTrainerApp.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-LorgTrainerApp.Tpo $(DEPDIR)/tb2gram-LorgTrainerApp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LorgTrainerApp.cpp' object='tb2gram-LorgTrainerApp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-LorgTrainerApp.o `test -f 'LorgTrainerApp.cpp' || echo '$(srcdir)/'`LorgTrainerApp.cpp

tb2gram-LorgTrainerApp.obj: LorgTrainerApp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-LorgTrainerApp.obj -MD -MP -MF $(DEPDIR)/tb2gram-LorgTrainerApp.Tpo -c -o tb2gram-LorgTrainerApp.obj `if test -f 'LorgTrainerApp.cpp'; then $(CYGPATH_W) 'LorgTrainerApp.cpp'; else $(CYGPATH_W) '$(srcdir)/LorgTrainerApp.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-LorgTrainerApp.Tpo $(DEPDIR)/tb2gram-LorgTrainerApp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LorgTrainerApp.cpp' object='tb2gram-LorgTrainerApp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-LorgTrainerApp.obj `if test -f 'LorgTrainerApp.cpp'; then $(CYGPATH_W) 'LorgTrainerApp.cpp'; else $(CYGPATH_W) '$(srcdir)/LorgTrainerApp.cpp'; fi`

tb2gram-PtbPsTree.o: ../utils/PtbPsTree.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-PtbPsTree.o -MD -MP -MF $(DEPDIR)/tb2gram-PtbPsTree.Tpo -c -o tb2gram-PtbPsTree.o `test -f '../utils/PtbPsTree.cpp' || echo '$(srcdir)/'`../utils/PtbPsTree.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-PtbPsTree.Tpo $(DEPDIR)/tb2gram-PtbPsTree.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../utils/PtbPsTree.cpp' object='tb2gram-PtbPsTree.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-PtbPsTree.o `test -f '../utils/PtbPsTree.cpp' || echo '$(srcdir)/'`../utils/PtbPsTree.cpp

tb2gram-PtbPsTree.obj: ../utils/PtbPsTree.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-PtbPsTree.obj -MD -MP -MF $(DEPDIR)/tb2gram-PtbPsTree.Tpo -c -o tb2gram-PtbPsTree.obj `if test -f '../utils/PtbPsTree.cpp'; then $(CYGPATH_W) '../utils/PtbPsTree.cpp'; else $(CYGPATH_W) '$(srcdir)/../utils/PtbPsTree.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-PtbPsTree.Tpo $(DEPDIR)/tb2gram-PtbPsTree.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../utils/PtbPsTree.cpp' object='tb2gram-PtbPsTree.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-PtbPsTree.obj `if test -f '../utils/PtbPsTree.cpp'; then $(CYGPATH_W) '../utils/PtbPsTree.cpp'; else $(CYGPATH_W) '$(srcdir)/../utils/PtbPsTree.cpp'; fi`

tb2gram-Treebank.o: Treebank.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-Treebank.o -MD -MP -MF $(DEPDIR)/tb2gram-Treebank.Tpo -c -o tb2gram-Treebank.o `test -f 'Treebank.cpp' || echo '$(srcdir)/'`Treebank.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-Treebank.Tpo $(DEPDIR)/tb2gram-Treebank.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Treebank.cpp' object='tb2gram-Treebank.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-Treebank.o `test -f 'Treebank.cpp' || echo '$(srcdir)/'`Treebank.cpp

tb2gram-Treebank.obj: Treebank.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-Treebank.obj -MD -MP -MF $(DEPDIR)/tb2gram-Treebank.Tpo -c -o tb2gram-Treebank.obj `if test -f 'Treebank.cpp'; then $(CYGPATH_W) 'Treebank.cpp'; else $(CYGPATH_W) '$(srcdir)/Treebank.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-Treebank.Tpo $(DEPDIR)/tb2gram-Treebank.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Treebank.cpp' object='tb2gram-Treebank.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-Treebank.obj `if test -f 'Treebank.cpp'; then $(CYGPATH_W) 'Treebank.cpp'; else $(CYGPATH_W) '$(srcdir)/Treebank.cpp'; fi`

tb2gram-PTBInputParser.o: ../utils/data_parsers/PTBInputParser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-PTBInputParser.o -MD -MP -MF $(DEPDIR)/tb2gram-PTBInputParser.Tpo -c -o tb2gram-PTBInputParser.o `test -f '../utils/data_parsers/PTBInputParser.cpp' || echo '$(srcdir)/'`../utils/data_parsers/PTBInputParser.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-PTBInputParser.Tpo $(DEPDIR)/tb2gram-PTBInputParser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../utils/data_parsers/PTBInputParser.cpp' object='tb2gram-PTBInputParser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-PTBInputParser.o `test -f '../utils/data_parsers/PTBInputParser.cpp' || echo '$(srcdir)/'`../utils/data_parsers/PTBInputParser.cpp

tb2gram-PTBInputParser.obj: ../utils/data_parsers/PTBInputParser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-PTBInputParser.obj -MD -MP -MF $(DEPDIR)/tb2gram-PTBInputParser.Tpo -c -o tb2gram-PTBInputParser.obj `if test -f '../utils/data_parsers/PTBInputParser.cpp'; then $(CYGPATH_W) '../utils/data_parsers/PTBInputParser.cpp'; else $(CYGPATH_W) '$(srcdir)/../utils/data_parsers/PTBInputParser.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-PTBInputParser.Tpo $(DEPDIR)/tb2gram-PTBInputParser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../utils/data_parsers/PTBInputParser.cpp' object='tb2gram-PTBInputParser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-PTBInputParser.obj `if test -f '../utils/data_parsers/PTBInputParser.cpp'; then $(CYGPATH_W) '../utils/data_parsers/PTBInputParser.cpp'; else $(CYGPATH_W) '$(srcdir)/../utils/data_parsers/PTBInputParser.cpp'; fi`

tb2gram-SymbolTable.o: ../utils/SymbolTable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-SymbolTable.o -MD -MP -MF $(DEPDIR)/tb2gram-SymbolTable.Tpo -c -o tb2gram-SymbolTable.o `test -f '../utils/SymbolTable.cpp' || echo '$(srcdir)/'`../utils/SymbolTable.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-SymbolTable.Tpo $(DEPDIR)/tb2gram-SymbolTable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../utils/SymbolTable.cpp' object='tb2gram-SymbolTable.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-SymbolTable.o `test -f '../utils/SymbolTable.cpp' || echo '$(srcdir)/'`../utils/SymbolTable.cpp

tb2gram-SymbolTable.obj: ../utils/SymbolTable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-SymbolTable.obj -MD -MP -MF $(DEPDIR)/tb2gram-SymbolTable.Tpo -c -o tb2gram-SymbolTable.obj `if test -f '../utils/SymbolTable.cpp'; then $(CYGPATH_W) '../utils/SymbolTable.cpp'; else $(CYGPATH_W) '$(srcdir)/../utils/SymbolTable.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-SymbolTable.Tpo $(DEPDIR)/tb2gram-SymbolTable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../utils/SymbolTable.cpp' object='tb2gram-SymbolTable.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-SymbolTable.obj `if test -f '../utils/SymbolTable.cpp'; then $(CYGPATH_W) '../utils/SymbolTable.cpp'; else $(CYGPATH_W) '$(srcdir)/../utils/SymbolTable.cpp'; fi`

tb2gram-Production.o: ../rules/Production.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-Production.o -MD -MP -MF $(DEPDIR)/tb2gram-Production.Tpo -c -o tb2gram-Production.o `test -f '../rules/Production.cpp' || echo '$(srcdir)/'`../rules/Production.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-Production.Tpo $(DEPDIR)/tb2gram-Production.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../rules/Production.cpp' object='tb2gram-Production.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-Production.o `test -f '../rules/Production.cpp' || echo '$(srcdir)/'`../rules/Production.cpp

tb2gram-Production.obj: ../rules/Production.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-Production.obj -MD -MP -MF $(DEPDIR)/tb2gram-Production.Tpo -c -o tb2gram-Production.obj `if test -f '../rules/Production.cpp'; then $(CYGPATH_W) '../rules/Production.cpp'; else $(CYGPATH_W) '$(srcdir)/../rules/Production.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-Production.Tpo $(DEPDIR)/tb2gram-Production.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../rules/Production.cpp' object='tb2gram-Production.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-Production.obj `if test -f '../rules/Production.cpp'; then $(CYGPATH_W) '../rules/Production.cpp'; else $(CYGPATH_W) '$(srcdir)/../rules/Production.cpp'; fi`

tb2gram-Rule.o: ../rules/Rule.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-Rule.o -MD -MP -MF $(DEPDIR)/tb2gram-Rule.Tpo -c -o tb2gram-Rule.o `test -f '../rules/Rule.cpp' || echo '$(srcdir)/'`../rules/Rule.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-Rule.Tpo $(DEPDIR)/tb2gram-Rule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../rules/Rule.cpp' object='tb2gram-Rule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-Rule.o `test -f '../rules/Rule.cpp' || echo '$(srcdir)/'`../rules/Rule.cpp

tb2gram-Rule.obj: ../rules/Rule.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-Rule.obj -MD -MP -MF $(DEPDIR)/tb2gram-Rule.Tpo -c -o tb2gram-Rule.obj `if test -f '../rules/Rule.cpp'; then $(CYGPATH_W) '../rules/Rule.cpp'; else $(CYGPATH_W) '$(srcdir)/../rules/Rule.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-Rule.Tpo $(DEPDIR)/tb2gram-Rule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../rules/Rule.cpp' object='tb2gram-Rule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-Rule.obj `if test -f '../rules/Rule.cpp'; then $(CYGPATH_W) '../rules/Rule.cpp'; else $(CYGPATH_W) '$(srcdir)/../rules/Rule.cpp'; fi`

tb2gram-ConfigTable.o: ../utils/ConfigTable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-ConfigTable.o -MD -MP -MF $(DEPDIR)/tb2gram-ConfigTable.Tpo -c -o tb2gram-ConfigTable.o `test -f '../utils/ConfigTable.cpp' || echo '$(srcdir)/'`../utils/ConfigTable.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-ConfigTable.Tpo $(DEPDIR)/tb2gram-ConfigTable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../utils/ConfigTable.cpp' object='tb2gram-ConfigTable.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-ConfigTable.o `test -f '../utils/ConfigTable.cpp' || echo '$(srcdir)/'`../utils/ConfigTable.cpp

tb2gram-ConfigTable.obj: ../utils/ConfigTable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-ConfigTable.obj -MD -MP -MF $(DEPDIR)/tb2gram-ConfigTable.Tpo -c -o tb2gram-ConfigTable.obj `if test -f '../utils/ConfigTable.cpp'; then $(CYGPATH_W) '../utils/ConfigTable.cpp'; else $(CYGPATH_W) '$(srcdir)/../utils/ConfigTable.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-ConfigTable.Tpo $(DEPDIR)/tb2gram-ConfigTable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../utils/ConfigTable.cpp' object='tb2gram-ConfigTable.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-ConfigTable.obj `if test -f '../utils/ConfigTable.cpp'; then $(CYGPATH_W) '../utils/ConfigTable.cpp'; else $(CYGPATH_W) '$(srcdir)/../utils/ConfigTable.cpp'; fi`

tb2gram-EMTrainer.o: EMTrainer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-EMTrainer.o -MD -MP -MF $(DEPDIR)/tb2gram-EMTrainer.Tpo -c -o tb2gram-EMTrainer.o `test -f 'EMTrainer.cpp' || echo '$(srcdir)/'`EMTrainer.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-EMTrainer.Tpo $(DEPDIR)/tb2gram-EMTrainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='EMTrainer.cpp' object='tb2gram-EMTrainer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-EMTrainer.o `test -f 'EMTrainer.cpp' || echo '$(srcdir)/'`EMTrainer.cpp

tb2gram-EMTrainer.obj: EMTrainer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-EMTrainer.obj -MD -MP -MF $(DEPDIR)/tb2gram-EMTrainer.Tpo -c -o tb2gram-EMTrainer.obj `if test -f 'EMTrainer.cpp'; then $(CYGPATH_W) 'EMTrainer.cpp'; else $(CYGPATH_W) '$(srcdir)/EMTrainer.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-EMTrainer.Tpo $(DEPDIR)/tb2gram-EMTrainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='EMTrainer.cpp' object='tb2gram-EMTrainer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-EMTrainer.obj `if test -f 'EMTrainer.cpp'; then $(CYGPATH_W) 'EMTrainer.cpp'; else $(CYGPATH_W) '$(srcdir)/EMTrainer.cpp'; fi`

tb2gram-RandomGenerator.o: ../utils/RandomGenerator.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-RandomGenerator.o -MD -MP -MF $(DEPDIR)/tb2gram-RandomGenerator.Tpo -c -o tb2gram-RandomGenerator.o `test -f '../utils/RandomGenerator.cpp' || echo '$(srcdir)/'`../utils/RandomGenerator.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-RandomGenerator.Tpo $(DEPDIR)/tb2gram-RandomGenerator.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../utils/RandomGenerator.cpp' object='tb2gram-RandomGenerator.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-RandomGenerator.o `test -f '../utils/RandomGenerator.cpp' || echo '$(srcdir)/'`../utils/RandomGenerator.cpp

tb2gram-RandomGenerator.obj: ../utils/RandomGenerator.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-RandomGenerator.obj -MD -MP -MF $(DEPDIR)/tb2gram-RandomGenerator.Tpo -c -o tb2gram-RandomGenerator.obj `if test -f '../utils/RandomGenerator.cpp'; then $(CYGPATH_W) '../utils/RandomGenerator.cpp'; else $(CYGPATH_W) '$(srcdir)/../utils/RandomGenerator.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-RandomGenerator.Tpo $(DEPDIR)/tb2gram-RandomGenerator.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../utils/RandomGenerator.cpp' object='tb2gram-RandomGenerator.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-RandomGenerator.obj `if test -f '../utils/RandomGenerator.cpp'; then $(CYGPATH_W) '../utils/RandomGenerator.cpp'; else $(CYGPATH_W) '$(srcdir)/../utils/RandomGenerator.cpp'; fi`

tb2gram-BRule.o: ../rules/BRule.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-BRule.o -MD -MP -MF $(DEPDIR)/tb2gram-BRule.Tpo -c -o tb2gram-BRule.o `test -f '../rules/BRule.cpp' || echo '$(srcdir)/'`../rules/BRule.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-BRule.Tpo $(DEPDIR)/tb2gram-BRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../rules/BRule.cpp' object='tb2gram-BRule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-BRule.o `test -f '../rules/BRule.cpp' || echo '$(srcdir)/'`../rules/BRule.cpp

tb2gram-BRule.obj: ../rules/BRule.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-BRule.obj -MD -MP -MF $(DEPDIR)/tb2gram-BRule.Tpo -c -o tb2gram-BRule.obj `if test -f '../rules/BRule.cpp'; then $(CYGPATH_W) '../rules/BRule.cpp'; else $(CYGPATH_W) '$(srcdir)/../rules/BRule.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-BRule.Tpo $(DEPDIR)/tb2gram-BRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../rules/BRule.cpp' object='tb2gram-BRule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-BRule.obj `if test -f '../rules/BRule.cpp'; then $(CYGPATH_W) '../rules/BRule.cpp'; else $(CYGPATH_W) '$(srcdir)/../rules/BRule.cpp'; fi`

tb2gram-URule.o: ../rules/URule.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-URule.o -MD -MP -MF $(DEPDIR)/tb2gram-URule.Tpo -c -o tb2gram-URule.o `test -f '../rules/URule.cpp' || echo '$(srcdir)/'`../rules/URule.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-URule.Tpo $(DEPDIR)/tb2gram-URule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../rules/URule.cpp' object='tb2gram-URule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-URule.o `test -f '../rules/URule.cpp' || echo '$(srcdir)/'`../rules/URule.cpp

tb2gram-URule.obj: ../rules/URule.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-URule.obj -MD -MP -MF $(DEPDIR)/tb2gram-URule.Tpo -c -o tb2gram-URule.obj `if test -f '../rules/URule.cpp'; then $(CYGPATH_W) '../rules/URule.cpp'; else $(CYGPATH_W) '$(srcdir)/../rules/URule.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-URule.Tpo $(DEPDIR)/tb2gram-URule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../rules/URule.cpp' object='tb2gram-URule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-URule.obj `if test -f '../rules/URule.cpp'; then $(CYGPATH_W) '../rules/URule.cpp'; else $(CYGPATH_W) '$(srcdir)/../rules/URule.cpp'; fi`

tb2gram-BRuleTraining.o: ../rules/BRuleTraining.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-BRuleTraining.o -MD -MP -MF $(DEPDIR)/tb2gram-BRuleTraining.Tpo -c -o tb2gram-BRuleTraining.o `test -f '../rules/BRuleTraining.cpp' || echo '$(srcdir)/'`../rules/BRuleTraining.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-BRuleTraining.Tpo $(DEPDIR)/tb2gram-BRuleTraining.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../rules/BRuleTraining.cpp' object='tb2gram-BRuleTraining.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-BRuleTraining.o `test -f '../rules/BRuleTraining.cpp' || echo '$(srcdir)/'`../rules/BRuleTraining.cpp

tb2gram-BRuleTraining.obj: ../rules/BRuleTraining.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-BRuleTraining.obj -MD -MP -MF $(DEPDIR)/tb2gram-BRuleTraining.Tpo -c -o tb2gram-BRuleTraining.obj `if test -f '../rules/BRuleTraining.cpp'; then $(CYGPATH_W) '../rules/BRuleTraining.cpp'; else $(CYGPATH_W) '$(srcdir)/../rules/BRuleTraining.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-BRuleTraining.Tpo $(DEPDIR)/tb2gram-BRuleTraining.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../rules/BRuleTraining.cpp' object='tb2gram-BRuleTraining.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-BRuleTraining.obj `if test -f '../rules/BRuleTraining.cpp'; then $(CYGPATH_W) '../rules/BRuleTraining.cpp'; else $(CYGPATH_W) '$(srcdir)/../rules/BRuleTraining.cpp'; fi`

tb2gram-URuleTraining.o: ../rules/URuleTraining.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-URuleTraining.o -MD -MP -MF $(DEPDIR)/tb2gram-URuleTraining.Tpo -c -o tb2gram-URuleTraining.o `test -f '../rules/URuleTraining.cpp' || echo '$(srcdir)/'`../rules/URuleTraining.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-URuleTraining.Tpo $(DEPDIR)/tb2gram-URuleTraining.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../rules/URuleTraining.cpp' object='tb2gram-URuleTraining.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-URuleTraining.o `test -f '../rules/URuleTraining.cpp' || echo '$(srcdir)/'`../rules/URuleTraining.cpp

tb2gram-URuleTraining.obj: ../rules/URuleTraining.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-URuleTraining.obj -MD -MP -MF $(DEPDIR)/tb2gram-URuleTraining.Tpo -c -o tb2gram-URuleTraining.obj `if test -f '../rules/URuleTraining.cpp'; then $(CYGPATH_W) '../rules/URuleTraining.cpp'; else $(CYGPATH_W) '$(srcdir)/../rules/URuleTraining.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-URuleTraining.Tpo $(DEPDIR)/tb2gram-URuleTraining.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../rules/URuleTraining.cpp' object='tb2gram-URuleTraining.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-URuleTraining.obj `if test -f '../rules/URuleTraining.cpp'; then $(CYGPATH_W) '../rules/URuleTraining.cpp'; else $(CYGPATH_W) '$(srcdir)/../rules/URuleTraining.cpp'; fi`

tb2gram-LexicalRule.o: ../rules/LexicalRule.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-LexicalRule.o -MD -MP -MF $(DEPDIR)/tb2gram-LexicalRule.Tpo -c -o tb2gram-LexicalRule.o `test -f '../rules/LexicalRule.cpp' || echo '$(srcdir)/'`../rules/LexicalRule.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-LexicalRule.Tpo $(DEPDIR)/tb2gram-LexicalRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../rules/LexicalRule.cpp' object='tb2gram-LexicalRule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-LexicalRule.o `test -f '../rules/LexicalRule.cpp' || echo '$(srcdir)/'`../rules/LexicalRule.cpp

tb2gram-LexicalRule.obj: ../rules/LexicalRule.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-LexicalRule.obj -MD -MP -MF $(DEPDIR)/tb2gram-LexicalRule.Tpo -c -o tb2gram-LexicalRule.obj `if test -f '../rules/LexicalRule.cpp'; then $(CYGPATH_W) '../rules/LexicalRule.cpp'; else $(CYGPATH_W) '$(srcdir)/../rules/LexicalRule.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-LexicalRule.Tpo $(DEPDIR)/tb2gram-LexicalRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../rules/LexicalRule.cpp' object='tb2gram-LexicalRule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-LexicalRule.obj `if test -f '../rules/LexicalRule.cpp'; then $(CYGPATH_W) '../rules/LexicalRule.cpp'; else $(CYGPATH_W) '$(srcdir)/../rules/LexicalRule.cpp'; fi`

tb2gram-LexicalRuleTraining.o: ../rules/LexicalRuleTraining.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-LexicalRuleTraining.o -MD -MP -MF $(DEPDIR)/tb2gram-LexicalRuleTraining.Tpo -c -o tb2gram-LexicalRuleTraining.o `test -f '../rules/LexicalRuleTraining.cpp' || echo '$(srcdir)/'`../rules/LexicalRuleTraining.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-LexicalRuleTraining.Tpo $(DEPDIR)/tb2gram-LexicalRuleTraining.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../rules/LexicalRuleTraining.cpp' object='tb2gram-LexicalRuleTraining.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-LexicalRuleTraining.o `test -f '../rules/LexicalRuleTraining.cpp' || echo '$(srcdir)/'`../rules/LexicalRuleTraining.cpp

tb2gram-LexicalRuleTraining.obj: ../rules/LexicalRuleTraining.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-LexicalRuleTraining.obj -MD -MP -MF $(DEPDIR)/tb2gram-LexicalRuleTraining.Tpo -c -o tb2gram-LexicalRuleTraining.obj `if test -f '../rules/LexicalRuleTraining.cpp'; then $(CYGPATH_W) '../rules/LexicalRuleTraining.cpp'; else $(CYGPATH_W) '$(srcdir)/../rules/LexicalRuleTraining.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-LexicalRuleTraining.Tpo $(DEPDIR)/tb2gram-LexicalRuleTraining.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../rules/LexicalRuleTraining.cpp' object='tb2gram-LexicalRuleTraining.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-LexicalRuleTraining.obj `if test -f '../rules/LexicalRuleTraining.cpp'; then $(CYGPATH_W) '../rules/LexicalRuleTraining.cpp'; else $(CYGPATH_W) '$(srcdir)/../rules/LexicalRuleTraining.cpp'; fi`

tb2gram-AnnotatedLabelsInfo.o: ../grammars/AnnotatedLabelsInfo.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-AnnotatedLabelsInfo.o -MD -MP -MF $(DEPDIR)/tb2gram-AnnotatedLabelsInfo.Tpo -c -o tb2gram-AnnotatedLabelsInfo.o `test -f '../grammars/AnnotatedLabelsInfo.cpp' || echo '$(srcdir)/'`../grammars/AnnotatedLabelsInfo.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-AnnotatedLabelsInfo.Tpo $(DEPDIR)/tb2gram-AnnotatedLabelsInfo.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../grammars/AnnotatedLabelsInfo.cpp' object='tb2gram-AnnotatedLabelsInfo.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-AnnotatedLabelsInfo.o `test -f '../grammars/AnnotatedLabelsInfo.cpp' || echo '$(srcdir)/'`../grammars/AnnotatedLabelsInfo.cpp

tb2gram-AnnotatedLabelsInfo.obj: ../grammars/AnnotatedLabelsInfo.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-AnnotatedLabelsInfo.obj -MD -MP -MF $(DEPDIR)/tb2gram-AnnotatedLabelsInfo.Tpo -c -o tb2gram-AnnotatedLabelsInfo.obj `if test -f '../grammars/AnnotatedLabelsInfo.cpp'; then $(CYGPATH_W) '../grammars/AnnotatedLabelsInfo.cpp'; else $(CYGPATH_W) '$(srcdir)/../grammars/AnnotatedLabelsInfo.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-AnnotatedLabelsInfo.Tpo $(DEPDIR)/tb2gram-AnnotatedLabelsInfo.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../grammars/AnnotatedLabelsInfo.cpp' object='tb2gram-AnnotatedLabelsInfo.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-AnnotatedLabelsInfo.obj `if test -f '../grammars/AnnotatedLabelsInfo.cpp'; then $(CYGPATH_W) '../grammars/AnnotatedLabelsInfo.cpp'; else $(CYGPATH_W) '$(srcdir)/../grammars/AnnotatedLabelsInfo.cpp'; fi`

tb2gram-Grammar.o: ../grammars/Grammar.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-Grammar.o -MD -MP -MF $(DEPDIR)/tb2gram-Grammar.Tpo -c -o tb2gram-Grammar.o `test -f '../grammars/Grammar.cpp' || echo '$(srcdir)/'`../grammars/Grammar.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-Grammar.Tpo $(DEPDIR)/tb2gram-Grammar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../grammars/Grammar.cpp' object='tb2gram-Grammar.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-Grammar.o `test -f '../grammars/Grammar.cpp' || echo '$(srcdir)/'`../grammars/Grammar.cpp

tb2gram-Grammar.obj: ../grammars/Grammar.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-Grammar.obj -MD -MP -MF $(DEPDIR)/tb2gram-Grammar.Tpo -c -o tb2gram-Grammar.obj `if test -f '../grammars/Grammar.cpp'; then $(CYGPATH_W) '../grammars/Grammar.cpp'; else $(CYGPATH_W) '$(srcdir)/../grammars/Grammar.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-Grammar.Tpo $(DEPDIR)/tb2gram-Grammar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../grammars/Grammar.cpp' object='tb2gram-Grammar.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-Grammar.obj `if test -f '../grammars/Grammar.cpp'; then $(CYGPATH_W) '../grammars/Grammar.cpp'; else $(CYGPATH_W) '$(srcdir)/../grammars/Grammar.cpp'; fi`

tb2gram-Lexicon.o: ../lexicon/Lexicon.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-Lexicon.o -MD -MP -MF $(DEPDIR)/tb2gram-Lexicon.Tpo -c -o tb2gram-Lexicon.o `test -f '../lexicon/Lexicon.cpp' || echo '$(srcdir)/'`../lexicon/Lexicon.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-Lexicon.Tpo $(DEPDIR)/tb2gram-Lexicon.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../lexicon/Lexicon.cpp' object='tb2gram-Lexicon.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-Lexicon.o `test -f '../lexicon/Lexicon.cpp' || echo '$(srcdir)/'`../lexicon/Lexicon.cpp

tb2gram-Lexicon.obj: ../lexicon/Lexicon.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-Lexicon.obj -MD -MP -MF $(DEPDIR)/tb2gram-Lexicon.Tpo -c -o tb2gram-Lexicon.obj `if test -f '../lexicon/Lexicon.cpp'; then $(CYGPATH_W) '../lexicon/Lexicon.cpp'; else $(CYGPATH_W) '$(srcdir)/../lexicon/Lexicon.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-Lexicon.Tpo $(DEPDIR)/tb2gram-Lexicon.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../lexicon/Lexicon.cpp' object='tb2gram-Lexicon.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-Lexicon.obj `if test -f '../lexicon/Lexicon.cpp'; then $(CYGPATH_W) '../lexicon/Lexicon.cpp'; else $(CYGPATH_W) '$(srcdir)/../lexicon/Lexicon.cpp'; fi`

tb2gram-BasicLexicon.o: ../lexicon/BasicLexicon.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-BasicLexicon.o -MD -MP -MF $(DEPDIR)/tb2gram-BasicLexicon.Tpo -c -o tb2gram-BasicLexicon.o `test -f '../lexicon/BasicLexicon.cpp' || echo '$(srcdir)/'`../lexicon/BasicLexicon.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-BasicLexicon.Tpo $(DEPDIR)/tb2gram-BasicLexicon.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../lexicon/BasicLexicon.cpp' object='tb2gram-BasicLexicon.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-BasicLexicon.o `test -f '../lexicon/BasicLexicon.cpp' || echo '$(srcdir)/'`../lexicon/BasicLexicon.cpp

tb2gram-BasicLexicon.obj: ../lexicon/BasicLexicon.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-BasicLexicon.obj -MD -MP -MF $(DEPDIR)/tb2gram-BasicLexicon.Tpo -c -o tb2gram-BasicLexicon.obj `if test -f '../lexicon/BasicLexicon.cpp'; then $(CYGPATH_W) '../lexicon/BasicLexicon.cpp'; else $(CYGPATH_W) '$(srcdir)/../lexicon/BasicLexicon.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-BasicLexicon.Tpo $(DEPDIR)/tb2gram-BasicLexicon.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../lexicon/BasicLexicon.cpp' object='tb2gram-BasicLexicon.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-BasicLexicon.obj `if test -f '../lexicon/BasicLexicon.cpp'; then $(CYGPATH_W) '../lexicon/BasicLexicon.cpp'; else $(CYGPATH_W) '$(srcdir)/../lexicon/BasicLexicon.cpp'; fi`

tb2gram-BerkeleyLexicon.o: ../lexicon/BerkeleyLexicon.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-BerkeleyLexicon.o -MD -MP -MF $(DEPDIR)/tb2gram-BerkeleyLexicon.Tpo -c -o tb2gram-BerkeleyLexicon.o `test -f '../lexicon/BerkeleyLexicon.cpp' || echo '$(srcdir)/'`../lexicon/BerkeleyLexicon.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-BerkeleyLexicon.Tpo $(DEPDIR)/tb2gram-BerkeleyLexicon.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../lexicon/BerkeleyLexicon.cpp' object='tb2gram-BerkeleyLexicon.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-BerkeleyLexicon.o `test -f '../lexicon/BerkeleyLexicon.cpp' || echo '$(srcdir)/'`../lexicon/BerkeleyLexicon.cpp

tb2gram-BerkeleyLexicon.obj: ../lexicon/BerkeleyLexicon.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-BerkeleyLexicon.obj -MD -MP -MF $(DEPDIR)/tb2gram-BerkeleyLexicon.Tpo -c -o tb2gram-BerkeleyLexicon.obj `if test -f '../lexicon/BerkeleyLexicon.cpp'; then $(CYGPATH_W) '../lexicon/BerkeleyLexicon.cpp'; else $(CYGPATH_W) '$(srcdir)/../lexicon/BerkeleyLexicon.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-BerkeleyLexicon.Tpo $(DEPDIR)/tb2gram-BerkeleyLexicon.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../lexicon/BerkeleyLexicon.cpp' object='tb2gram-BerkeleyLexicon.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-BerkeleyLexicon.obj `if test -f '../lexicon/BerkeleyLexicon.cpp'; then $(CYGPATH_W) '../lexicon/BerkeleyLexicon.cpp'; else $(CYGPATH_W) '$(srcdir)/../lexicon/BerkeleyLexicon.cpp'; fi`

tb2gram-LexiconFactory.o: ../lexicon/LexiconFactory.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-LexiconFactory.o -MD -MP -MF $(DEPDIR)/tb2gram-LexiconFactory.Tpo -c -o tb2gram-LexiconFactory.o `test -f '../lexicon/LexiconFactory.cpp' || echo '$(srcdir)/'`../lexicon/LexiconFactory.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-LexiconFactory.Tpo $(DEPDIR)/tb2gram-LexiconFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../lexicon/LexiconFactory.cpp' object='tb2gram-LexiconFactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-LexiconFactory.o `test -f '../lexicon/LexiconFactory.cpp' || echo '$(srcdir)/'`../lexicon/LexiconFactory.cpp

tb2gram-LexiconFactory.obj: ../lexicon/LexiconFactory.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-LexiconFactory.obj -MD -MP -MF $(DEPDIR)/tb2gram-LexiconFactory.Tpo -c -o tb2gram-LexiconFactory.obj `if test -f '../lexicon/LexiconFactory.cpp'; then $(CYGPATH_W) '../lexicon/LexiconFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/../lexicon/LexiconFactory.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-LexiconFactory.Tpo $(DEPDIR)/tb2gram-LexiconFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../lexicon/LexiconFactory.cpp' object='tb2gram-LexiconFactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-LexiconFactory.obj `if test -f '../lexicon/LexiconFactory.cpp'; then $(CYGPATH_W) '../lexicon/LexiconFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/../lexicon/LexiconFactory.cpp'; fi`

tb2gram-WordSignatureFactory.o: ../lexicon/WordSignatureFactory.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-WordSignatureFactory.o -MD -MP -MF $(DEPDIR)/tb2gram-WordSignatureFactory.Tpo -c -o tb2gram-WordSignatureFactory.o `test -f '../lexicon/WordSignatureFactory.cpp' || echo '$(srcdir)/'`../lexicon/WordSignatureFactory.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-WordSignatureFactory.Tpo $(DEPDIR)/tb2gram-WordSignatureFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../lexicon/WordSignatureFactory.cpp' object='tb2gram-WordSignatureFactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-WordSignatureFactory.o `test -f '../lexicon/WordSignatureFactory.cpp' || echo '$(srcdir)/'`../lexicon/WordSignatureFactory.cpp

tb2gram-WordSignatureFactory.obj: ../lexicon/WordSignatureFactory.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-WordSignatureFactory.obj -MD -MP -MF $(DEPDIR)/tb2gram-WordSignatureFactory.Tpo -c -o tb2gram-WordSignatureFactory.obj `if test -f '../lexicon/WordSignatureFactory.cpp'; then $(CYGPATH_W) '../lexicon/WordSignatureFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/../lexicon/WordSignatureFactory.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-WordSignatureFactory.Tpo $(DEPDIR)/tb2gram-WordSignatureFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../lexicon/WordSignatureFactory.cpp' object='tb2gram-WordSignatureFactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-WordSignatureFactory.obj `if test -f '../lexicon/WordSignatureFactory.cpp'; then $(CYGPATH_W) '../lexicon/WordSignatureFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/../lexicon/WordSignatureFactory.cpp'; fi`

tb2gram-BerkeleyEnglishUMapping.o: ../lexicon/BerkeleyEnglishUMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-BerkeleyEnglishUMapping.o -MD -MP -MF $(DEPDIR)/tb2gram-BerkeleyEnglishUMapping.Tpo -c -o tb2gram-BerkeleyEnglishUMapping.o `test -f '../lexicon/BerkeleyEnglishUMapping.cpp' || echo '$(srcdir)/'`../lexicon/BerkeleyEnglishUMapping.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-BerkeleyEnglishUMapping.Tpo $(DEPDIR)/tb2gram-BerkeleyEnglishUMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../lexicon/BerkeleyEnglishUMapping.cpp' object='tb2gram-BerkeleyEnglishUMapping.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-BerkeleyEnglishUMapping.o `test -f '../lexicon/BerkeleyEnglishUMapping.cpp' || echo '$(srcdir)/'`../lexicon/BerkeleyEnglishUMapping.cpp

tb2gram-BerkeleyEnglishUMapping.obj: ../lexicon/BerkeleyEnglishUMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-BerkeleyEnglishUMapping.obj -MD -MP -MF $(DEPDIR)/tb2gram-BerkeleyEnglishUMapping.Tpo -c -o tb2gram-BerkeleyEnglishUMapping.obj `if test -f '../lexicon/BerkeleyEnglishUMapping.cpp'; then $(CYGPATH_W) '../lexicon/BerkeleyEnglishUMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/../lexicon/BerkeleyEnglishUMapping.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-BerkeleyEnglishUMapping.Tpo $(DEPDIR)/tb2gram-BerkeleyEnglishUMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../lexicon/BerkeleyEnglishUMapping.cpp' object='tb2gram-BerkeleyEnglishUMapping.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-BerkeleyEnglishUMapping.obj `if test -f '../lexicon/BerkeleyEnglishUMapping.cpp'; then $(CYGPATH_W) '../lexicon/BerkeleyEnglishUMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/../lexicon/BerkeleyEnglishUMapping.cpp'; fi`

tb2gram-BaselineFrenchUMapping.o: ../lexicon/BaselineFrenchUMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-BaselineFrenchUMapping.o -MD -MP -MF $(DEPDIR)/tb2gram-BaselineFrenchUMapping.Tpo -c -o tb2gram-BaselineFrenchUMapping.o `test -f '../lexicon/BaselineFrenchUMapping.cpp' || echo '$(srcdir)/'`../lexicon/BaselineFrenchUMapping.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-BaselineFrenchUMapping.Tpo $(DEPDIR)/tb2gram-BaselineFrenchUMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../lexicon/BaselineFrenchUMapping.cpp' object='tb2gram-BaselineFrenchUMapping.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-BaselineFrenchUMapping.o `test -f '../lexicon/BaselineFrenchUMapping.cpp' || echo '$(srcdir)/'`../lexicon/BaselineFrenchUMapping.cpp

tb2gram-BaselineFrenchUMapping.obj: ../lexicon/BaselineFrenchUMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-BaselineFrenchUMapping.obj -MD -MP -MF $(DEPDIR)/tb2gram-BaselineFrenchUMapping.Tpo -c -o tb2gram-BaselineFrenchUMapping.obj `if test -f '../lexicon/BaselineFrenchUMapping.cpp'; then $(CYGPATH_W) '../lexicon/BaselineFrenchUMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/../lexicon/BaselineFrenchUMapping.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-BaselineFrenchUMapping.Tpo $(DEPDIR)/tb2gram-BaselineFrenchUMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../lexicon/BaselineFrenchUMapping.cpp' object='tb2gram-BaselineFrenchUMapping.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-BaselineFrenchUMapping.obj `if test -f '../lexicon/BaselineFrenchUMapping.cpp'; then $(CYGPATH_W) '../lexicon/BaselineFrenchUMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/../lexicon/BaselineFrenchUMapping.cpp'; fi`

tb2gram-EnglishIGMapping.o: ../lexicon/EnglishIGMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-EnglishIGMapping.o -MD -MP -MF $(DEPDIR)/tb2gram-EnglishIGMapping.Tpo -c -o tb2gram-EnglishIGMapping.o `test -f '../lexicon/EnglishIGMapping.cpp' || echo '$(srcdir)/'`../lexicon/EnglishIGMapping.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-EnglishIGMapping.Tpo $(DEPDIR)/tb2gram-EnglishIGMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../lexicon/EnglishIGMapping.cpp' object='tb2gram-EnglishIGMapping.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-EnglishIGMapping.o `test -f '../lexicon/EnglishIGMapping.cpp' || echo '$(srcdir)/'`../lexicon/EnglishIGMapping.cpp

tb2gram-EnglishIGMapping.obj: ../lexicon/EnglishIGMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-EnglishIGMapping.obj -MD -MP -MF $(DEPDIR)/tb2gram-EnglishIGMapping.Tpo -c -o tb2gram-EnglishIGMapping.obj `if test -f '../lexicon/EnglishIGMapping.cpp'; then $(CYGPATH_W) '../lexicon/EnglishIGMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/../lexicon/EnglishIGMapping.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-EnglishIGMapping.Tpo $(DEPDIR)/tb2gram-EnglishIGMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../lexicon/EnglishIGMapping.cpp' object='tb2gram-EnglishIGMapping.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-EnglishIGMapping.obj `if test -f '../lexicon/EnglishIGMapping.cpp'; then $(CYGPATH_W) '../lexicon/EnglishIGMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/../lexicon/EnglishIGMapping.cpp'; fi`

tb2gram-FrenchIGMapping.o: ../lexicon/FrenchIGMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-FrenchIGMapping.o -MD -MP -MF $(DEPDIR)/tb2gram-FrenchIGMapping.Tpo -c -o tb2gram-FrenchIGMapping.o `test -f '../lexicon/FrenchIGMapping.cpp' || echo '$(srcdir)/'`../lexicon/FrenchIGMapping.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-FrenchIGMapping.Tpo $(DEPDIR)/tb2gram-FrenchIGMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../lexicon/FrenchIGMapping.cpp' object='tb2gram-FrenchIGMapping.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-FrenchIGMapping.o `test -f '../lexicon/FrenchIGMapping.cpp' || echo '$(srcdir)/'`../lexicon/FrenchIGMapping.cpp

tb2gram-FrenchIGMapping.obj: ../lexicon/FrenchIGMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-FrenchIGMapping.obj -MD -MP -MF $(DEPDIR)/tb2gram-FrenchIGMapping.Tpo -c -o tb2gram-FrenchIGMapping.obj `if test -f '../lexicon/FrenchIGMapping.cpp'; then $(CYGPATH_W) '../lexicon/FrenchIGMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/../lexicon/FrenchIGMapping.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-FrenchIGMapping.Tpo $(DEPDIR)/tb2gram-FrenchIGMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../lexicon/FrenchIGMapping.cpp' object='tb2gram-FrenchIGMapping.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-FrenchIGMapping.obj `if test -f '../lexicon/FrenchIGMapping.cpp'; then $(CYGPATH_W) '../lexicon/FrenchIGMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/../lexicon/FrenchIGMapping.cpp'; fi`

tb2gram-ItalianIGMapping.o: ../lexicon/ItalianIGMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-ItalianIGMapping.o -MD -MP -MF $(DEPDIR)/tb2gram-ItalianIGMapping.Tpo -c -o tb2gram-ItalianIGMapping.o `test -f '../lexicon/ItalianIGMapping.cpp' || echo '$(srcdir)/'`../lexicon/ItalianIGMapping.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-ItalianIGMapping.Tpo $(DEPDIR)/tb2gram-ItalianIGMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../lexicon/ItalianIGMapping.cpp' object='tb2gram-ItalianIGMapping.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-ItalianIGMapping.o `test -f '../lexicon/ItalianIGMapping.cpp' || echo '$(srcdir)/'`../lexicon/ItalianIGMapping.cpp

tb2gram-ItalianIGMapping.obj: ../lexicon/ItalianIGMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-ItalianIGMapping.obj -MD -MP -MF $(DEPDIR)/tb2gram-ItalianIGMapping.Tpo -c -o tb2gram-ItalianIGMapping.obj `if test -f '../lexicon/ItalianIGMapping.cpp'; then $(CYGPATH_W) '../lexicon/ItalianIGMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/../lexicon/ItalianIGMapping.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-ItalianIGMapping.Tpo $(DEPDIR)/tb2gram-ItalianIGMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../lexicon/ItalianIGMapping.cpp' object='tb2gram-ItalianIGMapping.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-ItalianIGMapping.obj `if test -f '../lexicon/ItalianIGMapping.cpp'; then $(CYGPATH_W) '../lexicon/ItalianIGMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/../lexicon/ItalianIGMapping.cpp'; fi`

tb2gram-ArabicUMapping.o: ../lexicon/ArabicUMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-ArabicUMapping.o -MD -MP -MF $(DEPDIR)/tb2gram-ArabicUMapping.Tpo -c -o tb2gram-ArabicUMapping.o `test -f '../lexicon/ArabicUMapping.cpp' || echo '$(srcdir)/'`../lexicon/ArabicUMapping.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-ArabicUMapping.Tpo $(DEPDIR)/tb2gram-ArabicUMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../lexicon/ArabicUMapping.cpp' object='tb2gram-ArabicUMapping.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-ArabicUMapping.o `test -f '../lexicon/ArabicUMapping.cpp' || echo '$(srcdir)/'`../lexicon/ArabicUMapping.cpp

tb2gram-ArabicUMapping.obj: ../lexicon/ArabicUMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-ArabicUMapping.obj -MD -MP -MF $(DEPDIR)/tb2gram-ArabicUMapping.Tpo -c -o tb2gram-ArabicUMapping.obj `if test -f '../lexicon/ArabicUMapping.cpp'; then $(CYGPATH_W) '../lexicon/ArabicUMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/../lexicon/ArabicUMapping.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-ArabicUMapping.Tpo $(DEPDIR)/tb2gram-ArabicUMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../lexicon/ArabicUMapping.cpp' object='tb2gram-ArabicUMapping.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-ArabicUMapping.obj `if test -f '../lexicon/ArabicUMapping.cpp'; then $(CYGPATH_W) '../lexicon/ArabicUMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/../lexicon/ArabicUMapping.cpp'; fi`

tb2gram-ArabicIGMapping.o: ../lexicon/ArabicIGMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-ArabicIGMapping.o -MD -MP -MF $(DEPDIR)/tb2gram-ArabicIGMapping.Tpo -c -o tb2gram-ArabicIGMapping.o `test -f '../lexicon/ArabicIGMapping.cpp' || echo '$(srcdir)/'`../lexicon/ArabicIGMapping.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-ArabicIGMapping.Tpo $(DEPDIR)/tb2gram-ArabicIGMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../lexicon/ArabicIGMapping.cpp' object='tb2gram-ArabicIGMapping.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-ArabicIGMapping.o `test -f '../lexicon/ArabicIGMapping.cpp' || echo '$(srcdir)/'`../lexicon/ArabicIGMapping.cpp

tb2gram-ArabicIGMapping.obj: ../lexicon/ArabicIGMapping.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-ArabicIGMapping.obj -MD -MP -MF $(DEPDIR)/tb2gram-ArabicIGMapping.Tpo -c -o tb2gram-ArabicIGMapping.obj `if test -f '../lexicon/ArabicIGMapping.cpp'; then $(CYGPATH_W) '../lexicon/ArabicIGMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/../lexicon/ArabicIGMapping.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-ArabicIGMapping.Tpo $(DEPDIR)/tb2gram-ArabicIGMapping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../lexicon/ArabicIGMapping.cpp' object='tb2gram-ArabicIGMapping.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-ArabicIGMapping.obj `if test -f '../lexicon/ArabicIGMapping.cpp'; then $(CYGPATH_W) '../lexicon/ArabicIGMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/../lexicon/ArabicIGMapping.cpp'; fi`

tb2gram-AnnotationInfo.o: ../edges/AnnotationInfo.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-AnnotationInfo.o -MD -MP -MF $(DEPDIR)/tb2gram-AnnotationInfo.Tpo -c -o tb2gram-AnnotationInfo.o `test -f '../edges/AnnotationInfo.cpp' || echo '$(srcdir)/'`../edges/AnnotationInfo.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-AnnotationInfo.Tpo $(DEPDIR)/tb2gram-AnnotationInfo.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../edges/AnnotationInfo.cpp' object='tb2gram-AnnotationInfo.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-AnnotationInfo.o `test -f '../edges/AnnotationInfo.cpp' || echo '$(srcdir)/'`../edges/AnnotationInfo.cpp

tb2gram-AnnotationInfo.obj: ../edges/AnnotationInfo.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-AnnotationInfo.obj -MD -MP -MF $(DEPDIR)/tb2gram-AnnotationInfo.Tpo -c -o tb2gram-AnnotationInfo.obj `if test -f '../edges/AnnotationInfo.cpp'; then $(CYGPATH_W) '../edges/AnnotationInfo.cpp'; else $(CYGPATH_W) '$(srcdir)/../edges/AnnotationInfo.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-AnnotationInfo.Tpo $(DEPDIR)/tb2gram-AnnotationInfo.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../edges/AnnotationInfo.cpp' object='tb2gram-AnnotationInfo.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-AnnotationInfo.obj `if test -f '../edges/AnnotationInfo.cpp'; then $(CYGPATH_W) '../edges/AnnotationInfo.cpp'; else $(CYGPATH_W) '$(srcdir)/../edges/AnnotationInfo.cpp'; fi`

tb2gram-BinaryTrainingTree.o: ../edges/BinaryTrainingTree.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-BinaryTrainingTree.o -MD -MP -MF $(DEPDIR)/tb2gram-BinaryTrainingTree.Tpo -c -o tb2gram-BinaryTrainingTree.o `test -f '../edges/BinaryTrainingTree.cpp' || echo '$(srcdir)/'`../edges/BinaryTrainingTree.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-BinaryTrainingTree.Tpo $(DEPDIR)/tb2gram-BinaryTrainingTree.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../edges/BinaryTrainingTree.cpp' object='tb2gram-BinaryTrainingTree.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-BinaryTrainingTree.o `test -f '../edges/BinaryTrainingTree.cpp' || echo '$(srcdir)/'`../edges/BinaryTrainingTree.cpp

tb2gram-BinaryTrainingTree.obj: ../edges/BinaryTrainingTree.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-BinaryTrainingTree.obj -MD -MP -MF $(DEPDIR)/tb2gram-BinaryTrainingTree.Tpo -c -o tb2gram-BinaryTrainingTree.obj `if test -f '../edges/BinaryTrainingTree.cpp'; then $(CYGPATH_W) '../edges/BinaryTrainingTree.cpp'; else $(CYGPATH_W) '$(srcdir)/../edges/BinaryTrainingTree.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-BinaryTrainingTree.Tpo $(DEPDIR)/tb2gram-BinaryTrainingTree.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../edges/BinaryTrainingTree.cpp' object='tb2gram-BinaryTrainingTree.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-BinaryTrainingTree.obj `if test -f '../edges/BinaryTrainingTree.cpp'; then $(CYGPATH_W) '../edges/BinaryTrainingTree.cpp'; else $(CYGPATH_W) '$(srcdir)/../edges/BinaryTrainingTree.cpp'; fi`

tb2gram-TrainingNode.o: ../edges/TrainingNode.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-TrainingNode.o -MD -MP -MF $(DEPDIR)/tb2gram-TrainingNode.Tpo -c -o tb2gram-TrainingNode.o `test -f '../edges/TrainingNode.cpp' || echo '$(srcdir)/'`../edges/TrainingNode.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-TrainingNode.Tpo $(DEPDIR)/tb2gram-TrainingNode.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../edges/TrainingNode.cpp' object='tb2gram-TrainingNode.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-TrainingNode.o `test -f '../edges/TrainingNode.cpp' || echo '$(srcdir)/'`../edges/TrainingNode.cpp

tb2gram-TrainingNode.obj: ../edges/TrainingNode.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-TrainingNode.obj -MD -MP -MF $(DEPDIR)/tb2gram-TrainingNode.Tpo -c -o tb2gram-TrainingNode.obj `if test -f '../edges/TrainingNode.cpp'; then $(CYGPATH_W) '../edges/TrainingNode.cpp'; else $(CYGPATH_W) '$(srcdir)/../edges/TrainingNode.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-TrainingNode.Tpo $(DEPDIR)/tb2gram-TrainingNode.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../edges/TrainingNode.cpp' object='tb2gram-TrainingNode.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-TrainingNode.obj `if test -f '../edges/TrainingNode.cpp'; then $(CYGPATH_W) '../edges/TrainingNode.cpp'; else $(CYGPATH_W) '$(srcdir)/../edges/TrainingNode.cpp'; fi`

tb2gram-TrainingGrammar.o: TrainingGrammar.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-TrainingGrammar.o -MD -MP -MF $(DEPDIR)/tb2gram-TrainingGrammar.Tpo -c -o tb2gram-TrainingGrammar.o `test -f 'TrainingGrammar.cpp' || echo '$(srcdir)/'`TrainingGrammar.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-TrainingGrammar.Tpo $(DEPDIR)/tb2gram-TrainingGrammar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TrainingGrammar.cpp' object='tb2gram-TrainingGrammar.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-TrainingGrammar.o `test -f 'TrainingGrammar.cpp' || echo '$(srcdir)/'`TrainingGrammar.cpp

tb2gram-TrainingGrammar.obj: TrainingGrammar.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -MT tb2gram-TrainingGrammar.obj -MD -MP -MF $(DEPDIR)/tb2gram-TrainingGrammar.Tpo -c -o tb2gram-TrainingGrammar.obj `if test -f 'TrainingGrammar.cpp'; then $(CYGPATH_W) 'TrainingGrammar.cpp'; else $(CYGPATH_W) '$(srcdir)/TrainingGrammar.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tb2gram-TrainingGrammar.Tpo $(DEPDIR)/tb2gram-TrainingGrammar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TrainingGrammar.cpp' object='tb2gram-TrainingGrammar.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tb2gram_CXXFLAGS) $(CXXFLAGS) -c -o tb2gram-TrainingGrammar.obj `if test -f 'TrainingGrammar.cpp'; then $(CYGPATH_W) 'TrainingGrammar.cpp'; else $(CYGPATH_W) '$(srcdir)/TrainingGrammar.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

cscopelist:  $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS) $(LISP)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool cscopelist ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
