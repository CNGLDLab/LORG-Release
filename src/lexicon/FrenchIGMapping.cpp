#include "FrenchIGMapping.h"

#include <vector>

namespace {
bool ends_with(const std::string& word, const std::string& suffix)
{
    //    std::cout << "is " << word << " ending with " << suffix << " ? " ;
    bool result =
            (word.length() >= suffix.length()) &&
            (suffix == word.substr(word.length() - suffix.length(), suffix.length()));
    
    //    std::cout << (result ? "True" : "False") << std::endl;
    return result;
}
}

#define ONEMASK ((size_t)(-1) / 0xFF)

static size_t utf8_length(const char * _s)
{
    const char * s;
    size_t count = 0;
    size_t u;
    unsigned char b;

    /* Handle any initial misaligned bytes. */
    for (s = _s; (uintptr_t)(s) & (sizeof(size_t) - 1); s++) {
        b = *s;

        /* Exit if we hit a zero byte. */
        if (b == '\0')
            goto done;

        /* Is this byte NOT the first byte of a character? */
        count += (b >> 7) & ((~b) >> 6);
    }

    /* Handle complete blocks. */
    for (; ; s += sizeof(size_t)) {
        /* Prefetch 256 bytes ahead. */
        __builtin_prefetch(&s[256], 0, 0);

        /* Grab 4 or 8 bytes of UTF-8 data. */
        u = *(size_t *)(s);

        /* Exit the loop if there are any zero bytes. */
        if ((u - ONEMASK) & (~u) & (ONEMASK * 0x80))
            break;

        /* Count bytes which are NOT the first byte of a character. */
        u = ((u & (ONEMASK * 0x80)) >> 7) & ((~u) >> 6);
        count += (u * ONEMASK) >> ((sizeof(size_t) - 1) * 8);
    }

    /* Take care of any left-over bytes. */
    for (; ; s++) {
        b = *s;

        /* Exit if we hit a zero byte. */
        if (b == '\0')
            break;

        /* Is this byte NOT the first byte of a character? */
        count += (b >> 7) & ((~b) >> 6);
    }

done:
    return ((s - _s) - count);
}

std::string FrenchIGMapping::get_unknown_mapping(const std::string& word, unsigned position) const
{
    std::string word_class(SymbolTable::unknown_string);
    std::string word_lower_case=to_lower_case(word);
    
    bool hasDigit = word.find_first_of("0123456789") != std::string::npos;
    bool hasDash =  word.find_first_of("-") != std::string::npos;
    bool hasLowerCase = false;
    int upperCaseCount=0;
    
    //std::cout << "this string contains a digit, see " << word << std::endl;
    //std::cout << "this string contains a dash, see " << word << std::endl;

    for(std::string::const_iterator c = word.begin(); c != word.end(); c++){

        if (is_upper_case_letter(*c)){
            //Berkeley parser puts hasLower = true here - an error?
            ++upperCaseCount;
        }else if  (is_lower_case_letter(*c)){
            hasLowerCase = true;
        }
    }
    
    //	if (upperCaseCount > 0){
    //	std::cout << "original word is " << word << " lower case version is " << word_lower_case << std::endl;
    //}
    //if first character is upper case and it is the first word in sentences and the remaining characters are lower case
    
    SymbolTable& sym_tab_word = SymbolTable::instance_word();
    
    //deal with capitalisation
    if ( is_upper_case_letter(*(word.begin()))){
        if (position==0 && upperCaseCount==1){
            word_class.append("-INITC");
            if (sym_tab_word.token_exists(word_lower_case)){
                word_class.append("-KNOWNLC");
            }
        }else {
            word_class.append("-CAPS");
        }
        //missing an else if here - basically, I'm not dealing with non-letters
    }else if (hasLowerCase){
        word_class.append("-LC");
    }
    
    if (hasDigit){
        word_class.append("-NUM");
    }
    if (hasDash){
        word_class.append("-DASH");
    }
    
    unsigned word_length = utf8_length(word_lower_case.c_str());

    if (word_length >= 5 && !hasDash && !(hasDigit && upperCaseCount > 0)) {
        // don't do for very short words;

        /*IG SPMRL */
        // static std::string ig_sufs[] = { //"ner", "cé", "né", "core", "ont", "ire",
        // 				       //"ble", "lle", "ance", "tent", "voir", "oir",
        // 				       //"ront", "nce", "ce", "ui", "ssi", "ussi",
        // 				       //"uer", "sant", "tait", "dre",
        // 				       "lles", "u'",
        // 				       "elle", "rs", "ndre", "is", "'",
        // 				       "l", "-", "sé", "tant", "ns", "vait",
        // 				       "ées", "res", "ra", "ts", "té", "rer",
        // 				       "ions", "ons", "les", "re", "és", "ser",
        // 				       "si", "a", "ue", "i", "rait", "que",
        // 				       "e", "_que", "le", "ter", "ée", "ir",
        // 				       "n", "es", "ion",
        // 				       "it", "ait", "s", "é",
        // 				       "er", "nt", "r", "t"};
        //      	static std::vector<std::string> suffixes(ig_sufs,ig_sufs+48);

        // /*orginal IG list downto 0.01*/
        // static std::string ig_sufs[] = {
        // 	/* 0.162535        12 */ "t",
        // 	/* 0.148696        43 */ "r",
        // 	/* 0.125936        58 */ "nt",
        // 	/* 0.123423        44 */ "er",
        // 	/* 0.08427         59 */ "ent",
        // 	/* 0.077961        37 */ "é",
        // 	/* 0.076455       383 */ "ant",
        // 	/* 0.076172        31 */ "s",
        // 	/* 0.063394        14 */ "ait",
        // 	/* 0.060515        13 */ "it",
        // 	/* 0.052768        72 */ "ion",
        // 	/* 0.052158        32 */ "es",
        // 	/* 0.048225        71 */ "on",
        // 	/* 0.037862        70 */ "n",
        // 	/* 0.029446        85 */ "ir",
        // 	/* 0.028527       384 */ "ée",
        // 	/* 0.026306       680 */ "ter",
        // 	/* 0.024998        82 PREFIXc",*/
        // 	/* 0.023793       182 */ "le",
        // 	/* 0.022857       132 */ "que",
        // 	/* 0.022649         1 */ "e",
        // 	/* 0.022053        15 PREFIXa",*/
        // 	/* 0.021619        18 */ "i",
        // 	/* 0.020929       179 PREFIXcel",*/
        // 	/* 0.020918       311 PREFIXM",*/
        // 	/* 0.02074        131 */ "ue",
        // 	/* 0.020494       207 PREFIXr",*/
        // 	/* 0.019995       173 PREFIXA",*/
        // 	/* 0.019822        35 PREFIXen",*/
        // 	/* 0.019598       480 PREFIXB",*/
        // 	/* 0.019097        19 */ "si",
        // 	/* 0.019095       178 PREFIXce",*/
        // 	/* 0.019017       333 PREFIXen_",*/
        // 	/* 0.018822       560 */ "ser",
        // 	/* 0.018791       118 */ "és",
        // 	/* 0.018513         7 */ "re",
        // 	/* 0.018217       276 */ "les",
        // 	/* 0.018131       114 PREFIXP",*/
        // 	/* 0.01782        504 */ "a",
        // 	/* 0.017755       711 PREFIXC",*/
        // 	/* 0.017472       106 PREFIXE",*/
        // 	/* 0.017161       275 */ "ons",
        // 	/* 0.016294        25 PREFIXF",*/
        // 	/* 0.016032       664 */ "rer",
        // 	/* 0.015619        34 PREFIXe",*/
        // 	/* 0.015565        67 PREFIXp",*/
        // 	/* 0.01527        208 PREFIXre",*/
        // 	/* 0.01522         21 PREFIXau",*/
        // 	/* 0.015142        77 */ "té",
        // 	/* 0.015066      1093 PREFIXS",*/
        // 	/* 0.014927       215 */ "ts",
        // 	/* 0.014852       103 */ "res",
        // 	/* 0.014745       505 */ "ra",
        // 	/* 0.014477        55 */ "ées",
        // 	/* 0.014182       122 */ "ns",
        // 	/* 0.013944       797 */ "sé",
        // 	/* 0.013178       140 */ "l",
        // 	/* 0.012804       806 */ "quote",
        // 	/* 0.012637       532 PREFIXL",*/
        // 	/* 0.012296        88 */ "rs",
        // 	/* 0.012262        26 PREFIXFr",*/
        // 	/* 0.012191        62 */ "is",
        // 	/* 0.012176       807 */ "uquote",
        // 	/* 0.012176       808 */ "ququote",
        // 	/* 0.012157       336 PREFIX-",*/
        // 	/* 0.012064        40 PREFIXm",*/
        // 	/* 0.01202         16 PREFIXav",*/
        // 	/* 0.011897        27 PREFIXFra",*/
        // 	/* 0.01189        363 */ "dre",
        // 	/* 0.011564       232 PREFIXco",*/
        // 	/* 0.011512        92 PREFIXn",*/
        // 	/* 0.01119         17 PREFIXava",*/
        // 	/* 0.011145        30 PREFIXéta",*/
        // 	/* 0.011126      1104 */ "uer",
        // 	/* 0.011044        20 */ "ssi",
        // 	/* 0.011025       814 PREFIXà_",*/
        // 	/* 0.011025       813 PREFIXà",*/
        // 	/* 0.01067          9 PREFIXd",*/
        // 	/* 0.010654        22 PREFIXaus",*/
        // 	/* 0.010593       176 */ "ui",
        // 	/* 0.010475        23 */ "ce",
        // 	/* 0.010407        24 */ "nce",
        // 	/* 0.01034        249 PREFIXi",*/
        // 	/* 0.010314        86 */ "oir" /*,*/
        // 	/* 0.010144       117 PREFIXdev",*/
        // };

        // static std::vector<std::string> suffixes(ig_sufs,ig_sufs+50);



        /* IG 0.01 suffixes reordered*/
        static std::string ig_sufs[] = {
            /* 0.052768        72 */ "ion",
            /* 0.076455       383 */ "ant",
            /* 0.08427         59 */ "ent",
            /* 0.063394        14 */ "ait",
            /* 0.026306       680 */ "ter",
            /* 0.022857       132 */ "que",
            /* 0.018822       560 */ "ser",
            /* 0.018217       276 */ "les",
            /* 0.017161       275 */ "ons",
            /* 0.016032       664 */ "rer",
            /* 0.014852       103 */ "res",
            /* 0.014477        55 */ "ées",
            /* 0.01189        363 */ "dre",
            /* 0.011126      1104 */ "uer",
            /* 0.011044        20 */ "ssi",
            /* 0.010407        24 */ "nce",
            /* 0.010314        86 */ "oir",
            /* 0.060515        13 */ "it",
            /* 0.125936        58 */ "nt",
            /* 0.123423        44 */ "er",
            /* 0.052158        32 */ "es",
            /* 0.048225        71 */ "on",
            /* 0.029446        85 */ "ir",
            /* 0.028527       384 */ "ée",
            /* 0.023793       182 */ "le",
            /* 0.02074        131 */ "ue",
            /* 0.019097        19 */ "si",
            /* 0.018791       118 */ "és",
            /* 0.018513         7 */ "re",
            /* 0.015142        77 */ "té",
            /* 0.014927       215 */ "ts",
            /* 0.014745       505 */ "ra",
            /* 0.014182       122 */ "ns",
            /* 0.013944       797 */ "sé",
            /* 0.012296        88 */ "rs",
            /* 0.012191        62 */ "is",
            /* 0.012176       808 */ "qu'",
            /* 0.010593       176 */ "ui",
            /* 0.010475        23 */ "ce",
            /* 0.162535        12 */ "t",
            /* 0.148696        43 */ "r",
            /* 0.077961        37 */ "é",
            /* 0.076172        31 */ "s",
            /* 0.037862        70 */ "n",
            /* 0.022649         1 */ "e",
            /* 0.021619        18 */ "i",
            /* 0.01782        504 */ "a",
            /* 0.013178       140 */ "l",
            /* 0.012804       806 */ "'",
            /* 0.012176       807 */ "u'"
        };
        static std::vector<std::string> suffixes(ig_sufs,ig_sufs+50);

        // /* IG 0.02 suffixes reordered*/
        // static std::string ig_sufs[] = {
        // 	/* 0.08427         59 */ "ent",
        // 	/* 0.076455       383 */ "ant",
        // 	/* 0.063394        14 */ "ait",
        // 	/* 0.052768        72 */ "ion",
        // 	/* 0.026306       680 */ "ter",
        // 	/* 0.022857       132 */ "que",
        // 	/* 0.125936        58 */ "nt",
        // 	/* 0.123423        44 */ "er",
        // 	/* 0.060515        13 */ "it",
        // 	/* 0.052158        32 */ "es",
        // 	/* 0.048225        71 */ "on",
        // 	/* 0.029446        85 */ "ir",
        // 	/* 0.028527       384 */ "ée",
        // 	/* 0.023793       182 */ "le",
        // 	/* 0.02074        131 */ "ue",
        // 	/* 0.162535        12 */ "t",
        // 	/* 0.148696        43 */ "r",
        // 	/* 0.077961        37 */ "é",
        // 	/* 0.076172        31 */ "s",
        // 	/* 0.037862        70 */ "n",
        // 	/* 0.022649         1 */ "e",
        // 	/* 0.021619        18 */ "i"
        // };
        // static std::vector<std::string> suffixes(ig_sufs,ig_sufs+22);



        // /* IG 0.03 suffixes reordered*/
        // static std::string ig_sufs[] = {
        // 	/* 0.08427         59 */ "ent",
        // 	/* 0.076455       383 */ "ant",
        // 	/* 0.063394        14 */ "ait",
        // 	/* 0.052768        72 */ "ion",
        // 	/* 0.125936        58 */ "nt",
        // 	/* 0.123423        44 */ "er",
        // 	/* 0.060515        13 */ "it",
        // 	/* 0.052158        32 */ "es",
        // 	/* 0.048225        71 */ "on",
        // 	/* 0.162535        12 */ "t",
        // 	/* 0.148696        43 */ "r",
        // 	/* 0.077961        37 */ "é",
        // 	/* 0.076172        31 */ "s",
        // 	/* 0.037862        70 */ "n"
        // };
        // static std::vector<std::string> suffixes(ig_sufs,ig_sufs+14);


        // /* IG 0.05 suffixes reordered*/
        // static std::string ig_sufs[] = {
        // 	/* 0.08427         59 */ "ent",
        // 	/* 0.076455       383 */ "ant",
        // 	/* 0.063394        14 */ "ait",
        // 	/* 0.052768        72 */ "ion",
        // 	/* 0.125936        58 */ "nt",
        // 	/* 0.123423        44 */ "er",
        // 	/* 0.060515        13 */ "it",
        // 	/* 0.052158        32 */ "es",
        // 	/* 0.162535        12 */ "t",
        // 	/* 0.148696        43 */ "r",
        // 	/* 0.077961        37 */ "é",
        // 	/* 0.076172        31 */ "s",
        // };
        // static std::vector<std::string> suffixes(ig_sufs,ig_sufs+12);

        // /* IG 0.1 suffixes reordered*/
        // static std::string ig_sufs[] = {
        // 	/* 0.125936        58 */ "nt",
        // 	/* 0.123423        44 */ "er",
        // 	/* 0.162535        12 */ "t",
        // 	/* 0.148696        43 */ "r",
        // };
        // static std::vector<std::string> suffixes(ig_sufs,ig_sufs+4);





        // static std::string ig_sufs[] = {
        // 	/* 0.9526      1173 */ "-",
        // 	/* 0.7927      1174 */ "i-",
        // 	/* 0.7563      1396 */ "o-",
        // 	/* 0.7522      1397 */ "ro-",
        // 	/* 0.7439       335 */ "-il",
        // 	/* 0.7436      1175 */ "si-",
        // 	/* 0.7297      1303 */ "ce-",
        // 	/* 0.6958      2101 */ "ra-",
        // 	/* 0.6958      2100 */ "a-",
        // 	/* 0.6851      1302 */ "e-",
        // 	/* 0.655       2239 */ "ni-",
        // 	/* 0.6536       808 */ "qu'",
        // 	/* 0.6536       807 */ "u'",
        // 	/* 0.6522       806 */ "'",
        // 	/* 0.6492       966 */ "-on",
        // 	/* 0.6414      1583 */ "mi-",
        // 	/* 0.6348       177 */ "lui",
        // 	/* 0.5736       383 */ "ant",
        // 	/* 0.5723      1137 */ "_ci",
        // 	/* 0.5608       528 */ "cun",
        // 	/* 0.5343      2688 */ "_on",
        // 	/* 0.5053      1058 */ "_si",
        // 	/* 0.4985      1558 */ "uoi",
        // 	/* 0.4695      1859 */ "s'",
        // 	/* 0.4695      1860 */ "_s'",
        // 	/* 0.4604        14 */ "ait",
        // 	/* 0.4576       680 */ "ter",
        // 	/* 0.4565        44 */ "er",
        // 	/* 0.4543       560 */ "ser",
        // 	/* 0.4404       664 */ "rer",
        // 	/* 0.4291      1104 */ "uer",
        // 	/* 0.4103        43 */ "r",
        // 	/* 0.3934      2608 */ "où",
        // 	/* 0.3934      2607 */ "ù",
        // 	/* 0.3934      2609 */ "_où",
        // 	/* 0.3901       949 */ "cer",
        // 	/* 0.3847       176 */ "ui",
        // 	/* 0.3817      1136 */ "ci",
        // 	/* 0.3737        19 */ "si",
        // 	/* 0.3639       188 */ "cé",
        // 	/* 0.3627       137 */ "nsi",
        // 	/* 0.3619      1205 */ "rir",
        // 	/* 0.3608       722 */ "ner",
        // 	/* 0.3603       189 */ "ncé",
        // 	/* 0.3598      1002 */ "tir",
        // 	/* 0.3562        85 */ "ir",
        // 	/* 0.3545        20 */ "ssi",
        // 	/* 0.3472        13 */ "it",
        // 	/* 0.3445       180 */ "hui",
        // 	/* 0.3424      1267 */ "lir",
        // 	/* 0.3422       601 */ "né",
        // 	/* 0.3371      1358 */ "era",
        // 	/* 0.3318      1001 */ "ler",
        // 	/* 0.3303       797 */ "sé",
        // 	/* 0.3294       899 */ "isé",
        // 	/* 0.3284      1059 */ "der",
        // 	/* 0.3228       394 */ "peu",
        // 	/* 0.3204       505 */ "ra",
        // 	/* 0.319        602 */ "gné",
        // 	/* 0.3157       954 */ "éer",
        // 	/* 0.3129       531 */ "aré",
        // 	/* 0.3115       590 */ "ver",
        // 	/* 0.3093       720 */ "tôt",
        // 	/* 0.3087       856 */ "tré",
        // 	/* 0.3066      2592 */ "hir",
        // 	/* 0.3058       581 */ "y",
        // 	/* 0.3039       862 */ "aît",
        // 	/* 0.3021      1164 */ "uvé",
        // 	/* 0.2999      1224 */ "usé",
        // 	/* 0.2992      1107 */ "nué",
        // 	/* 0.2978       234 */ "out",
        // 	/* 0.2977       472 */ "idé",
        // 	/* 0.2971       363 */ "dre",
        // 	/* 0.2967        53 */ "ore",
        // 	/* 0.2964       310 */ "hel",
        // 	/* 0.296        896 */ "clu",
        // 	/* 0.2955      1035 */ "iné",
        // 	/* 0.2949      1413 */ "bir",
        // 	/* 0.2943       943 */ "mé",
        // 	/* 0.2941      1018 */ "agé",
        // 	/* 0.2932       908 */ "gé",
        // 	/* 0.2929       133 */ "ope",
        // 	/* 0.2919       637 */ "ult",
        // 	/* 0.2914       225 */ "ont",
        // 	/* 0.2913      1194 */ "ême",
        // 	/* 0.2912      1133 */ "rmé",
        // 	/* 0.2911       988 */ "dra",
        // 	/* 0.2907      2446 */ "gir",
        // 	/* 0.2907      1760 */ "xer",
        // 	/* 0.2891      1352 */ "mer",
        // 	/* 0.289         58 */ "nt",
        // 	/* 0.2889       577 */ "nk",
        // 	/* 0.2879      2760 */ "000",
        // 	/* 0.2879      1938 */ "lué",
        // 	/* 0.2871       530 */ "ré",
        // 	/* 0.287        578 */ "ank",
        // 	/* 0.2866       895 */ "lu",
        // 	/* 0.286       2759 */ "00",
        // 	/* 0.286       2087 */ "vir",
        // 	/* 0.2858       803 */ "lié",
        // 	/* 0.2853      1102 */ "per",
        // 	/* 0.285       1020 */ "pté",
        // 	/* 0.2847      1557 */ "cté",
        // 	/* 0.2841       471 */ "dé",
        // 	/* 0.2838       636 */ "lt",
        // 	/* 0.2834       834 */ "nné",
        // 	/* 0.2829       944 */ "mmé",
        // 	/* 0.2823       527 */ "un",
        // 	/* 0.2821      2209 */ "las",
        // 	/* 0.2813      1484 */ "bué",
        // 	/* 0.2813      1162 */ "isi",
        // 	/* 0.2792      1654 */ "ry",
        // 	/* 0.2792      1178 */ "rg",
        // 	/* 0.279         86 */ "oir",
        // 	/* 0.2781       724 */ "vra",
        // 	/* 0.2769      1261 */ "fie",
        // 	/* 0.2763       583 */ "voy",
        // 	/* 0.2761        37 */ "é",
        // 	/* 0.2754      1637 */ "her",
        // 	/* 0.2753      1188 */ "rdé",
        // 	/* 0.2744      1159 */ "com",
        // 	/* 0.2744      1179 */ "urg",
        // 	/* 0.274       1893 */ "elé",
        // 	/* 0.2729       732 */ "ué",
        // 	/* 0.2723      1519 */ "ulé",
        // 	/* 0.2719        12 */ "t",
        // 	/* 0.2715      1254 */ "sûr",
        // 	/* 0.2715      1253 */ "ûr",
        // 	/* 0.2714      1297 */ "acé",
        // 	/* 0.2704      2390 */ "bé",
        // 	/* 0.2698      1100 */ "gée",
        // 	/* 0.2697      1470 */ "uée",
        // 	/* 0.2697      1444 */ "dée",
        // 	/* 0.2693       445 */ "fin",
        // 	/* 0.2691       428 */ "lus",
        // 	/* 0.269       2893 */ "_là",
        // 	/* 0.2682      1700 */ "co",
        // 	/* 0.2675      1896 */ "nn",
        // 	/* 0.267        598 */ "sez",
        // 	/* 0.267       1616 */ "xée",
        // 	/* 0.267       1402 */ "ulu",
        // 	/* 0.2668      1475 */ "asi",
        // 	/* 0.2667       787 */ "EA",
        // 	/* 0.2659       788 */ "SEA",
        // 	/* 0.2659      1897 */ "ann",
        // 	/* 0.2659      1139 */ "rn",
        // 	/* 0.2653       705 */ "évu",
        // 	/* 0.2652      2198 */ "tté",
        // 	/* 0.2651      1989 */ "ey",
        // 	/* 0.2645       748 */ "rdu",
        // 	/* 0.2643       842 */ "SEE",
        // 	/* 0.2643       841 */ "EE",
        // 	/* 0.264       2184 */ "vo",
        // 	/* 0.2632      1528 */ "élé",
        // 	/* 0.2631       358 */ "q",
        // 	/* 0.2624       359 */ "nq",
        // 	/* 0.2624       360 */ "inq",
        // 	/* 0.2612       477 */ "nir",
        // 	/* 0.2612      1082 */ "ndu",
        // 	/* 0.2609      1368 */ "aru",
        // 	/* 0.2605       860 */ "rra",
        // 	/* 0.2599      1140 */ "ern",
        // 	/* 0.2593       576 */ "k",
        // 	/* 0.259       1772 */ "ick",
        // 	/* 0.259       1997 */ "uni",
        // 	/* 0.259       2313 */ "até",
        // 	/* 0.259       2391 */ "mbé",
        // 	/* 0.2588      1236 */ "osé",
        // 	/* 0.258       1364 */ "ell",
        // 	/* 0.2574      1650 */ "éjà",
        // 	/* 0.2574      1649 */ "jà",
        // 	/* 0.2572      1212 */ "ené",
        // 	/* 0.2571      1480 */ "uré",
        // 	/* 0.257       1068 */ "yo",
        // 	/* 0.257       1755 */ "nia",
        // 	/* 0.2568       273 */ "mme",
        // 	/* 0.2566      1788 */ "llu",
        // 	/* 0.2566      1913 */ "uti",
        // 	/* 0.2566      1801 */ "mné",
        // 	/* 0.256       1008 */ "Uni",
        // 	/* 0.256       1069 */ "kyo",
        // 	/* 0.256       1471 */ "gen",
        // 	/* 0.255       1031 */ "ork",
        // 	/* 0.2539      1115 */ "ich",
        // 	/* 0.2539      2064 */ "ria",
        // 	/* 0.2538      1794 */ "sté",
        // 	/* 0.2533       861 */ "ît",
        // 	/* 0.253       1422 */ "lé",
        // 	/* 0.2527      1629 */ "cy",
        // 	/* 0.2527      1792 */ "mas",
        // 	/* 0.2526       384 */ "ée",
        // 	/* 0.2521       105 */ "nis",
        // 	/* 0.2518      1022 */ "ht",
        // 	/* 0.2517       909 */ "rgé",
        // 	/* 0.2516      1124 */ "nri",
        // 	/* 0.2515       741 */ "nnu",
        // 	/* 0.2509      1600 */ "cié",
        // 	/* 0.2508      1023 */ "cht",
        // 	/* 0.2504      1990 */ "ney",
        // 	/* 0.2504      1313 */ "rc",
        // 	/* 0.2502       371 */ "pas",
        // 	/* 0.2495      2248 */ "rcé",
        // 	/* 0.2491      2434 */ "ld",
        // 	/* 0.2491      1360 */ "ivi",
        // 	/* 0.249       1643 */ "iée",
        // 	/* 0.249        786 */ "A",
        // 	/* 0.2486       892 */ "ong",
        // 	/* 0.2484      2163 */ "nsé",
        // 	/* 0.2484      2246 */ "oué",
        // 	/* 0.2478      1535 */ "Sud",
        // 	/* 0.2478      1497 */ "oni",
        // 	/* 0.2478      1237 */ "kin",
        // 	/* 0.2478      1802 */ "ués",
        // 	/* 0.2476      1465 */ "pé",
        // 	/* 0.2472      1830 */ "ilà",
        // 	/* 0.2472       504 */ "a",
        // 	/* 0.2464      1371 */ "e_2",
        // 	/* 0.2464      1872 */ "dy",
        // 	/* 0.2464      1314 */ "erc",
        // 	/* 0.245       1344 */ "roc",
        // 	/* 0.245       1307 */ "wan",
        // 	/* 0.245       1920 */ "ith",
        // 	/* 0.2439       937 */ "ada",
        // 	/* 0.2438       582 */ "oy",
        // 	/* 0.2437      1504 */ "cas",
        // 	/* 0.2435      2263 */ "nz",
        // 	/* 0.2435      1630 */ "rcy",
        // 	/* 0.2435      1457 */ "eet",
        // 	/* 0.2435      1539 */ "uez",
        // 	/* 0.2424      2086 */ "bue",
        // 	/* 0.2423       837 */ "tue",
        // 	/* 0.2422      2547 */ "yée",
        // 	/* 0.2419      1380 */ "mut",
        // 	/* 0.2419      1423 */ "tlé",
        // 	/* 0.2418      1520 */ "éré",
        // 	/* 0.2414        59 */ "ent",
        // 	/* 0.2409       890 */ "end",
        // 	/* 0.2408       355 */ "oup",
        // 	/* 0.2407      1434 */ "cré",
        // 	/* 0.2403      3166 */ "ad",
        // 	/* 0.2403      1495 */ "Bas",
        // 	/* 0.2403      1478 */ "eot",
        // 	/* 0.2403      1702 */ "yan",
        // 	/* 0.2403      1655 */ "bry",
        // 	/* 0.2395      1811 */ "nit",
        // 	/* 0.2386       747 */ "du",
        // 	/* 0.2385      2202 */ "bin",
        // 	/* 0.2385      2655 */ "nco",
        // 	/* 0.2385      1577 */ "eff",
        // 	/* 0.2381      1158 */ "om",
        // 	/* 0.2378       354 */ "up",
        // 	/* 0.2377      1273 */ "tué",
        // 	/* 0.2372       798 */ "ssé",
        // 	/* 0.2368      1900 */ "oge",
        // 	/* 0.2367      1749 */ "ok",
        // 	/* 0.2367      3027 */ "ny",
        // 	/* 0.2367      1797 */ "ems",
        // 	/* 0.2367      2355 */ "éry",
        // 	/* 0.2367      1567 */ "ntt",
        // 	/* 0.2367      1639 */ "eït",
        // 	/* 0.2367      1638 */ "ït",
        // 	/* 0.2367      1701 */ "ico",
        // 	/* 0.2367      1971 */ "nas",
        // 	/* 0.236       1780 */ "fié",
        // 	/* 0.236       1367 */ "ru",
        // 	/* 0.2359      1111 */ "ian",
        // 	/* 0.2357      1359 */ "vi",
        // 	/* 0.2348      1466 */ "ppé",
        // 	/* 0.2347      1705 */ "dai",
        // 	/* 0.2347      1782 */ "maz",
        // 	/* 0.2347      1775 */ "Luc",
        // 	/* 0.2347      2507 */ "ano",
        // 	/* 0.2347      1361 */ "nés",
        // 	/* 0.2345      2247 */ "lis",
        // 	/* 0.234        252 */ "ors",
        // 	/* 0.2333       999 */ "imé",
        // 	/* 0.2329       936 */ "da",
        // 	/* 0.2325      3161 */ "IS",
        // 	/* 0.2325      2157 */ "oud",
        // 	/* 0.2325      2264 */ "enz",
        // 	/* 0.2325      1804 */ "ili",
        // 	/* 0.2325      1736 */ "aal",
        // 	/* 0.2325      1948 */ "rlo",
        // 	/* 0.2325      1750 */ "bok",
        // 	/* 0.2325      2910 */ "hom",
        // 	/* 0.2325      2783 */ "rry",
        // 	/* 0.2325      2544 */ "lor",
        // 	/* 0.2325      2774 */ "H",
        // 	/* 0.2325      2360 */ "ph",
        // 	/* 0.2325      2461 */ "ost",
        // 	/* 0.2325      1865 */ "CSF",
        // 	/* 0.2325      1873 */ "ady",
        // 	/* 0.2325      1864 */ "SF",
        // 	/* 0.2321      2161 */ "cés",
        // 	/* 0.2311      2415 */ "O",
        // 	/* 0.231       1587 */ "éés",
        // 	/* 0.2294      2758 */ "0",
        // 	/* 0.2286      2506 */ "no",
        // 	/* 0.2286      1153 */ "sée",
        // 	/* 0.2286      2079 */ "igé",
        // 	/* 0.2282      2142 */ "rsé",
        // 	/* 0.2267       767 */ "das",
        // 	/* 0.2254       704 */ "vu",
        // 	/* 0.2247      1576 */ "ff",
        // 	/* 0.2247      1919 */ "th",
        // 	/* 0.2241      1508 */ "bli",
        // 	/* 0.2238      1534 */ "ud",
        // 	/* 0.2237      1754 */ "ia",
        // 	/* 0.2231      1878 */ "éée",
        // 	/* 0.223       2739 */ "dir",
        // 	/* 0.2228      2476 */ "ber",
        // 	/* 0.2226      1908 */ "ev",
        // 	/* 0.2224      1924 */ "due",
        // 	/* 0.2223      2599 */ "çue",
        // 	/* 0.2222      1877 */ "gés",
        // 	/* 0.2221      2018 */ "oré",
        // 	/* 0.2217      1156 */ "yer",
        // 	/* 0.2216       733 */ "qué",
        // 	/* 0.2214       113 */ "ris",
        // 	/* 0.2203      1337 */ "bie",
        // 	/* 0.2202      2367 */ "ay",
        // 	/* 0.2193       506 */ "tra",
        // 	/* 0.2184      2414 */ "ira",
        // 	/* 0.2179      1566 */ "tt",
        // 	/* 0.2179      2884 */ "SA",
        // 	/* 0.2171      1113 */ "h",
        // 	/* 0.2161       340 */ "and",
        // 	/* 0.2161      1657 */ "llé",
        // 	/* 0.216       1838 */ "mez",
        // 	/* 0.2154      2200 */ "ss",
        // 	/* 0.2154      2670 */ "em",
        // 	/* 0.2154      2885 */ "_SA",
        // 	/* 0.2142      1936 */ "cu",
        // 	/* 0.2142      1659 */ "cru",
        // 	/* 0.2139      1445 */ "ngé",
        // 	/* 0.2134      1646 */ "ato",
        // 	/* 0.213       1518 */ "cée",
        // 	/* 0.2128       727 */ "uel",
        // 	/* 0.2127      1781 */ "az",
        // 	/* 0.2127      2353 */ "dam",
        // 	/* 0.2127      4031 */ ".",
        // 	/* 0.2119      1078 */ "sil",
        // 	/* 0.2117      1110 */ "rle",
        // 	/* 0.2115      1711 */ "ou",
        // 	/* 0.21        1829 */ "là",
        // 	/* 0.2096      1387 */ "hin",
        // 	/* 0.2066      1525 */ "gel",
        // 	/* 0.2065      2014 */ "édé",
        // 	/* 0.206       2140 */ "chi",
        // 	/* 0.206       1492 */ "qua",
        // 	/* 0.2053      1937 */ "ncu",
        // 	/* 0.2052      1863 */ "F",
        // 	/* 0.2035      1132 */ "ndé",
        // 	/* 0.2025      2916 */ "rné",
        // 	/* 0.2011      1653 */ "sir",
        // 	/* 0.2009      1114 */ "ch",
        // 	/* 0.2004      1648 */ "à",
        // 	/* 0.2          924 */ "sés",
        // 	/* 0.2         1363 */ "ll",
        // 	/* 0.1997       991 */ "oie",
        // 	/* 0.1989      1041 */ "ton",
        // 	/* 0.1987       198 */ "ron",
        // 	/* 0.1983      1963 */ "tti",
        // 	/* 0.1973      1645 */ "to",
        // 	/* 0.1965      1766 */ "mée",
        // 	/* 0.1947      1555 */ "vus",
        // 	/* 0.1945      2352 */ "am",
        // 	/* 0.1943      1491 */ "ua",
        // 	/* 0.1925      1289 */ "lli",
        // 	/* 0.1919      1057 */ "bas",
        // 	/* 0.1897       970 */ "jor",
        // 	/* 0.1895      1066 */ "dur",
        // 	/* 0.1892       740 */ "nu",
        // 	/* 0.189       2123 */ "'_s",
        // 	/* 0.189       2122 */ "_s",
        // 	/* 0.1882       596 */ "z",
        // 	/* 0.1881      1935 */ "rés",
        // 	/* 0.1873      1809 */ "Est",
        // 	/* 0.1871      2673 */ "V",
        // 	/* 0.1871      2709 */ "ki",
        // 	/* 0.187       1083 */ "bal",
        // 	/* 0.1866      1881 */ "ici",
        // 	/* 0.186       1370 */ "_2",
        // 	/* 0.1858      2330 */ "gi",
        // 	/* 0.1857       978 */ "tée",
        // 	/* 0.1853      1623 */ "tan",
        // 	/* 0.185       1894 */ "ous",
        // 	/* 0.1842      1007 */ "ni",
        // 	/* 0.1841       332 */ "fet",
        // 	/* 0.1841       654 */ "sie",
        // 	/* 0.184        597 */ "ez",
        // 	/* 0.1839      1323 */ "het",
        // 	/* 0.1836        72 */ "ion",
        // 	/* 0.1835      1030 */ "rk",
        // 	/* 0.1834       828 */ "vel",
        // 	/* 0.1832      1808 */ "rvé",
        // 	/* 0.1828      1622 */ "non",
        // 	/* 0.1823        55 */ "ées",
        // 	/* 0.1816      2139 */ "hi",
        // 	/* 0.18         979 */ "rté",
        // 	/* 0.1793      1092 */ "pin",
        // 	/* 0.1793      2382 */ "dés",
        // 	/* 0.1792      1712 */ "rou",
        // 	/* 0.1781      1891 */ "aud",
        // 	/* 0.1778       980 */ "o",
        // 	/* 0.1777      1452 */ "st",
        // 	/* 0.1776      1709 */ "îné",
        // 	/* 0.1771       689 */ "mis",
        // 	/* 0.1768      1740 */ "rin",
        // 	/* 0.1762       777 */ "enu",
        // 	/* 0.1755      2564 */ "hée",
        // 	/* 0.1754       401 */ "nté",
        // 	/* 0.175       1930 */ "blé",
        // 	/* 0.1746      2370 */ "nti",
        // 	/* 0.1731      1947 */ "lo",
        // 	/* 0.1729       719 */ "ôt",
        // 	/* 0.1726       805 */ "pre",
        // 	/* 0.1689       824 */ "vé",
        // 	/* 0.1689      1477 */ "ot",
        // 	/* 0.1689      2616 */ "lés",
        // 	/* 0.1679      2428 */ "ca",
        // 	/* 0.166       1771 */ "ck",
        // 	/* 0.1654      3119 */ "na",
        // 	/* 0.1651       864 */ "vés",
        // 	/* 0.1646       923 */ "ger",
        // 	/* 0.1641      1418 */ "urd",
        // 	/* 0.1632      1867 */ "lut",
        // 	/* 0.1623      2432 */ "pés",
        // 	/* 0.1617      2612 */ "sa",
        // 	/* 0.1616       825 */ "evé",
        // 	/* 0.1614       852 */ "pie",
        // 	/* 0.161        809 */ "nue",
        // 	/* 0.1607      1080 */ "ède",
        // 	/* 0.1599      2153 */ "yé",
        // 	/* 0.1599       736 */ "uve",
        // 	/* 0.1598      1619 */ "ige",
        // 	/* 0.1597      1485 */ "C",
        // 	/* 0.1592       649 */ "pal",
        // 	/* 0.1587       370 */ "as",
        // 	/* 0.1586       353 */ "p",
        // 	/* 0.1584       436 */ "lie",
        // 	/* 0.1573       417 */ "pon",
        // 	/* 0.157       1992 */ "uie",
        // 	/* 0.1569       910 */ "els",
        // 	/* 0.1563      1288 */ "li",
        // 	/* 0.1557      2369 */ "man",
        // 	/* 0.1557      1966 */ "und",
        // 	/* 0.1531       132 */ "que",
        // 	/* 0.1522        71 */ "on",
        // 	/* 0.1517       276 */ "les",
        // 	/* 0.151       1774 */ "uc",
        // 	/* 0.1503      1556 */ "cie",
        // 	/* 0.1502      3196 */ "do",
        // 	/* 0.1493       118 */ "és",
        // 	/* 0.1486      1876 */ "més",
        // 	/* 0.1485      2897 */ "pée",
        // 	/* 0.148         18 */ "i",
        // 	/* 0.147        172 */ "gne",
        // 	/* 0.1463      2531 */ "la",
        // 	/* 0.1452      2224 */ "tis",
        // 	/* 0.1449      1447 */ "lfe",
        // 	/* 0.1449      1487 */ "DIC",
        // 	/* 0.1446       393 */ "eu",
        // 	/* 0.1434       123 */ "ins",
        // 	/* 0.1429       468 */ "ié",
        // 	/* 0.1422      1183 */ "ose",
        // 	/* 0.1409      1912 */ "ti",
        // 	/* 0.1408       918 */ "or",
        // 	/* 0.1406      2479 */ "ed",
        // 	/* 0.1405      2154 */ "oyé",
        // 	/* 0.1395      1369 */ "2",
        // 	/* 0.1389       974 */ "tit",
        // 	/* 0.1376       157 */ "il",
        // 	/* 0.1367      1335 */ "_un",
        // 	/* 0.1359      1486 */ "IC",
        // 	/* 0.1357       230 */ "ble",
        // 	/* 0.1345       183 */ "lle",
        // 	/* 0.1343      1588 */ "lée",
        // 	/* 0.1334       339 */ "nd",
        // 	/* 0.1313      1453 */ "est",
        // 	/* 0.1305       675 */ "g",
        // 	/* 0.1305      1343 */ "oc",
        // 	/* 0.1302      1298 */ "dus",
        // 	/* 0.129        959 */ "uis",
        // 	/* 0.1278      1374 */ "ze",
        // 	/* 0.1271      1611 */ "ark",
        // 	/* 0.1232       593 */ "nus",
        // 	/* 0.1222       630 */ "met",
        // 	/* 0.1221       275 */ "ons",
        // 	/* 0.1218       977 */ "née",
        // 	/* 0.1217       849 */ "ls",
        // 	/* 0.1206      1459 */ "ppe",
        // 	/* 0.1206      1294 */ "lin",
        // 	/* 0.1198       149 */ "oi",
        // 	/* 0.1194       877 */ "vée",
        // 	/* 0.1188       714 */ "an",
        // 	/* 0.1183      2342 */ "S",
        // 	/* 0.118        131 */ "ue",
        // 	/* 0.1177       930 */ "uls",
        // 	/* 0.1156       710 */ "uté",
        // 	/* 0.1153      1757 */ "val",
        // 	/* 0.1149      1570 */ "ète",
        // 	/* 0.1149      1446 */ "fe",
        // 	/* 0.114        707 */ "ide",
        // 	/* 0.1138       499 */ "ial",
        // 	/* 0.1131      1375 */ "uze",
        // 	/* 0.1129         8 */ "bre",
        // 	/* 0.1127      1635 */ "sif",
        // 	/* 0.1117        77 */ "té",
        // 	/* 0.1104      1148 */ "urt",
        // 	/* 0.1103       388 */ "rre",
        // 	/* 0.1103      2071 */ "rti",
        // 	/* 0.1102       587 */ "oit",
        // 	/* 0.1091       182 */ "le",
        // 	/* 0.1078       255 */ "ces",
        // 	/* 0.1077      1561 */ "ms",
        // 	/* 0.1076      1432 */ "rve",
        // 	/* 0.1074       210 */ "di",
        // 	/* 0.1064       846 */ "uit",
        // 	/* 0.106        708 */ "sme",
        // 	/* 0.1051       261 */ "ème",
        // 	/* 0.1047        89 */ "ars",
        // 	/* 0.1043       190 */ "ité",
        // 	/* 0.1043      1172 */ "rne",
        // 	/* 0.1042       264 */ "ale",
        // 	/* 0.104         32 */ "es",
        // 	/* 0.1037       427 */ "us",
        // 	/* 0.1036       267 */ "ats",
        // 	/* 0.1034       349 */ "rêt",
        // 	/* 0.1016       245 */ "edi",
        // 	/* 0.1007       217 */ "u",
        // 	/* 0.1004       485 */ "eux",
        // 	/* 0.1002       158 */ "ail",
        // 	/* 0.1          348 */ "êt",
        // 	/* 0.0994      1853 */ "ma",
        // 	/* 0.0991        70 */ "n",
        // 	/* 0.0985       375 */ "nte",
        // 	/* 0.0978       510 */ "éen",
        // 	/* 0.0974        63 */ "ais",
        // 	/* 0.0971       676 */ "ng",
        // 	/* 0.0967      1123 */ "ri",
        // 	/* 0.0966         3 */ "upe",
        // 	/* 0.0966        78 */ "été",
        // 	/* 0.0959       448 */ "if",
        // 	/* 0.0957       277 */ "ard",
        // 	/* 0.0952       414 */ "ile",
        // 	/* 0.095        940 */ "son",
        // 	/* 0.0944       801 */ "yen",
        // 	/* 0.0943       407 */ "udi",
        // 	/* 0.0943      1819 */ "rel",
        // 	/* 0.0937        31 */ "s",
        // 	/* 0.0932       297 */ "tés",
        // 	/* 0.0929       213 */ "but",
        // 	/* 0.0929       103 */ "res",
        // 	/* 0.0927       919 */ "sor",
        // 	/* 0.0926        74 */ "ire",
        // 	/* 0.0923       150 */ "loi",
        // 	/* 0.0922       434 */ "lar",
        // 	/* 0.0921       215 */ "ts",
        // 	/* 0.0918      1096 */ "m",
        // 	/* 0.0916       309 */ "el",
        // 	/* 0.0907       764 */ "cul",
        // 	/* 0.0906       110 */ "mie",
        // 	/* 0.0904      1028 */ "vue",
        // 	/* 0.09         987 */ "ive",
        // 	/* 0.0899       449 */ "tif",
        // 	/* 0.0899        62 */ "is",
        // 	/* 0.0899       168 */ "mps",
        // 	/* 0.0899       950 */ "hat",
        // 	/* 0.0896       866 */ "rks",
        // 	/* 0.0896       838 */ "une",
        // 	/* 0.0895       399 */ "nts",
        // 	/* 0.0893        24 */ "nce",
        // 	/* 0.0892       212 */ "ut",
        // 	/* 0.0889       513 */ "cès",
        // 	/* 0.0888      1228 */ "ac",
        // 	/* 0.0884       304 */ "ode",
        // 	/* 0.0883       203 */ "ois",
        // 	/* 0.088       1977 */ "ta",
        // 	/* 0.0878       321 */ "aux",
        // 	/* 0.0878       346 */ "ril",
        // 	/* 0.0878      1735 */ "eté",
        // 	/* 0.0876       211 */ "rdi",
        // 	/* 0.0876       683 */ "cav",
        // 	/* 0.0873       433 */ "ar",
        // 	/* 0.0872      1176 */ "lit",
        // 	/* 0.0872       376 */ "ime",
        // 	/* 0.0871       696 */ "hme",
        // 	/* 0.0869       981 */ "ro",
        // 	/* 0.0858       586 */ "ple",
        // 	/* 0.0857      1437 */ "rit",
        // 	/* 0.0854       911 */ "yés",
        // 	/* 0.0853       366 */ "cit",
        // 	/* 0.0851       897 */ "cks",
        // 	/* 0.0851      1088 */ "pôt",
        // 	/* 0.0847       320 */ "ux",
        // 	/* 0.0845       556 */ "pes",
        // 	/* 0.0843       906 */ "ids",
        // 	/* 0.084        291 */ "ndi",
        // 	/* 0.0838       167 */ "ps",
        // 	/* 0.0836      1037 */ "ève",
        // 	/* 0.0835       681 */ "v",
        // 	/* 0.0835        50 */ "let",
        // 	/* 0.0835       192 */ "urs",
        // 	/* 0.0834       290 */ "hés",
        // 	/* 0.083        294 */ "ers",
        // 	/* 0.0828       382 */ "ain",
        // 	/* 0.0828       840 */ "E",
        // 	/* 0.0823      1090 */ "ivé",
        // 	/* 0.0816       605 */ "vre",
        // 	/* 0.0812       642 */ "ifs",
        // 	/* 0.0811        38 */ "hé",
        // 	/* 0.0811        39 */ "ché",
        // 	/* 0.081        757 */ "cle",
        // 	/* 0.0806       342 */ "nds",
        // 	/* 0.0803         2 */ "pe",
        // 	/* 0.0803       685 */ "ges",
        // 	/* 0.08         402 */ "get",
        // 	/* 0.079       1660 */ "io",
        // 	/* 0.079        566 */ "fre",
        // 	/* 0.0786       140 */ "l",
        // 	/* 0.0784       295 */ "îne",
        // 	/* 0.0777       865 */ "ks",
        // 	/* 0.0772       385 */ "rée",
        // 	/* 0.0772       728 */ "art",
        // 	/* 0.0772       381 */ "in",
        // 	/* 0.077        146 */ "age",
        // 	/* 0.0768       469 */ "tié",
        // 	/* 0.0764       319 */ "x",
        // 	/* 0.0763       509 */ "en",
        // 	/* 0.0763       641 */ "fs",
        // 	/* 0.076        682 */ "av",
        // 	/* 0.0757       763 */ "ul",
        // 	/* 0.0754       730 */ "mne",
        // 	/* 0.0749       613 */ "rat",
        // 	/* 0.0748      2114 */ "T",
        // 	/* 0.0745       706 */ "tut",
        // 	/* 0.0742       645 */ "gie",
        // 	/* 0.074        122 */ "ns",
        // 	/* 0.0734       677 */ "ing",
        // 	/* 0.0733       539 */ "nne",
        // 	/* 0.0732       739 */ "nal",
        // 	/* 0.0732        88 */ "rs",
        // 	/* 0.0725       244 */ "anc",
        // 	/* 0.0725      1065 */ "ert",
        // 	/* 0.0722        45 */ "ier",
        // 	/* 0.0714       907 */ "rès",
        // 	/* 0.0705       459 */ "at",
        // 	/* 0.0704       240 */ "ues",
        // 	/* 0.0704       868 */ "nat",
        // 	/* 0.0703      1005 */ "os",
        // 	/* 0.0702      1482 */ "net",
        // 	/* 0.0701       633 */ "ies",
        // 	/* 0.0701        23 */ "ce",
        // 	/* 0.07         464 */ "ort",
        // 	/* 0.07         154 */ "eur",
        // 	/* 0.0698      1106 */ "ôts",
        // 	/* 0.0697       483 */ "aie",
        // 	/* 0.0696      1494 */ "irs",
        // 	/* 0.0696       661 */ "lic",
        // 	/* 0.0695       467 */ "ôle",
        // 	/* 0.0693       227 */ "nes",
        // 	/* 0.069        128 */ "ord",
        // 	/* 0.069        301 */ "rie",
        // 	/* 0.0689       287 */ "tre",
        // 	/* 0.0688      1328 */ "N",
        // 	/* 0.0687       731 */ "êts",
        // 	/* 0.0685       455 */ "çon",
        // 	/* 0.0681       762 */ "ets",
        // 	/* 0.0679       520 */ "ien",
        // 	/* 0.0676       916 */ "bat",
        // 	/* 0.0675      1672 */ "vie",
        // 	/* 0.0672      1399 */ "ai",
        // 	/* 0.0671       850 */ "ils",
        // 	/* 0.0671       512 */ "ès",
        // 	/* 0.067        440 */ "ule",
        // 	/* 0.0664       224 */ "ère",
        // 	/* 0.0657       243 */ "nc",
        // 	/* 0.0657        33 */ "ses",
        // 	/* 0.0657       127 */ "rd",
        // 	/* 0.0656       447 */ "f",
        // 	/* 0.0655       735 */ "ve",
        // 	/* 0.0653       205 */ "nde",
        // 	/* 0.0651       618 */ "xte",
        // 	/* 0.0648       284 */ "ste",
        // 	/* 0.0646       141 */ "al",
        // 	/* 0.0645      1868 */ "rde",
        // 	/* 0.0645       126 */ "d",
        // 	/* 0.0644       341 */ "ds",
        // 	/* 0.0642        96 */ "sse",
        // 	/* 0.064        452 */ "int",
        // 	/* 0.0637       628 */ "rce",
        // 	/* 0.0631       551 */ "nel",
        // 	/* 0.063        421 */ "des",
        // 	/* 0.0629       941 */ "rds",
        // 	/* 0.0629       460 */ "tat",
        // 	/* 0.0628       620 */ "ude",
        // 	/* 0.0625       799 */ "ves",
        // 	/* 0.0624       316 */ "tes",
        // 	/* 0.0619       119 */ "iés",
        // 	/* 0.0617      1074 */ "eil",
        // 	/* 0.061        495 */ "tte",
        // 	/* 0.0603       651 */ "gue",
        // 	/* 0.059        964 */ "ans",
        // 	/* 0.0588      1154 */ "tin",
        // 	/* 0.0583       109 */ "ie",
        // 	/* 0.0581       622 */ "ond",
        // 	/* 0.058       1386 */ "mum",
        // 	/* 0.0578         7 */ "re",
        // 	/* 0.0573       153 */ "ur",
        // 	/* 0.0573       718 */ "rts",
        // 	/* 0.0573       473 */ "ute",
        // 	/* 0.0572       901 */ "cat",
        // 	/* 0.057        328 */ "tie",
        // 	/* 0.057       1170 */ "use",
        // 	/* 0.0568       625 */ "ume",
        // 	/* 0.0564      1045 */ "pel",
        // 	/* 0.0563       754 */ "oin",
        // 	/* 0.0558       608 */ "cs",
        // 	/* 0.0557       470 */ "nie",
        // 	/* 0.0552       848 */ "ipe",
        // 	/* 0.0547       303 */ "jet",
        // 	/* 0.0545       171 */ "ne",
        // 	/* 0.0543       709 */ "mes",
        // 	/* 0.0541       487 */ "ens",
        // 	/* 0.0541      1339 */ "hes",
        // 	/* 0.0539       609 */ "ics",
        // 	/* 0.0529       216 */ "its",
        // 	/* 0.0527       715 */ "lan",
        // 	/* 0.0527       260 */ "me",
        // 	/* 0.0518       242 */ "c",
        // 	/* 0.0518       673 */ "ole",
        // 	/* 0.0518       616 */ "our",
        // 	/* 0.0515       145 */ "ge",
        // 	/* 0.0505       334 */ "rte",
        // 	/* 0.0498       660 */ "ic",
        // 	/* 0.0483       819 */ "ix",
        // 	/* 0.0481       219 */ "eau",
        // 	/* 0.0475       770 */ "ice",
        // 	/* 0.0472      1040 */ "nge",
        // 	/* 0.0469       986 */ "iel",
        // 	/* 0.046         49 */ "et",
        // 	/* 0.0453       142 */ "tal",
        // 	/* 0.0447       557 */ "ral",
        // 	/* 0.0445       218 */ "au",
        // 	/* 0.0438       703 */ "pte",
        // 	/* 0.0436       283 */ "te",
        // 	/* 0.0435       204 */ "de",
        // 	/* 0.043        435 */ "ure",
        // 	/* 0.0418       847 */ "nse",
        // 	/* 0.0414       611 */ "che",
        // 	/* 0.0412       325 */ "rme",
        // 	/* 0.0407       269 */ "ine",
        // 	/* 0.04          95 */ "se",
        // 	/* 0.0397       693 */ "ête",
        // 	/* 0.0389       610 */ "he",
        // 	/* 0.0388       136 */ "ise",
        // 	/* 0.0387      1097 */ "um",
        // 	/* 0.037        463 */ "rt",
        // 	/* 0.0327       839 */ "ite",
        // 	/* 0.0278       479 */ "rse",
        // 	/* 0.026          1 */ "e"};


        // // GR > 0.35 reordered
        // static std::string ig_sufs[] = {
        // 	/* 0.7522      1397 */ "ro-",
        // 	/* 0.7439       335 */ "-il",
        // 	/* 0.7436      1175 */ "si-",
        // 	/* 0.7297      1303 */ "ce-",
        // 	/* 0.6958      2101 */ "ra-",
        // 	/* 0.655       2239 */ "ni-",
        // 	/* 0.6536       808 */ "qu'",
        // 	/* 0.6492       966 */ "-on",
        // 	/* 0.6414      1583 */ "mi-",
        // 	/* 0.6348       177 */ "lui",
        // 	/* 0.5736       383 */ "ant",
        // 	/* 0.5723      1137 */ "_ci",
        // 	/* 0.5608       528 */ "cun",
        // 	/* 0.5343      2688 */ "_on",
        // 	/* 0.5053      1058 */ "_si",
        // 	/* 0.4985      1558 */ "uoi",
        // 	/* 0.4695      1860 */ "_s'",
        // 	/* 0.4604        14 */ "ait",
        // 	/* 0.4576       680 */ "ter",
        // 	/* 0.4543       560 */ "ser",
        // 	/* 0.4404       664 */ "rer",
        // 	/* 0.4291      1104 */ "uer",
        // 	/* 0.3934      2609 */ "_où",
        // 	/* 0.3901       949 */ "cer",
        // 	/* 0.3627       137 */ "nsi",
        // 	/* 0.3619      1205 */ "rir",
        // 	/* 0.3608       722 */ "ner",
        // 	/* 0.3603       189 */ "ncé",
        // 	/* 0.3598      1002 */ "tir",
        // 	/* 0.3545        20 */ "ssi",
        // 	/* 0.7927      1174 */ "i-",
        // 	/* 0.7563      1396 */ "o-",
        // 	/* 0.6958      2100 */ "a-",
        // 	/* 0.6851      1302 */ "e-",
        // 	/* 0.6536       807 */ "u'",
        // 	/* 0.4695      1859 */ "s'",
        // 	/* 0.4565        44 */ "er",
        // 	/* 0.3934      2608 */ "où",
        // 	/* 0.3847       176 */ "ui",
        // 	/* 0.3817      1136 */ "ci",
        // 	/* 0.3737        19 */ "si",
        // 	/* 0.3639       188 */ "cé",
        // 	/* 0.3562        85 */ "ir",
        // 	/* 0.9526      1173 */ "-",
        // 	/* 0.6522       806 */ "'",
        // 	/* 0.4103        43 */ "r",
        // 	/* 0.3934      2607 */ "ù"
        // };

        // static std::vector<std::string> suffixes(ig_sufs,ig_sufs+47);

        // // GR > 0.5 reordered
        // static std::string ig_sufs[] = {
        // 	/* 0.7522      1397 */ "ro-",
        // 	/* 0.7439       335 */ "-il",
        // 	/* 0.7436      1175 */ "si-",
        // 	/* 0.7297      1303 */ "ce-",
        // 	/* 0.6958      2101 */ "ra-",
        // 	/* 0.655       2239 */ "ni-",
        // 	/* 0.6536       808 */ "qu'",
        // 	/* 0.6492       966 */ "-on",
        // 	/* 0.6414      1583 */ "mi-",
        // 	/* 0.6348       177 */ "lui",
        // 	/* 0.5736       383 */ "ant",
        // 	/* 0.5723      1137 */ "_ci",
        // 	/* 0.5608       528 */ "cun",
        // 	/* 0.5343      2688 */ "_on",
        // 	/* 0.5053      1058 */ "_si",
        // 	/* 0.7927      1174 */ "i-",
        // 	/* 0.7563      1396 */ "o-",
        // 	/* 0.6958      2100 */ "a-",
        // 	/* 0.6851      1302 */ "e-",
        // 	/* 0.6536       807 */ "u'",
        // 	/* 0.9526      1173 */ "-",
        // 	/* 0.6522       806 */ "'",
        // };

        // static std::vector<std::string> suffixes(ig_sufs,ig_sufs+22);



        bool found = false;
        for(std::vector<std::string>::const_iterator i(suffixes.begin()); i != suffixes.end(); ++i) {
            //	std::cout << "testing " << word_lower_case << " against " << *i << std::endl;
            if(ends_with(word_lower_case, *i)) {
                //	  std::cout << "testing " << word_lower_case << " against " << *i << std::endl;
                word_class.append("-"); word_class.append(*i);
                found = true;
                break;
            }
        }

        // if(!found) {

        // 	for(std::vector<std::string>::const_iterator i(V_suffixes.begin()); i != V_suffixes.end(); ++i) {
        // 	  if(ends_with(word_lower_case, *i)) {
        // 	    word_class.append("-V"); word_class.append(*i);
        // 	    found = true;
        // 	    break;
        // 	  }
        // 	}
        // }


    }
    
    
    //std::cout << "word class " << word_class << std::endl;

    //    std::cout << word << " " << position << ": " << word_class << std::endl;

    
    return word_class;
    
}
